{"ast":null,"code":"import BN from 'bn.js';\nimport hash from 'hash.js';\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, basedir, module) {\n  return module = {\n    path: basedir,\n    exports: {},\n    require: function (path, base) {\n      return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n    }\n  }, fn(module, module.exports), module.exports;\n}\n\nfunction getDefaultExportFromNamespaceIfPresent(n) {\n  return n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;\n}\n\nfunction getDefaultExportFromNamespaceIfNotNamed(n) {\n  return n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;\n}\n\nfunction getAugmentedNamespace(n) {\n  if (n.__esModule) return n;\n  var a = Object.defineProperty({}, '__esModule', {\n    value: true\n  });\n  Object.keys(n).forEach(function (k) {\n    var d = Object.getOwnPropertyDescriptor(n, k);\n    Object.defineProperty(a, k, d.get ? d : {\n      enumerable: true,\n      get: function () {\n        return n[k];\n      }\n    });\n  });\n  return a;\n}\n\nfunction commonjsRequire() {\n  throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar minimalisticAssert = assert;\n\nfunction assert(val, msg) {\n  if (!val) throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r) throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);\n};\n\nvar utils_1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var utils = exports;\n\n  function toArray(msg, enc) {\n    if (Array.isArray(msg)) return msg.slice();\n    if (!msg) return [];\n    var res = [];\n\n    if (typeof msg !== 'string') {\n      for (var i = 0; i < msg.length; i++) res[i] = msg[i] | 0;\n\n      return res;\n    }\n\n    if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0) msg = '0' + msg;\n\n      for (var i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));\n    } else {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi) res.push(hi, lo);else res.push(lo);\n      }\n    }\n\n    return res;\n  }\n\n  utils.toArray = toArray;\n\n  function zero2(word) {\n    if (word.length === 1) return '0' + word;else return word;\n  }\n\n  utils.zero2 = zero2;\n\n  function toHex(msg) {\n    var res = '';\n\n    for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));\n\n    return res;\n  }\n\n  utils.toHex = toHex;\n\n  utils.encode = function encode(arr, enc) {\n    if (enc === 'hex') return toHex(arr);else return arr;\n  };\n});\nvar utils_1$1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var utils = exports;\n  utils.assert = minimalisticAssert;\n  utils.toArray = utils_1.toArray;\n  utils.zero2 = utils_1.zero2;\n  utils.toHex = utils_1.toHex;\n  utils.encode = utils_1.encode; // Represent num in a w-NAF form\n\n  function getNAF(num, w, bits) {\n    var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n    naf.fill(0);\n    var ws = 1 << w + 1;\n    var k = num.clone();\n\n    for (var i = 0; i < naf.length; i++) {\n      var z;\n      var mod = k.andln(ws - 1);\n\n      if (k.isOdd()) {\n        if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;\n        k.isubn(z);\n      } else {\n        z = 0;\n      }\n\n      naf[i] = z;\n      k.iushrn(1);\n    }\n\n    return naf;\n  }\n\n  utils.getNAF = getNAF; // Represent k1, k2 in a Joint Sparse Form\n\n  function getJSF(k1, k2) {\n    var jsf = [[], []];\n    k1 = k1.clone();\n    k2 = k2.clone();\n    var d1 = 0;\n    var d2 = 0;\n    var m8;\n\n    while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n      // First phase\n      var m14 = k1.andln(3) + d1 & 3;\n      var m24 = k2.andln(3) + d2 & 3;\n      if (m14 === 3) m14 = -1;\n      if (m24 === 3) m24 = -1;\n      var u1;\n\n      if ((m14 & 1) === 0) {\n        u1 = 0;\n      } else {\n        m8 = k1.andln(7) + d1 & 7;\n        if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;\n      }\n\n      jsf[0].push(u1);\n      var u2;\n\n      if ((m24 & 1) === 0) {\n        u2 = 0;\n      } else {\n        m8 = k2.andln(7) + d2 & 7;\n        if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;\n      }\n\n      jsf[1].push(u2); // Second phase\n\n      if (2 * d1 === u1 + 1) d1 = 1 - d1;\n      if (2 * d2 === u2 + 1) d2 = 1 - d2;\n      k1.iushrn(1);\n      k2.iushrn(1);\n    }\n\n    return jsf;\n  }\n\n  utils.getJSF = getJSF;\n\n  function cachedProperty(obj, name, computer) {\n    var key = '_' + name;\n\n    obj.prototype[name] = function cachedProperty() {\n      return this[key] !== undefined ? this[key] : this[key] = computer.call(this);\n    };\n  }\n\n  utils.cachedProperty = cachedProperty;\n\n  function parseBytes(bytes) {\n    return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;\n  }\n\n  utils.parseBytes = parseBytes;\n\n  function intFromLE(bytes) {\n    return new BN(bytes, 'hex', 'le');\n  }\n\n  utils.intFromLE = intFromLE;\n});\n'use strict';\n\nvar getNAF = utils_1$1.getNAF;\nvar getJSF = utils_1$1.getJSF;\nvar assert$1 = utils_1$1.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16); // Use Montgomery, when there is no fast reduction for the prime\n\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p); // Useful for many curves\n\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red); // Curve configuration, optional\n\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed); // Temporary arrays\n\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n  this._bitLength = this.n ? this.n.bitLength() : 0; // Generalized Greg Maxwell's trick\n\n  var adjustCount = this.n && this.p.div(this.n);\n\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\n\nvar base = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert$1(p.precomputed);\n\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3; // Translate into more windowed form\n\n  var repr = [];\n  var j;\n  var nafW;\n\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n\n    for (var l = j + doubles.step - 1; l >= j; l--) nafW = (nafW << 1) + naf[l];\n\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());\n    }\n\n    a = a.add(b);\n  }\n\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4; // Precompute window\n\n  var nafPoints = p._getNAFPoints(w);\n\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points; // Get NAF form\n\n  var naf = getNAF(k, w, this._bitLength); // Add `this`*(N+1) for every w-NAF index\n\n  var acc = this.jpoint(null, null, null);\n\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--) l++;\n\n    if (i >= 0) l++;\n    acc = acc.dblp(l);\n    if (i < 0) break;\n    var z = naf[i];\n    assert$1(z !== 0);\n\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());\n    }\n  }\n\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3; // Fill all arrays\n\n  var max = 0;\n  var i;\n  var j;\n  var p;\n\n  for (i = 0; i < len; i++) {\n    p = points[i];\n\n    var nafPoints = p._getNAFPoints(defW);\n\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  } // Comb small window NAFs\n\n\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [points[a],\n    /* 1 */\n    null,\n    /* 3 */\n    null,\n    /* 5 */\n    points[b]\n    /* 7 */\n    ]; // Try to avoid Projective points, if possible\n\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [-3,\n    /* -1 -1 */\n    -1,\n    /* -1 0 */\n    -5,\n    /* -1 1 */\n    -7,\n    /* 0 -1 */\n    0,\n    /* 0 0 */\n    7,\n    /* 0 1 */\n    5,\n    /* 1 -1 */\n    1,\n    /* 1 0 */\n    3\n    /* 1 1 */\n    ];\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0) zero = false;\n      }\n\n      if (!zero) break;\n      k++;\n      i--;\n    }\n\n    if (i >= 0) k++;\n    acc = acc.dblp(k);\n    if (i < 0) break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();\n      if (p.type === 'affine') acc = acc.mixedAdd(p);else acc = acc.add(p);\n    }\n  } // Zeroify references\n\n\n  for (i = 0; i < len; i++) wnd[i] = null;\n\n  if (jacobianResult) return acc;else return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\n\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function\n  /*other*/\neq() {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils_1$1.toArray(bytes, enc);\n  var len = this.p.byteLength(); // uncompressed, hybrid-odd, hybrid-even\n\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06) assert$1(bytes[bytes.length - 1] % 2 === 0);else if (bytes[0] === 0x07) assert$1(bytes[bytes.length - 1] % 2 === 1);\n    var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n  if (compact) return [this.getY().isEven() ? 0x02 : 0x03].concat(x);\n  return [0x04].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils_1$1.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed) return this;\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed) return false;\n  var doubles = this.precomputed.doubles;\n  if (!doubles) return false;\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n  var doubles = [this];\n  var acc = this;\n\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++) acc = acc.dbl();\n\n    doubles.push(acc);\n  }\n\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n  var res = [this];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n\n  for (var i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);\n\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n\n  for (var i = 0; i < k; i++) r = r.dbl();\n\n  return r;\n};\n\nvar inherits_browser = createCommonjsModule(function (module) {\n  if (typeof Object.create === 'function') {\n    // implementation from standard node.js 'util' module\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n        ctor.prototype = Object.create(superCtor.prototype, {\n          constructor: {\n            value: ctor,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n      }\n    };\n  } else {\n    // old school shim for old browsers\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n\n        var TempCtor = function () {};\n\n        TempCtor.prototype = superCtor.prototype;\n        ctor.prototype = new TempCtor();\n        ctor.prototype.constructor = ctor;\n      }\n    };\n  }\n});\n'use strict';\n\nvar assert$2 = utils_1$1.assert;\n\nfunction ShortCurve(conf) {\n  base.call(this, 'short', conf);\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0; // If the curve is endomorphic, precalculate beta and lambda\n\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\n\ninherits_browser(ShortCurve, base);\nvar short_1 = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return; // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n\n  var beta;\n  var lambda;\n\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p); // Choose the smallest beta\n\n\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  } // Get basis vectors, used for balanced length-two representation\n\n\n  var basis;\n\n  if (conf.basis) {\n    basis = conf.basis.map(function (vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [l1, l2];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2)); // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1); // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n\n  var a0;\n  var b0; // First vector\n\n  var a1;\n  var b1; // Second vector\n\n  var a2;\n  var b2;\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n\n    prevR = r;\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n\n  a2 = r.neg();\n  b2 = x;\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  } // Normalize signs\n\n\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [{\n    a: a1,\n    b: b1\n  }, {\n    a: a2,\n    b: b2\n  }];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b); // Calculate answer\n\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return {\n    k1: k1,\n    k2: k2\n  };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red) x = x.toRed(this.red);\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point'); // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf) return true;\n  var x = point.x;\n  var y = point.y;\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n\n    var p = points[i];\n\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult); // Clean-up references to points and coefficients\n\n\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  base.BasePoint.call(this, curve, 'affine');\n\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16); // Force redgomery representation when loading from JSON\n\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\n\ninherits_browser(Point, base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo) return;\n  var pre = this.precomputed;\n  if (pre && pre.beta) return pre.beta;\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n\n  if (pre) {\n    var curve = this.curve;\n\n    var endoMul = function (p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed) return [this.x, this.y];\n  return [this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  }];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string') obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2]) return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [res].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [res].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf) return p; // P + O = P\n\n  if (p.inf) return this; // P + P = 2P\n\n  if (this.eq(p)) return this.dbl(); // P + (-P) = O\n\n  if (this.neg().eq(p)) return this.curve.point(null, null); // P + Q = O\n\n  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf) return this; // 2P = O\n\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);\n  var a = this.curve.a;\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity()) return this;else if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf) return this;\n  var res = this.curve.point(this.x, this.y.redNeg());\n\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n\n    var negate = function (p) {\n      return p.neg();\n    };\n\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf) return this.curve.jpoint(null, null, null);\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  base.BasePoint.call(this, curve, 'jacobian');\n\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n\n  if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  this.zOne = this.z === this.curve.one;\n}\n\ninherits_browser(JPoint, base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity()) return this.curve.point(null, null);\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity()) return p; // P + O = P\n\n  if (p.isInfinity()) return this; // 12M + 4S + 7A\n\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity()) return p.toJ(); // P + O = P\n\n  if (p.isInfinity()) return this; // 8M + 3S + 7A\n\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0) return this;\n  if (this.isInfinity()) return this;\n  if (!pow) return this.dbl();\n  var i;\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n\n    for (i = 0; i < pow; i++) r = r.dbl();\n\n    return r;\n  } // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n\n\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr(); // Reuse results\n\n  var jyd = jy.redAdd(jy);\n\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity()) return this;\n  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a; a = 0\n\n    var m = xx.redAdd(xx).redIAdd(xx); // T = M ^ 2 - 2*S\n\n    var t = m.redSqr().redISub(s).redISub(s); // 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2*Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n    // A = X1^2\n    var a = this.x.redSqr(); // B = Y1^2\n\n    var b = this.y.redSqr(); // C = B^2\n\n    var c = b.redSqr(); // D = 2 * ((X1 + B)^2 - A - C)\n\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d); // E = 3 * A\n\n    var e = a.redAdd(a).redIAdd(a); // F = E^2\n\n    var f = e.redSqr(); // 8 * C\n\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8); // X3 = F - 2 * D\n\n    nx = f.redISub(d).redISub(d); // Y3 = E * (D - X3) - 8 * C\n\n    ny = e.redMul(d.redISub(nx)).redISub(c8); // Z3 = 2 * Y1 * Z1\n\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a\n\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a); // T = M^2 - 2 * S\n\n    var t = m.redSqr().redISub(s).redISub(s); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2 * Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n    // delta = Z1^2\n    var delta = this.z.redSqr(); // gamma = Y1^2\n\n    var gamma = this.y.redSqr(); // beta = X1 * gamma\n\n    var beta = this.x.redMul(gamma); // alpha = 3 * (X1 - delta) * (X1 + delta)\n\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha); // X3 = alpha^2 - 8 * beta\n\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8); // Z3 = (Y1 + Z1)^2 - gamma - delta\n\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta); // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a; // 4M + 6S + 10A\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA) return this.dbl().add(this); // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n  // XX = X1^2\n\n  var xx = this.x.redSqr(); // YY = Y1^2\n\n  var yy = this.y.redSqr(); // ZZ = Z1^2\n\n  var zz = this.z.redSqr(); // YYYY = YY^2\n\n  var yyyy = yy.redSqr(); // M = 3 * XX + a * ZZ2; a = 0\n\n  var m = xx.redAdd(xx).redIAdd(xx); // MM = M^2\n\n  var mm = m.redSqr(); // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm); // EE = E^2\n\n  var ee = e.redSqr(); // T = 16*YYYY\n\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t); // U = (M + E)^2 - MM - EE - T\n\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t); // X3 = 4 * (X1 * EE - 4 * YY * U)\n\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx); // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny); // Z3 = (Z1 + E)^2 - ZZ - EE\n\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine') return this.eq(p.toJ());\n  if (this === p) return true; // x1 * z2^2 == x2 * z1^2\n\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false; // y1 * z2^3 == y2 * z1^3\n\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0) return true;\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0) return false;\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0) return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nvar curve_1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var curve = exports;\n  curve.base = base;\n  curve.short = short_1;\n  curve.mont =\n  /*RicMoo:ethers:require(./mont)*/\n  null;\n  curve.edwards =\n  /*RicMoo:ethers:require(./edwards)*/\n  null;\n});\nvar curves_1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var curves = exports;\n  var assert = utils_1$1.assert;\n\n  function PresetCurve(options) {\n    if (options.type === 'short') this.curve = new curve_1.short(options);else if (options.type === 'edwards') this.curve = new curve_1.edwards(options);else this.curve = new curve_1.mont(options);\n    this.g = this.curve.g;\n    this.n = this.curve.n;\n    this.hash = options.hash;\n    assert(this.g.validate(), 'Invalid curve');\n    assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n  }\n\n  curves.PresetCurve = PresetCurve;\n\n  function defineCurve(name, options) {\n    Object.defineProperty(curves, name, {\n      configurable: true,\n      enumerable: true,\n      get: function () {\n        var curve = new PresetCurve(options);\n        Object.defineProperty(curves, name, {\n          configurable: true,\n          enumerable: true,\n          value: curve\n        });\n        return curve;\n      }\n    });\n  }\n\n  defineCurve('p192', {\n    type: 'short',\n    prime: 'p192',\n    p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n    b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n    n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012', '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']\n  });\n  defineCurve('p224', {\n    type: 'short',\n    prime: 'p224',\n    p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n    b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n    n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21', 'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']\n  });\n  defineCurve('p256', {\n    type: 'short',\n    prime: null,\n    p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n    a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n    b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n    n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296', '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']\n  });\n  defineCurve('p384', {\n    type: 'short',\n    prime: null,\n    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 ffffffff',\n    a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 fffffffc',\n    b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' + '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n    n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' + 'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n    hash: hash.sha384,\n    gRed: false,\n    g: ['aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' + '5502f25d bf55296c 3a545e38 72760ab7', '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' + '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f']\n  });\n  defineCurve('p521', {\n    type: 'short',\n    prime: null,\n    p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff',\n    a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff fffffffc',\n    b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' + '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' + '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n    n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' + 'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n    hash: hash.sha512,\n    gRed: false,\n    g: ['000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' + '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' + 'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66', '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' + '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' + '3fad0761 353c7086 a272c240 88be9476 9fd16650']\n  });\n  defineCurve('curve25519', {\n    type: 'mont',\n    prime: 'p25519',\n    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n    a: '76d06',\n    b: '1',\n    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['9']\n  });\n  defineCurve('ed25519', {\n    type: 'edwards',\n    prime: 'p25519',\n    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n    a: '-1',\n    c: '1',\n    // -121665 * (121666^(-1)) (mod P)\n    d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a', // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658']\n  });\n  var pre;\n\n  try {\n    pre =\n    /*RicMoo:ethers:require(./precomputed/secp256k1)*/\n    null.crash();\n  } catch (e) {\n    pre = undefined;\n  }\n\n  defineCurve('secp256k1', {\n    type: 'short',\n    prime: 'k256',\n    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n    a: '0',\n    b: '7',\n    n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n    h: '1',\n    hash: hash.sha256,\n    // Precomputed endomorphism\n    beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n    lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n    basis: [{\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    }, {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }],\n    gRed: false,\n    g: ['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798', '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8', pre]\n  });\n});\n'use strict';\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');\n  minimalisticAssert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._init(entropy, nonce, pers);\n}\n\nvar hmacDrbg = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000; // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac().update(this.V).update([0x00]);\n\n  if (seed) kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed) return;\n  this.K = this._hmac().update(this.V).update([0x01]).update(seed).digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils_1.toArray(entropy, entropyEnc);\n  add = utils_1.toArray(add, addEnc);\n  minimalisticAssert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval) throw new Error('Reseed is required'); // Optional encoding\n\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  } // Optional additional data\n\n\n  if (add) {\n    add = utils_1.toArray(add, addEnc || 'hex');\n\n    this._update(add);\n  }\n\n  var temp = [];\n\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n\n  this._update(add);\n\n  this._reseed++;\n  return utils_1.encode(res, enc);\n};\n\n'use strict';\n\nvar assert$3 = utils_1$1.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null; // KeyPair(ec, { priv: ..., pub: ... })\n\n  if (options.priv) this._importPrivate(options.priv, options.privEnc);\n  if (options.pub) this._importPublic(options.pub, options.pubEnc);\n}\n\nvar key = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair) return pub;\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair) return priv;\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n  if (pub.isInfinity()) return {\n    result: false,\n    reason: 'Invalid public key'\n  };\n  if (!pub.validate()) return {\n    result: false,\n    reason: 'Public key is not a point'\n  };\n  if (!pub.mul(this.ec.curve.n).isInfinity()) return {\n    result: false,\n    reason: 'Public key * N != O'\n  };\n  return {\n    result: true,\n    reason: null\n  };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub) this.pub = this.ec.g.mul(this.priv);\n  if (!enc) return this.pub;\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16); // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert$3(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' || this.ec.curve.type === 'edwards') {\n      assert$3(key.x && key.y, 'Need both x and y coordinate');\n    }\n\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n\n  this.pub = this.ec.curve.decodePoint(key, enc);\n}; // ECDH\n\n\nKeyPair.prototype.derive = function derive(pub) {\n  if (!pub.validate()) {\n    assert$3(pub.validate(), 'public point not validated');\n  }\n\n  return pub.mul(this.priv).getX();\n}; // ECDSA\n\n\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n'use strict';\n\nvar assert$4 = utils_1$1.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature) return options;\n  if (this._importDER(options, enc)) return;\n  assert$4(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined) this.recoveryParam = null;else this.recoveryParam = options.recoveryParam;\n}\n\nvar signature = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n\n  var octetLen = initial & 0xf; // Indefinite length or overflow\n\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  } // Leading zeroes\n\n\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n\n  if (i === 0) {\n    return buf;\n  }\n\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils_1$1.toArray(data, enc);\n  var p = new Position();\n\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n\n  var len = getLength(data, p);\n\n  if (len === false) {\n    return false;\n  }\n\n  if (len + p.place !== data.length) {\n    return false;\n  }\n\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n\n  var rlen = getLength(data, p);\n\n  if (rlen === false) {\n    return false;\n  }\n\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n\n  var slen = getLength(data, p);\n\n  if (slen === false) {\n    return false;\n  }\n\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n\n  var s = data.slice(p.place, slen + p.place);\n\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n\n  while (--octets) {\n    arr.push(len >>> (octets << 3) & 0xff);\n  }\n\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray(); // Pad values\n\n  if (r[0] & 0x80) r = [0].concat(r); // Pad values\n\n  if (s[0] & 0x80) s = [0].concat(s);\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  var arr = [0x02];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [0x30];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils_1$1.encode(res, enc);\n};\n\n'use strict';\n\nvar rand =\n/*RicMoo:ethers:require(brorand)*/\nfunction () {\n  throw new Error('unsupported');\n};\n\nvar assert$5 = utils_1$1.assert;\n\nfunction EC(options) {\n  if (!(this instanceof EC)) return new EC(options); // Shortcut `elliptic.ec(curve-name)`\n\n  if (typeof options === 'string') {\n    assert$5(Object.prototype.hasOwnProperty.call(curves_1, options), 'Unknown curve ' + options);\n    options = curves_1[options];\n  } // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n\n\n  if (options instanceof curves_1.PresetCurve) options = {\n    curve: options\n  };\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g; // Point on curve\n\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1); // Hash for function for DRBG\n\n  this.hash = options.hash || options.curve.hash;\n}\n\nvar ec = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new key(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return key.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return key.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options) options = {}; // Instantiate Hmac_DRBG\n\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0) continue;\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0) msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n\n  if (!options) options = {};\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16)); // Zero-extend key to provide enough entropy\n\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes); // Zero-extend nonce to have the same byte size as N\n\n  var nonce = msg.toArray('be', bytes); // Instantiate Hmac_DRBG\n\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  }); // Number of bytes to generate\n\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0;; iter++) {\n    var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;\n    var kp = this.g.mul(k);\n    if (kp.isInfinity()) continue;\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0) continue;\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0) continue;\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0); // Use complement of `s`, if it is > `n / 2`\n\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new signature({\n      r: r,\n      s: s,\n      recoveryParam: recoveryParam\n    });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature$1, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature$1 = new signature(signature$1, 'hex'); // Perform primitive values validation\n\n  var r = signature$1.r;\n  var s = signature$1.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false; // Validate signature\n\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity()) return false;\n    return p.getX().umod(this.n).cmp(r) === 0;\n  } // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity()) return false; // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function (msg, signature$1, j, enc) {\n  assert$5((3 & j) === j, 'The recovery param is more than two bits');\n  signature$1 = new signature(signature$1, enc);\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature$1.r;\n  var s = signature$1.s; // A set LSB signifies that the y-coordinate is odd\n\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate'); // 1.1. Let x = r + jn.\n\n  if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);else r = this.curve.pointFromX(r, isYOdd);\n  var rInv = signature$1.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n); // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function (e, signature$1, Q, enc) {\n  signature$1 = new signature(signature$1, enc);\n  if (signature$1.recoveryParam !== null) return signature$1.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n\n    try {\n      Qprime = this.recoverPubKey(e, signature$1, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q)) return i;\n  }\n\n  throw new Error('Unable to find valid recovery factor');\n};\n\nvar elliptic_1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var elliptic = exports;\n  elliptic.version =\n  /*RicMoo:ethers*/\n  {\n    version: \"6.5.4\"\n  }.version;\n  elliptic.utils = utils_1$1;\n\n  elliptic.rand =\n  /*RicMoo:ethers:require(brorand)*/\n  function () {\n    throw new Error('unsupported');\n  };\n\n  elliptic.curve = curve_1;\n  elliptic.curves = curves_1; // Protocols\n\n  elliptic.ec = ec;\n  elliptic.eddsa =\n  /*RicMoo:ethers:require(./elliptic/eddsa)*/\n  null;\n});\nvar EC$1 = elliptic_1.ec;\nexport { EC$1 as EC };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sBAAc,GAAGA,MAAjB;;AAEA,SAASA,MAAT,CAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,MAAI,CAACD,GAAL,EACE,MAAM,IAAIE,KAAJ,CAAUD,GAAG,IAAI,kBAAjB,CAAN;AACH;;AAEDF,MAAM,CAACI,KAAP,GAAe,SAASC,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2BL,GAA3B,EAAgC;AAC7C,MAAII,CAAC,IAAIC,CAAT,EACE,MAAM,IAAIJ,KAAJ,CAAUD,GAAG,IAAK,uBAAuBI,CAAvB,GAA2B,MAA3B,GAAoCC,CAAtD,CAAN;AACH,CAHD;;;ACPA;;AAEA,MAAIC,KAAK,GAAGC,OAAZ;;AAEA,WAASC,OAAT,CAAiBR,GAAjB,EAAsBS,GAAtB,EAA2B;AACzB,QAAIC,KAAK,CAACC,OAAN,CAAcX,GAAd,CAAJ,EACE,OAAOA,GAAG,CAACY,KAAJ,EAAP;AACF,QAAI,CAACZ,GAAL,EACE,OAAO,EAAP;AACF,QAAIa,GAAG,GAAG,EAAV;;AACA,QAAI,OAAOb,GAAP,KAAe,QAAnB,EAA6B;AAC3B,WAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,GAAG,CAACe,MAAxB,EAAgCD,CAAC,EAAjC,EACED,GAAG,CAACC,CAAD,CAAH,GAASd,GAAG,CAACc,CAAD,CAAH,GAAS,CAAlB;;AACF,aAAOD,GAAP;AACD;;AACD,QAAIJ,GAAG,KAAK,KAAZ,EAAmB;AACjBT,SAAG,GAAGA,GAAG,CAACgB,OAAJ,CAAY,cAAZ,EAA4B,EAA5B,CAAN;AACA,UAAIhB,GAAG,CAACe,MAAJ,GAAa,CAAb,KAAmB,CAAvB,EACEf,GAAG,GAAG,MAAMA,GAAZ;;AACF,WAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,GAAG,CAACe,MAAxB,EAAgCD,CAAC,IAAI,CAArC,EACED,GAAG,CAACI,IAAJ,CAASC,QAAQ,CAAClB,GAAG,CAACc,CAAD,CAAH,GAASd,GAAG,CAACc,CAAC,GAAG,CAAL,CAAb,EAAsB,EAAtB,CAAjB;AACH,KAND,MAMO;AACL,WAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,GAAG,CAACe,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,YAAIK,CAAC,GAAGnB,GAAG,CAACoB,UAAJ,CAAeN,CAAf,CAAR;AACA,YAAIO,EAAE,GAAGF,CAAC,IAAI,CAAd;AACA,YAAIG,EAAE,GAAGH,CAAC,GAAG,IAAb;AACA,YAAIE,EAAJ,EACER,GAAG,CAACI,IAAJ,CAASI,EAAT,EAAaC,EAAb,EADF,KAGET,GAAG,CAACI,IAAJ,CAASK,EAAT;AACH;AACF;;AACD,WAAOT,GAAP;AACD;;AACDP,OAAK,CAACE,OAAN,GAAgBA,OAAhB;;AAEA,WAASe,KAAT,CAAeC,IAAf,EAAqB;AACnB,QAAIA,IAAI,CAACT,MAAL,KAAgB,CAApB,EACE,OAAO,MAAMS,IAAb,CADF,KAGE,OAAOA,IAAP;AACH;;AACDlB,OAAK,CAACiB,KAAN,GAAcA,KAAd;;AAEA,WAASE,KAAT,CAAezB,GAAf,EAAoB;AAClB,QAAIa,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,GAAG,CAACe,MAAxB,EAAgCD,CAAC,EAAjC,EACED,GAAG,IAAIU,KAAK,CAACvB,GAAG,CAACc,CAAD,CAAH,CAAOY,QAAP,CAAgB,EAAhB,CAAD,CAAZ;;AACF,WAAOb,GAAP;AACD;;AACDP,OAAK,CAACmB,KAAN,GAAcA,KAAd;;AAEAnB,OAAK,CAACqB,MAAN,GAAe,SAASA,MAAT,CAAgBC,GAAhB,EAAqBnB,GAArB,EAA0B;AACvC,QAAIA,GAAG,KAAK,KAAZ,EACE,OAAOgB,KAAK,CAACG,GAAD,CAAZ,CADF,KAGE,OAAOA,GAAP;AACH,GALD;;;ACpDA;;AAEA,MAAItB,KAAK,GAAGC,OAAZ;AAKAD,OAAK,CAACR,MAAN,GAAe+B,kBAAf;AACAvB,OAAK,CAACE,OAAN,GAAgBsB,OAAQ,CAACtB,OAAzB;AACAF,OAAK,CAACiB,KAAN,GAAcO,OAAQ,CAACP,KAAvB;AACAjB,OAAK,CAACmB,KAAN,GAAcK,OAAQ,CAACL,KAAvB;AACAnB,OAAK,CAACqB,MAAN,GAAeG,OAAQ,CAACH,MAAxB,EAEA;;AACA,WAASI,MAAT,CAAgBC,GAAhB,EAAqBC,CAArB,EAAwBC,IAAxB,EAA8B;AAC5B,QAAIC,GAAG,GAAG,IAAIzB,KAAJ,CAAU0B,IAAI,CAACC,GAAL,CAASL,GAAG,CAACM,SAAJ,EAAT,EAA0BJ,IAA1B,IAAkC,CAA5C,CAAV;AACAC,OAAG,CAACI,IAAJ,CAAS,CAAT;AAEA,QAAIC,EAAE,GAAG,KAAMP,CAAC,GAAG,CAAnB;AACA,QAAIQ,CAAC,GAAGT,GAAG,CAACU,KAAJ,EAAR;;AAEA,SAAK,IAAI5B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqB,GAAG,CAACpB,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,UAAI6B,CAAJ;AACA,UAAIC,GAAG,GAAGH,CAAC,CAACI,KAAF,CAAQL,EAAE,GAAG,CAAb,CAAV;;AACA,UAAIC,CAAC,CAACK,KAAF,EAAJ,EAAe;AACb,YAAIF,GAAG,GAAG,CAACJ,EAAE,IAAI,CAAP,IAAY,CAAtB,EACEG,CAAC,GAAG,CAACH,EAAE,IAAI,CAAP,IAAYI,GAAhB,CADF,KAGED,CAAC,GAAGC,GAAJ;AACFH,SAAC,CAACM,KAAF,CAAQJ,CAAR;AACD,OAND,MAMO;AACLA,SAAC,GAAG,CAAJ;AACD;;AAEDR,SAAG,CAACrB,CAAD,CAAH,GAAS6B,CAAT;AACAF,OAAC,CAACO,MAAF,CAAS,CAAT;AACD;;AAED,WAAOb,GAAP;AACD;;AACD7B,OAAK,CAACyB,MAAN,GAAeA,MAAf,EAEA;;AACA,WAASkB,MAAT,CAAgBC,EAAhB,EAAoBC,EAApB,EAAwB;AACtB,QAAIC,GAAG,GAAG,CACR,EADQ,EAER,EAFQ,CAAV;AAKAF,MAAE,GAAGA,EAAE,CAACR,KAAH,EAAL;AACAS,MAAE,GAAGA,EAAE,CAACT,KAAH,EAAL;AACA,QAAIW,EAAE,GAAG,CAAT;AACA,QAAIC,EAAE,GAAG,CAAT;AACA,QAAIC,EAAJ;;AACA,WAAOL,EAAE,CAACM,IAAH,CAAQ,CAACH,EAAT,IAAe,CAAf,IAAoBF,EAAE,CAACK,IAAH,CAAQ,CAACF,EAAT,IAAe,CAA1C,EAA6C;AAC/C;AACI,UAAIG,GAAG,GAAIP,EAAE,CAACL,KAAH,CAAS,CAAT,IAAcQ,EAAf,GAAqB,CAA/B;AACA,UAAIK,GAAG,GAAIP,EAAE,CAACN,KAAH,CAAS,CAAT,IAAcS,EAAf,GAAqB,CAA/B;AACA,UAAIG,GAAG,KAAK,CAAZ,EACEA,GAAG,GAAG,CAAC,CAAP;AACF,UAAIC,GAAG,KAAK,CAAZ,EACEA,GAAG,GAAG,CAAC,CAAP;AACF,UAAIC,EAAJ;;AACA,UAAI,CAACF,GAAG,GAAG,CAAP,MAAc,CAAlB,EAAqB;AACnBE,UAAE,GAAG,CAAL;AACD,OAFD,MAEO;AACLJ,UAAE,GAAIL,EAAE,CAACL,KAAH,CAAS,CAAT,IAAcQ,EAAf,GAAqB,CAA1B;AACA,YAAI,CAACE,EAAE,KAAK,CAAP,IAAYA,EAAE,KAAK,CAApB,KAA0BG,GAAG,KAAK,CAAtC,EACEC,EAAE,GAAG,CAACF,GAAN,CADF,KAGEE,EAAE,GAAGF,GAAL;AACH;;AACDL,SAAG,CAAC,CAAD,CAAH,CAAOnC,IAAP,CAAY0C,EAAZ;AAEA,UAAIC,EAAJ;;AACA,UAAI,CAACF,GAAG,GAAG,CAAP,MAAc,CAAlB,EAAqB;AACnBE,UAAE,GAAG,CAAL;AACD,OAFD,MAEO;AACLL,UAAE,GAAIJ,EAAE,CAACN,KAAH,CAAS,CAAT,IAAcS,EAAf,GAAqB,CAA1B;AACA,YAAI,CAACC,EAAE,KAAK,CAAP,IAAYA,EAAE,KAAK,CAApB,KAA0BE,GAAG,KAAK,CAAtC,EACEG,EAAE,GAAG,CAACF,GAAN,CADF,KAGEE,EAAE,GAAGF,GAAL;AACH;;AACDN,SAAG,CAAC,CAAD,CAAH,CAAOnC,IAAP,CAAY2C,EAAZ,EA9B2C,CAgC/C;;AACI,UAAI,IAAIP,EAAJ,KAAWM,EAAE,GAAG,CAApB,EACEN,EAAE,GAAG,IAAIA,EAAT;AACF,UAAI,IAAIC,EAAJ,KAAWM,EAAE,GAAG,CAApB,EACEN,EAAE,GAAG,IAAIA,EAAT;AACFJ,QAAE,CAACF,MAAH,CAAU,CAAV;AACAG,QAAE,CAACH,MAAH,CAAU,CAAV;AACD;;AAED,WAAOI,GAAP;AACD;;AACD9C,OAAK,CAAC2C,MAAN,GAAeA,MAAf;;AAEA,WAASY,cAAT,CAAwBC,GAAxB,EAA6BC,IAA7B,EAAmCC,QAAnC,EAA6C;AAC3C,QAAIC,GAAG,GAAG,MAAMF,IAAhB;;AACAD,OAAG,CAACI,SAAJ,CAAcH,IAAd,IAAsB,SAASF,cAAT,GAA0B;AAC9C,aAAO,KAAKI,GAAL,MAAcE,SAAd,GAA0B,KAAKF,GAAL,CAA1B,GACL,KAAKA,GAAL,IAAYD,QAAQ,CAACI,IAAT,CAAc,IAAd,CADd;AAED,KAHD;AAID;;AACD9D,OAAK,CAACuD,cAAN,GAAuBA,cAAvB;;AAEA,WAASQ,UAAT,CAAoBC,KAApB,EAA2B;AACzB,WAAO,OAAOA,KAAP,KAAiB,QAAjB,GAA4BhE,KAAK,CAACE,OAAN,CAAc8D,KAAd,EAAqB,KAArB,CAA5B,GACLA,KADF;AAED;;AACDhE,OAAK,CAAC+D,UAAN,GAAmBA,UAAnB;;AAEA,WAASE,SAAT,CAAmBD,KAAnB,EAA0B;AACxB,WAAO,IAAIE,EAAJ,CAAOF,KAAP,EAAc,KAAd,EAAqB,IAArB,CAAP;AACD;;AACDhE,OAAK,CAACiE,SAAN,GAAkBA,SAAlB;;ACrHA;;AAIA,IAAIxC,MAAM,GAAGzB,SAAK,CAACyB,MAAnB;AACA,IAAIkB,MAAM,GAAG3C,SAAK,CAAC2C,MAAnB;AACA,IAAInD,QAAM,GAAGQ,SAAK,CAACR,MAAnB;;AAEA,SAAS2E,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+B;AAC7B,OAAKD,IAAL,GAAYA,IAAZ;AACA,OAAKE,CAAL,GAAS,IAAIJ,EAAJ,CAAOG,IAAI,CAACC,CAAZ,EAAe,EAAf,CAAT,CAF6B,CAI/B;;AACE,OAAKC,GAAL,GAAWF,IAAI,CAACG,KAAL,GAAaN,EAAE,CAACK,GAAH,CAAOF,IAAI,CAACG,KAAZ,CAAb,GAAkCN,EAAE,CAACO,IAAH,CAAQ,KAAKH,CAAb,CAA7C,CAL6B,CAO/B;;AACE,OAAKI,IAAL,GAAY,IAAIR,EAAJ,CAAO,CAAP,EAAUS,KAAV,CAAgB,KAAKJ,GAArB,CAAZ;AACA,OAAKK,GAAL,GAAW,IAAIV,EAAJ,CAAO,CAAP,EAAUS,KAAV,CAAgB,KAAKJ,GAArB,CAAX;AACA,OAAKM,GAAL,GAAW,IAAIX,EAAJ,CAAO,CAAP,EAAUS,KAAV,CAAgB,KAAKJ,GAArB,CAAX,CAV6B,CAY/B;;AACE,OAAKO,CAAL,GAAST,IAAI,CAACS,CAAL,IAAU,IAAIZ,EAAJ,CAAOG,IAAI,CAACS,CAAZ,EAAe,EAAf,CAAnB;AACA,OAAKC,CAAL,GAASV,IAAI,CAACU,CAAL,IAAU,KAAKC,aAAL,CAAmBX,IAAI,CAACU,CAAxB,EAA2BV,IAAI,CAACY,IAAhC,CAAnB,CAd6B,CAgB/B;;AACE,OAAKC,OAAL,GAAe,IAAI9E,KAAJ,CAAU,CAAV,CAAf;AACA,OAAK+E,OAAL,GAAe,IAAI/E,KAAJ,CAAU,CAAV,CAAf;AACA,OAAKgF,OAAL,GAAe,IAAIhF,KAAJ,CAAU,CAAV,CAAf;AACA,OAAKiF,OAAL,GAAe,IAAIjF,KAAJ,CAAU,CAAV,CAAf;AAEA,OAAKkF,UAAL,GAAkB,KAAKR,CAAL,GAAS,KAAKA,CAAL,CAAO9C,SAAP,EAAT,GAA8B,CAAhD,CAtB6B,CAwB/B;;AACE,MAAIuD,WAAW,GAAG,KAAKT,CAAL,IAAU,KAAKR,CAAL,CAAOkB,GAAP,CAAW,KAAKV,CAAhB,CAA5B;;AACA,MAAI,CAACS,WAAD,IAAgBA,WAAW,CAACrC,IAAZ,CAAiB,GAAjB,IAAwB,CAA5C,EAA+C;AAC7C,SAAKuC,IAAL,GAAY,IAAZ;AACD,GAFD,MAEO;AACL,SAAKC,aAAL,GAAqB,IAArB;AACA,SAAKD,IAAL,GAAY,KAAKX,CAAL,CAAOH,KAAP,CAAa,KAAKJ,GAAlB,CAAZ;AACD;AACF;;AACD,QAAc,GAAGJ,SAAjB;;AAEAA,SAAS,CAACP,SAAV,CAAoB+B,KAApB,GAA4B,SAASA,KAAT,GAAiB;AAC3C,QAAM,IAAIhG,KAAJ,CAAU,iBAAV,CAAN;AACD,CAFD;;AAIAwE,SAAS,CAACP,SAAV,CAAoBgC,QAApB,GAA+B,SAASA,QAAT,GAAoB;AACjD,QAAM,IAAIjG,KAAJ,CAAU,iBAAV,CAAN;AACD,CAFD;;AAIAwE,SAAS,CAACP,SAAV,CAAoBiC,YAApB,GAAmC,SAASA,YAAT,CAAsBvB,CAAtB,EAAyBnC,CAAzB,EAA4B;AAC7D3C,UAAM,CAAC8E,CAAC,CAACwB,WAAH,CAANtG;;AACA,MAAIuG,OAAO,GAAGzB,CAAC,CAAC0B,WAAF,EAAd;;AAEA,MAAInE,GAAG,GAAGJ,MAAM,CAACU,CAAD,EAAI,CAAJ,EAAO,KAAKmD,UAAZ,CAAhB;AACA,MAAIW,CAAC,GAAG,CAAC,KAAMF,OAAO,CAACG,IAAR,GAAe,CAAtB,KAA6BH,OAAO,CAACG,IAAR,GAAe,CAAf,KAAqB,CAArB,GAAyB,CAAzB,GAA6B,CAA1D,CAAR;AACAD,GAAC,IAAI,CAAL,CAN6D,CAQ/D;;AACE,MAAIE,IAAI,GAAG,EAAX;AACA,MAAIC,CAAJ;AACA,MAAIC,IAAJ;;AACA,OAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGvE,GAAG,CAACpB,MAApB,EAA4B2F,CAAC,IAAIL,OAAO,CAACG,IAAzC,EAA+C;AAC7CG,QAAI,GAAG,CAAP;;AACA,SAAK,IAAIvG,CAAC,GAAGsG,CAAC,GAAGL,OAAO,CAACG,IAAZ,GAAmB,CAAhC,EAAmCpG,CAAC,IAAIsG,CAAxC,EAA2CtG,CAAC,EAA5C,EACEuG,IAAI,GAAG,CAACA,IAAI,IAAI,CAAT,IAAcxE,GAAG,CAAC/B,CAAD,CAAxB;;AACFqG,QAAI,CAACxF,IAAL,CAAU0F,IAAV;AACD;;AAED,MAAIC,CAAC,GAAG,KAAKC,MAAL,CAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,CAAR;AACA,MAAIC,CAAC,GAAG,KAAKD,MAAL,CAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,CAAR;;AACA,OAAK,IAAI/F,CAAC,GAAGyF,CAAb,EAAgBzF,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,SAAK4F,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,IAAI,CAAC1F,MAArB,EAA6B2F,CAAC,EAA9B,EAAkC;AAChCC,UAAI,GAAGF,IAAI,CAACC,CAAD,CAAX;AACA,UAAIC,IAAI,KAAK7F,CAAb,EACEgG,CAAC,GAAGA,CAAC,CAACC,QAAF,CAAWV,OAAO,CAACW,MAAR,CAAeN,CAAf,CAAX,CAAJ,CADF,KAEK,IAAIC,IAAI,KAAK,CAAC7F,CAAd,EACHgG,CAAC,GAAGA,CAAC,CAACC,QAAF,CAAWV,OAAO,CAACW,MAAR,CAAeN,CAAf,EAAkBO,GAAlB,EAAX,CAAJ;AACH;;AACDL,KAAC,GAAGA,CAAC,CAACM,GAAF,CAAMJ,CAAN,CAAJ;AACD;;AACD,SAAOF,CAAC,CAACO,GAAF,EAAP;AACD,CAhCD;;AAkCA1C,SAAS,CAACP,SAAV,CAAoBkD,QAApB,GAA+B,SAASA,QAAT,CAAkBxC,CAAlB,EAAqBnC,CAArB,EAAwB;AACrD,MAAIR,CAAC,GAAG,CAAR,CADqD,CAGvD;;AACE,MAAIoF,SAAS,GAAGzC,CAAC,CAAC0C,aAAF,CAAgBrF,CAAhB,CAAhB;;AACAA,GAAC,GAAGoF,SAAS,CAACE,GAAd;AACA,MAAIA,GAAG,GAAGF,SAAS,CAACL,MAApB,CANqD,CAQvD;;AACE,MAAI7E,GAAG,GAAGJ,MAAM,CAACU,CAAD,EAAIR,CAAJ,EAAO,KAAK2D,UAAZ,CAAhB,CATqD,CAWvD;;AACE,MAAI4B,GAAG,GAAG,KAAKX,MAAL,CAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,CAAV;;AACA,OAAK,IAAI/F,CAAC,GAAGqB,GAAG,CAACpB,MAAJ,GAAa,CAA1B,EAA6BD,CAAC,IAAI,CAAlC,EAAqCA,CAAC,EAAtC,EAA0C;AAC5C;AACI,SAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBU,CAAC,IAAI,CAAL,IAAUqB,GAAG,CAACrB,CAAD,CAAH,KAAW,CAArC,EAAwCA,CAAC,EAAzC,EACEV,CAAC;;AACH,QAAIU,CAAC,IAAI,CAAT,EACEV,CAAC;AACHoH,OAAG,GAAGA,GAAG,CAACC,IAAJ,CAASrH,CAAT,CAAN;AAEA,QAAIU,CAAC,GAAG,CAAR,EACE;AACF,QAAI6B,CAAC,GAAGR,GAAG,CAACrB,CAAD,CAAX;AACAhB,YAAM,CAAC6C,CAAC,KAAK,CAAP,CAAN7C;;AACA,QAAI8E,CAAC,CAACF,IAAF,KAAW,QAAf,EAAyB;AAC7B;AACM,UAAI/B,CAAC,GAAG,CAAR,EACE6E,GAAG,GAAGA,GAAG,CAACT,QAAJ,CAAaQ,GAAG,CAAE5E,CAAC,GAAG,CAAL,IAAW,CAAZ,CAAhB,CAAN,CADF,KAGE6E,GAAG,GAAGA,GAAG,CAACT,QAAJ,CAAaQ,GAAG,CAAE,CAAC5E,CAAD,GAAK,CAAN,IAAY,CAAb,CAAH,CAAmBsE,GAAnB,EAAb,CAAN;AACH,KAND,MAMO;AACX;AACM,UAAItE,CAAC,GAAG,CAAR,EACE6E,GAAG,GAAGA,GAAG,CAACN,GAAJ,CAAQK,GAAG,CAAE5E,CAAC,GAAG,CAAL,IAAW,CAAZ,CAAX,CAAN,CADF,KAGE6E,GAAG,GAAGA,GAAG,CAACN,GAAJ,CAAQK,GAAG,CAAE,CAAC5E,CAAD,GAAK,CAAN,IAAY,CAAb,CAAH,CAAmBsE,GAAnB,EAAR,CAAN;AACH;AACF;;AACD,SAAOrC,CAAC,CAACF,IAAF,KAAW,QAAX,GAAsB8C,GAAG,CAACL,GAAJ,EAAtB,GAAkCK,GAAzC;AACD,CAxCD;;AA0CA/C,SAAS,CAACP,SAAV,CAAoBwD,WAApB,GAAkC,SAASA,WAAT,CAAqBC,IAArB,EAChCX,MADgC,EAEhCY,MAFgC,EAGhCC,GAHgC,EAIhCC,cAJgC,EAIhB;AAChB,MAAIC,QAAQ,GAAG,KAAKvC,OAApB;AACA,MAAI+B,GAAG,GAAG,KAAK9B,OAAf;AACA,MAAItD,GAAG,GAAG,KAAKuD,OAAf,CAHgB,CAKlB;;AACE,MAAIrD,GAAG,GAAG,CAAV;AACA,MAAIvB,CAAJ;AACA,MAAI4F,CAAJ;AACA,MAAI9B,CAAJ;;AACA,OAAK9D,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG+G,GAAhB,EAAqB/G,CAAC,EAAtB,EAA0B;AACxB8D,KAAC,GAAGoC,MAAM,CAAClG,CAAD,CAAV;;AACA,QAAIuG,SAAS,GAAGzC,CAAC,CAAC0C,aAAF,CAAgBK,IAAhB,CAAhB;;AACAI,YAAQ,CAACjH,CAAD,CAAR,GAAcuG,SAAS,CAACE,GAAxB;AACAA,OAAG,CAACzG,CAAD,CAAH,GAASuG,SAAS,CAACL,MAAnB;AACD,GAfe,CAiBlB;;;AACE,OAAKlG,CAAC,GAAG+G,GAAG,GAAG,CAAf,EAAkB/G,CAAC,IAAI,CAAvB,EAA0BA,CAAC,IAAI,CAA/B,EAAkC;AAChC,QAAI8F,CAAC,GAAG9F,CAAC,GAAG,CAAZ;AACA,QAAIgG,CAAC,GAAGhG,CAAR;;AACA,QAAIiH,QAAQ,CAACnB,CAAD,CAAR,KAAgB,CAAhB,IAAqBmB,QAAQ,CAACjB,CAAD,CAAR,KAAgB,CAAzC,EAA4C;AAC1C3E,SAAG,CAACyE,CAAD,CAAH,GAAS7E,MAAM,CAAC6F,MAAM,CAAChB,CAAD,CAAP,EAAYmB,QAAQ,CAACnB,CAAD,CAApB,EAAyB,KAAKhB,UAA9B,CAAf;AACAzD,SAAG,CAAC2E,CAAD,CAAH,GAAS/E,MAAM,CAAC6F,MAAM,CAACd,CAAD,CAAP,EAAYiB,QAAQ,CAACjB,CAAD,CAApB,EAAyB,KAAKlB,UAA9B,CAAf;AACAvD,SAAG,GAAGD,IAAI,CAACC,GAAL,CAASF,GAAG,CAACyE,CAAD,CAAH,CAAO7F,MAAhB,EAAwBsB,GAAxB,CAAN;AACAA,SAAG,GAAGD,IAAI,CAACC,GAAL,CAASF,GAAG,CAAC2E,CAAD,CAAH,CAAO/F,MAAhB,EAAwBsB,GAAxB,CAAN;AACA;AACD;;AAED,QAAI2F,IAAI,GAAG,CACThB,MAAM,CAACJ,CAAD,CADG;AACA;AACT,QAFS;AAEL;AACJ,QAHS;AAGL;AACJI,UAAM,CAACF,CAAD;AAAG;AAJA,KAAX,CAXgC,CAkBpC;;AACI,QAAIE,MAAM,CAACJ,CAAD,CAAN,CAAUqB,CAAV,CAAYC,GAAZ,CAAgBlB,MAAM,CAACF,CAAD,CAAN,CAAUmB,CAA1B,MAAiC,CAArC,EAAwC;AACtCD,UAAI,CAAC,CAAD,CAAJ,GAAUhB,MAAM,CAACJ,CAAD,CAAN,CAAUM,GAAV,CAAcF,MAAM,CAACF,CAAD,CAApB,CAAV;AACAkB,UAAI,CAAC,CAAD,CAAJ,GAAUhB,MAAM,CAACJ,CAAD,CAAN,CAAUuB,GAAV,GAAgBpB,QAAhB,CAAyBC,MAAM,CAACF,CAAD,CAAN,CAAUG,GAAV,EAAzB,CAAV;AACD,KAHD,MAGO,IAAID,MAAM,CAACJ,CAAD,CAAN,CAAUqB,CAAV,CAAYC,GAAZ,CAAgBlB,MAAM,CAACF,CAAD,CAAN,CAAUmB,CAAV,CAAYG,MAAZ,EAAhB,MAA0C,CAA9C,EAAiD;AACtDJ,UAAI,CAAC,CAAD,CAAJ,GAAUhB,MAAM,CAACJ,CAAD,CAAN,CAAUuB,GAAV,GAAgBpB,QAAhB,CAAyBC,MAAM,CAACF,CAAD,CAA/B,CAAV;AACAkB,UAAI,CAAC,CAAD,CAAJ,GAAUhB,MAAM,CAACJ,CAAD,CAAN,CAAUM,GAAV,CAAcF,MAAM,CAACF,CAAD,CAAN,CAAUG,GAAV,EAAd,CAAV;AACD,KAHM,MAGA;AACLe,UAAI,CAAC,CAAD,CAAJ,GAAUhB,MAAM,CAACJ,CAAD,CAAN,CAAUuB,GAAV,GAAgBpB,QAAhB,CAAyBC,MAAM,CAACF,CAAD,CAA/B,CAAV;AACAkB,UAAI,CAAC,CAAD,CAAJ,GAAUhB,MAAM,CAACJ,CAAD,CAAN,CAAUuB,GAAV,GAAgBpB,QAAhB,CAAyBC,MAAM,CAACF,CAAD,CAAN,CAAUG,GAAV,EAAzB,CAAV;AACD;;AAED,QAAIoB,KAAK,GAAG,CACV,CAAC,CADS;AACR;AACF,KAAC,CAFS;AAER;AACF,KAAC,CAHS;AAGR;AACF,KAAC,CAJS;AAIR;AACF,KALU;AAKT;AACD,KANU;AAMT;AACD,KAPU;AAOT;AACD,KARU;AAQT;AACD;AAAC;AATS,KAAZ;AAYA,QAAIjF,GAAG,GAAGH,MAAM,CAAC2E,MAAM,CAAChB,CAAD,CAAP,EAAYgB,MAAM,CAACd,CAAD,CAAlB,CAAhB;AACAzE,OAAG,GAAGD,IAAI,CAACC,GAAL,CAASe,GAAG,CAAC,CAAD,CAAH,CAAOrC,MAAhB,EAAwBsB,GAAxB,CAAN;AACAF,OAAG,CAACyE,CAAD,CAAH,GAAS,IAAIlG,KAAJ,CAAU2B,GAAV,CAAT;AACAF,OAAG,CAAC2E,CAAD,CAAH,GAAS,IAAIpG,KAAJ,CAAU2B,GAAV,CAAT;;AACA,SAAKqE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGrE,GAAhB,EAAqBqE,CAAC,EAAtB,EAA0B;AACxB,UAAI4B,EAAE,GAAGlF,GAAG,CAAC,CAAD,CAAH,CAAOsD,CAAP,IAAY,CAArB;AACA,UAAI6B,EAAE,GAAGnF,GAAG,CAAC,CAAD,CAAH,CAAOsD,CAAP,IAAY,CAArB;AAEAvE,SAAG,CAACyE,CAAD,CAAH,CAAOF,CAAP,IAAY2B,KAAK,CAAC,CAACC,EAAE,GAAG,CAAN,IAAW,CAAX,IAAgBC,EAAE,GAAG,CAArB,CAAD,CAAjB;AACApG,SAAG,CAAC2E,CAAD,CAAH,CAAOJ,CAAP,IAAY,CAAZ;AACAa,SAAG,CAACX,CAAD,CAAH,GAASoB,IAAT;AACD;AACF;;AAED,MAAIR,GAAG,GAAG,KAAKX,MAAL,CAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,CAAV;AACA,MAAI2B,GAAG,GAAG,KAAK7C,OAAf;;AACA,OAAK7E,CAAC,GAAGuB,GAAT,EAAcvB,CAAC,IAAI,CAAnB,EAAsBA,CAAC,EAAvB,EAA2B;AACzB,QAAI2B,CAAC,GAAG,CAAR;;AAEA,WAAO3B,CAAC,IAAI,CAAZ,EAAe;AACb,UAAIkE,IAAI,GAAG,IAAX;;AACA,WAAK0B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGmB,GAAhB,EAAqBnB,CAAC,EAAtB,EAA0B;AACxB8B,WAAG,CAAC9B,CAAD,CAAH,GAASvE,GAAG,CAACuE,CAAD,CAAH,CAAO5F,CAAP,IAAY,CAArB;AACA,YAAI0H,GAAG,CAAC9B,CAAD,CAAH,KAAW,CAAf,EACE1B,IAAI,GAAG,KAAP;AACH;;AACD,UAAI,CAACA,IAAL,EACE;AACFvC,OAAC;AACD3B,OAAC;AACF;;AACD,QAAIA,CAAC,IAAI,CAAT,EACE2B,CAAC;AACH+E,OAAG,GAAGA,GAAG,CAACC,IAAJ,CAAShF,CAAT,CAAN;AACA,QAAI3B,CAAC,GAAG,CAAR,EACE;;AAEF,SAAK4F,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGmB,GAAhB,EAAqBnB,CAAC,EAAtB,EAA0B;AACxB,UAAI/D,CAAC,GAAG6F,GAAG,CAAC9B,CAAD,CAAX;AACA9B,OAAC;AACD,UAAIjC,CAAC,KAAK,CAAV,EACE,SADF,KAEK,IAAIA,CAAC,GAAG,CAAR,EACHiC,CAAC,GAAG2C,GAAG,CAACb,CAAD,CAAH,CAAQ/D,CAAC,GAAG,CAAL,IAAW,CAAlB,CAAJ,CADG,KAEA,IAAIA,CAAC,GAAG,CAAR,EACHiC,CAAC,GAAG2C,GAAG,CAACb,CAAD,CAAH,CAAQ,CAAC/D,CAAD,GAAK,CAAN,IAAY,CAAnB,EAAsBsE,GAAtB,EAAJ;AAEF,UAAIrC,CAAC,CAACF,IAAF,KAAW,QAAf,EACE8C,GAAG,GAAGA,GAAG,CAACT,QAAJ,CAAanC,CAAb,CAAN,CADF,KAGE4C,GAAG,GAAGA,GAAG,CAACN,GAAJ,CAAQtC,CAAR,CAAN;AACH;AACF,GAhHe,CAiHlB;;;AACE,OAAK9D,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG+G,GAAhB,EAAqB/G,CAAC,EAAtB,EACEyG,GAAG,CAACzG,CAAD,CAAH,GAAS,IAAT;;AAEF,MAAIgH,cAAJ,EACE,OAAON,GAAP,CADF,KAGE,OAAOA,GAAG,CAACL,GAAJ,EAAP;AACH,CA7HD;;AA+HA,SAASsB,SAAT,CAAmBC,KAAnB,EAA0BhE,IAA1B,EAAgC;AAC9B,OAAKgE,KAAL,GAAaA,KAAb;AACA,OAAKhE,IAAL,GAAYA,IAAZ;AACA,OAAK0B,WAAL,GAAmB,IAAnB;AACD;;AACD3B,SAAS,CAACgE,SAAV,GAAsBA,SAAtB;;AAEAA,SAAS,CAACvE,SAAV,CAAoByE,EAApB,GAAyB;AAAW;AAAFA,EAAT,GAAuB;AAC9C,QAAM,IAAI1I,KAAJ,CAAU,iBAAV,CAAN;AACD,CAFD;;AAIAwI,SAAS,CAACvE,SAAV,CAAoBgC,QAApB,GAA+B,SAASA,QAAT,GAAoB;AACjD,SAAO,KAAKwC,KAAL,CAAWxC,QAAX,CAAoB,IAApB,CAAP;AACD,CAFD;;AAIAzB,SAAS,CAACP,SAAV,CAAoB0E,WAApB,GAAkC,SAASA,WAAT,CAAqBtE,KAArB,EAA4B7D,GAA5B,EAAiC;AACjE6D,OAAK,GAAGhE,SAAK,CAACE,OAANF,CAAcgE,KAAdhE,EAAqBG,GAArBH,CAAR;AAEA,MAAIuH,GAAG,GAAG,KAAKjD,CAAL,CAAOiE,UAAP,EAAV,CAHiE,CAKnE;;AACE,MAAI,CAACvE,KAAK,CAAC,CAAD,CAAL,KAAa,IAAb,IAAqBA,KAAK,CAAC,CAAD,CAAL,KAAa,IAAlC,IAA0CA,KAAK,CAAC,CAAD,CAAL,KAAa,IAAxD,KACAA,KAAK,CAACvD,MAAN,GAAe,CAAf,KAAqB,IAAI8G,GAD7B,EACkC;AAChC,QAAIvD,KAAK,CAAC,CAAD,CAAL,KAAa,IAAjB,EACExE,QAAM,CAACwE,KAAK,CAACA,KAAK,CAACvD,MAAN,GAAe,CAAhB,CAAL,GAA0B,CAA1B,KAAgC,CAAjC,CAANjB,CADF,KAEK,IAAIwE,KAAK,CAAC,CAAD,CAAL,KAAa,IAAjB,EACHxE,QAAM,CAACwE,KAAK,CAACA,KAAK,CAACvD,MAAN,GAAe,CAAhB,CAAL,GAA0B,CAA1B,KAAgC,CAAjC,CAANjB;AAEF,QAAIe,GAAG,GAAI,KAAKoF,KAAL,CAAW3B,KAAK,CAAC1D,KAAN,CAAY,CAAZ,EAAe,IAAIiH,GAAnB,CAAX,EACTvD,KAAK,CAAC1D,KAAN,CAAY,IAAIiH,GAAhB,EAAqB,IAAI,IAAIA,GAA7B,CADS,CAAX;AAGA,WAAOhH,GAAP;AACD,GAXD,MAWO,IAAI,CAACyD,KAAK,CAAC,CAAD,CAAL,KAAa,IAAb,IAAqBA,KAAK,CAAC,CAAD,CAAL,KAAa,IAAnC,KACCA,KAAK,CAACvD,MAAN,GAAe,CAAf,KAAqB8G,GAD1B,EAC+B;AACpC,WAAO,KAAKiB,UAAL,CAAgBxE,KAAK,CAAC1D,KAAN,CAAY,CAAZ,EAAe,IAAIiH,GAAnB,CAAhB,EAAyCvD,KAAK,CAAC,CAAD,CAAL,KAAa,IAAtD,CAAP;AACD;;AACD,QAAM,IAAIrE,KAAJ,CAAU,sBAAV,CAAN;AACD,CAtBD;;AAwBAwI,SAAS,CAACvE,SAAV,CAAoB6E,gBAApB,GAAuC,SAASA,gBAAT,CAA0BtI,GAA1B,EAA+B;AACpE,SAAO,KAAKkB,MAAL,CAAYlB,GAAZ,EAAiB,IAAjB,CAAP;AACD,CAFD;;AAIAgI,SAAS,CAACvE,SAAV,CAAoB8E,OAApB,GAA8B,SAASA,OAAT,CAAiBC,OAAjB,EAA0B;AACtD,MAAIpB,GAAG,GAAG,KAAKa,KAAL,CAAW9D,CAAX,CAAaiE,UAAb,EAAV;AACA,MAAIK,CAAC,GAAG,KAAKC,IAAL,GAAY3I,OAAZ,CAAoB,IAApB,EAA0BqH,GAA1B,CAAR;AAEA,MAAIoB,OAAJ,EACE,OAAO,CAAE,KAAKG,IAAL,GAAYC,MAAZ,KAAuB,IAAvB,GAA8B,IAAhC,EAAuCC,MAAvC,CAA8CJ,CAA9C,CAAP;AAEF,SAAO,CAAE,IAAF,EAASI,MAAT,CAAgBJ,CAAhB,EAAmB,KAAKE,IAAL,GAAY5I,OAAZ,CAAoB,IAApB,EAA0BqH,GAA1B,CAAnB,CAAP;AACD,CARD;;AAUAY,SAAS,CAACvE,SAAV,CAAoBvC,MAApB,GAA6B,SAASA,MAAT,CAAgBlB,GAAhB,EAAqBwI,OAArB,EAA8B;AACzD,SAAO3I,SAAK,CAACqB,MAANrB,CAAa,KAAK0I,OAAL,CAAaC,OAAb,CAAb3I,EAAoCG,GAApCH,CAAP;AACD,CAFD;;AAIAmI,SAAS,CAACvE,SAAV,CAAoBqF,UAApB,GAAiC,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AAC1D,MAAI,KAAKpD,WAAT,EACE,OAAO,IAAP;AAEF,MAAIA,WAAW,GAAG;AAChBC,WAAO,EAAE,IADO;AAEhBlE,OAAG,EAAE,IAFW;AAGhBsH,QAAI,EAAE;AAHU,GAAlB;AAKArD,aAAW,CAACjE,GAAZ,GAAkB,KAAKmF,aAAL,CAAmB,CAAnB,CAAlB;AACAlB,aAAW,CAACC,OAAZ,GAAsB,KAAKC,WAAL,CAAiB,CAAjB,EAAoBkD,KAApB,CAAtB;AACApD,aAAW,CAACqD,IAAZ,GAAmB,KAAKC,QAAL,EAAnB;AACA,OAAKtD,WAAL,GAAmBA,WAAnB;AAEA,SAAO,IAAP;AACD,CAfD;;AAiBAqC,SAAS,CAACvE,SAAV,CAAoByF,WAApB,GAAkC,SAASA,WAAT,CAAqBlH,CAArB,EAAwB;AACxD,MAAI,CAAC,KAAK2D,WAAV,EACE,OAAO,KAAP;AAEF,MAAIC,OAAO,GAAG,KAAKD,WAAL,CAAiBC,OAA/B;AACA,MAAI,CAACA,OAAL,EACE,OAAO,KAAP;AAEF,SAAOA,OAAO,CAACW,MAAR,CAAejG,MAAf,IAAyBqB,IAAI,CAACwH,IAAL,CAAU,CAACnH,CAAC,CAACH,SAAF,KAAgB,CAAjB,IAAsB+D,OAAO,CAACG,IAAxC,CAAhC;AACD,CATD;;AAWAiC,SAAS,CAACvE,SAAV,CAAoBoC,WAApB,GAAkC,SAASA,WAAT,CAAqBE,IAArB,EAA2BgD,KAA3B,EAAkC;AAClE,MAAI,KAAKpD,WAAL,IAAoB,KAAKA,WAAL,CAAiBC,OAAzC,EACE,OAAO,KAAKD,WAAL,CAAiBC,OAAxB;AAEF,MAAIA,OAAO,GAAG,CAAE,IAAF,CAAd;AACA,MAAImB,GAAG,GAAG,IAAV;;AACA,OAAK,IAAI1G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0I,KAApB,EAA2B1I,CAAC,IAAI0F,IAAhC,EAAsC;AACpC,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAApB,EAA0BE,CAAC,EAA3B,EACEc,GAAG,GAAGA,GAAG,CAACqC,GAAJ,EAAN;;AACFxD,WAAO,CAACpF,IAAR,CAAauG,GAAb;AACD;;AACD,SAAO;AACLhB,QAAI,EAAEA,IADD;AAELQ,UAAM,EAAEX;AAFH,GAAP;AAID,CAfD;;AAiBAoC,SAAS,CAACvE,SAAV,CAAoBoD,aAApB,GAAoC,SAASA,aAAT,CAAuBC,GAAvB,EAA4B;AAC9D,MAAI,KAAKnB,WAAL,IAAoB,KAAKA,WAAL,CAAiBjE,GAAzC,EACE,OAAO,KAAKiE,WAAL,CAAiBjE,GAAxB;AAEF,MAAItB,GAAG,GAAG,CAAE,IAAF,CAAV;AACA,MAAIwB,GAAG,GAAG,CAAC,KAAKkF,GAAN,IAAa,CAAvB;AACA,MAAIsC,GAAG,GAAGxH,GAAG,KAAK,CAAR,GAAY,IAAZ,GAAmB,KAAKwH,GAAL,EAA7B;;AACA,OAAK,IAAI/I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuB,GAApB,EAAyBvB,CAAC,EAA1B,EACED,GAAG,CAACC,CAAD,CAAH,GAASD,GAAG,CAACC,CAAC,GAAG,CAAL,CAAH,CAAWoG,GAAX,CAAe2C,GAAf,CAAT;;AACF,SAAO;AACLtC,OAAG,EAAEA,GADA;AAELP,UAAM,EAAEnG;AAFH,GAAP;AAID,CAbD;;AAeA4H,SAAS,CAACvE,SAAV,CAAoBwF,QAApB,GAA+B,SAASA,QAAT,GAAoB;AACjD,SAAO,IAAP;AACD,CAFD;;AAIAjB,SAAS,CAACvE,SAAV,CAAoBuD,IAApB,GAA2B,SAASA,IAAT,CAAchF,CAAd,EAAiB;AAC1C,MAAIpC,CAAC,GAAG,IAAR;;AACA,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2B,CAApB,EAAuB3B,CAAC,EAAxB,EACET,CAAC,GAAGA,CAAC,CAACwJ,GAAF,EAAJ;;AACF,SAAOxJ,CAAP;AACD,CALD;;;ACvXA,MAAI,OAAOyJ,MAAM,CAACC,MAAd,KAAyB,UAA7B,EAAyC;AACzC;AACEC,qBAAiB,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,SAAxB,EAAmC;AAClD,UAAIA,SAAJ,EAAe;AACbD,YAAI,CAACE,MAAL,GAAcD,SAAd;AACAD,YAAI,CAAChG,SAAL,GAAiB4F,MAAM,CAACC,MAAP,CAAcI,SAAS,CAACjG,SAAxB,EAAmC;AAClDmG,qBAAW,EAAE;AACXC,iBAAK,EAAEJ,IADI;AAEXK,sBAAU,EAAE,KAFD;AAGXC,oBAAQ,EAAE,IAHC;AAIXC,wBAAY,EAAE;AAJH;AADqC,SAAnC,CAAjB;AAQD;AACF,KAZD;AAaD,GAfD,MAeO;AACP;AACET,qBAAiB,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,SAAxB,EAAmC;AAClD,UAAIA,SAAJ,EAAe;AACbD,YAAI,CAACE,MAAL,GAAcD,SAAd;;AACA,YAAIO,QAAQ,GAAG,YAAY,EAA3B;;AACAA,gBAAQ,CAACxG,SAAT,GAAqBiG,SAAS,CAACjG,SAA/B;AACAgG,YAAI,CAAChG,SAAL,GAAiB,IAAIwG,QAAJ,EAAjB;AACAR,YAAI,CAAChG,SAAL,CAAemG,WAAf,GAA6BH,IAA7B;AACD;AACL,KARE;AASF;;AC1BA;;AAOA,IAAIpK,QAAM,GAAGQ,SAAK,CAACR,MAAnB;;AAEA,SAAS6K,UAAT,CAAoBhG,IAApB,EAA0B;AACxBiG,MAAI,CAACxG,IAALwG,CAAU,IAAVA,EAAgB,OAAhBA,EAAyBjG,IAAzBiG;AAEA,OAAKhE,CAAL,GAAS,IAAIpC,EAAJ,CAAOG,IAAI,CAACiC,CAAZ,EAAe,EAAf,EAAmB3B,KAAnB,CAAyB,KAAKJ,GAA9B,CAAT;AACA,OAAKiC,CAAL,GAAS,IAAItC,EAAJ,CAAOG,IAAI,CAACmC,CAAZ,EAAe,EAAf,EAAmB7B,KAAnB,CAAyB,KAAKJ,GAA9B,CAAT;AACA,OAAKgG,IAAL,GAAY,KAAK1F,GAAL,CAAS2F,OAAT,EAAZ;AAEA,OAAKC,KAAL,GAAa,KAAKnE,CAAL,CAAOoE,OAAP,GAAiBxH,IAAjB,CAAsB,CAAtB,MAA6B,CAA1C;AACA,OAAKyH,MAAL,GAAc,KAAKrE,CAAL,CAAOoE,OAAP,GAAiBE,GAAjB,CAAqB,KAAKtG,CAA1B,EAA6BpB,IAA7B,CAAkC,CAAC,CAAnC,MAA0C,CAAxD,CARwB,CAU1B;;AACE,OAAK2H,IAAL,GAAY,KAAKC,gBAAL,CAAsBzG,IAAtB,CAAZ;AACA,OAAK0G,WAAL,GAAmB,IAAI3K,KAAJ,CAAU,CAAV,CAAnB;AACA,OAAK4K,WAAL,GAAmB,IAAI5K,KAAJ,CAAU,CAAV,CAAnB;AACD;;AACDuJ,gBAAQ,CAACU,UAAD,EAAaC,IAAb,CAARX;AACA,WAAc,GAAGU,UAAjB;;AAEAA,UAAU,CAACzG,SAAX,CAAqBkH,gBAArB,GAAwC,SAASA,gBAAT,CAA0BzG,IAA1B,EAAgC;AACxE;AACE,MAAI,CAAC,KAAKoG,KAAN,IAAe,CAAC,KAAK1F,CAArB,IAA0B,CAAC,KAAKD,CAAhC,IAAqC,KAAKR,CAAL,CAAO2G,IAAP,CAAY,CAAZ,MAAmB,CAA5D,EACE,OAHoE,CAKxE;;AACE,MAAI9B,IAAJ;AACA,MAAI+B,MAAJ;;AACA,MAAI7G,IAAI,CAAC8E,IAAT,EAAe;AACbA,QAAI,GAAG,IAAIjF,EAAJ,CAAOG,IAAI,CAAC8E,IAAZ,EAAkB,EAAlB,EAAsBxE,KAAtB,CAA4B,KAAKJ,GAAjC,CAAP;AACD,GAFD,MAEO;AACL,QAAI4G,KAAK,GAAG,KAAKC,aAAL,CAAmB,KAAK9G,CAAxB,CAAZ,CADK,CAET;;;AACI6E,QAAI,GAAGgC,KAAK,CAAC,CAAD,CAAL,CAASvD,GAAT,CAAauD,KAAK,CAAC,CAAD,CAAlB,IAAyB,CAAzB,GAA6BA,KAAK,CAAC,CAAD,CAAlC,GAAwCA,KAAK,CAAC,CAAD,CAApD;AACAhC,QAAI,GAAGA,IAAI,CAACxE,KAAL,CAAW,KAAKJ,GAAhB,CAAP;AACD;;AACD,MAAIF,IAAI,CAAC6G,MAAT,EAAiB;AACfA,UAAM,GAAG,IAAIhH,EAAJ,CAAOG,IAAI,CAAC6G,MAAZ,EAAoB,EAApB,CAAT;AACD,GAFD,MAEO;AACT;AACI,QAAIG,OAAO,GAAG,KAAKD,aAAL,CAAmB,KAAKtG,CAAxB,CAAd;;AACA,QAAI,KAAKC,CAAL,CAAOuG,GAAP,CAAWD,OAAO,CAAC,CAAD,CAAlB,EAAuBzC,CAAvB,CAAyBhB,GAAzB,CAA6B,KAAK7C,CAAL,CAAO6D,CAAP,CAAS2C,MAAT,CAAgBpC,IAAhB,CAA7B,MAAwD,CAA5D,EAA+D;AAC7D+B,YAAM,GAAGG,OAAO,CAAC,CAAD,CAAhB;AACD,KAFD,MAEO;AACLH,YAAM,GAAGG,OAAO,CAAC,CAAD,CAAhB;AACA7L,cAAM,CAAC,KAAKuF,CAAL,CAAOuG,GAAP,CAAWJ,MAAX,EAAmBtC,CAAnB,CAAqBhB,GAArB,CAAyB,KAAK7C,CAAL,CAAO6D,CAAP,CAAS2C,MAAT,CAAgBpC,IAAhB,CAAzB,MAAoD,CAArD,CAAN3J;AACD;AACF,GA3BqE,CA6BxE;;;AACE,MAAIgM,KAAJ;;AACA,MAAInH,IAAI,CAACmH,KAAT,EAAgB;AACdA,SAAK,GAAGnH,IAAI,CAACmH,KAAL,CAAWC,GAAX,CAAe,UAASC,GAAT,EAAc;AACnC,aAAO;AACLpF,SAAC,EAAE,IAAIpC,EAAJ,CAAOwH,GAAG,CAACpF,CAAX,EAAc,EAAd,CADE;AAELE,SAAC,EAAE,IAAItC,EAAJ,CAAOwH,GAAG,CAAClF,CAAX,EAAc,EAAd;AAFE,OAAP;AAID,KALO,CAAR;AAMD,GAPD,MAOO;AACLgF,SAAK,GAAG,KAAKG,aAAL,CAAmBT,MAAnB,CAAR;AACD;;AAED,SAAO;AACL/B,QAAI,EAAEA,IADD;AAEL+B,UAAM,EAAEA,MAFH;AAGLM,SAAK,EAAEA;AAHF,GAAP;AAKD,CA/CD;;AAiDAnB,UAAU,CAACzG,SAAX,CAAqBwH,aAArB,GAAqC,SAASA,aAAT,CAAuB1J,GAAvB,EAA4B;AACjE;AACA;AACA;AACE,MAAI6C,GAAG,GAAG7C,GAAG,KAAK,KAAK4C,CAAb,GAAiB,KAAKC,GAAtB,GAA4BL,EAAE,CAACO,IAAH,CAAQ/C,GAAR,CAAtC;AACA,MAAI6I,IAAI,GAAG,IAAIrG,EAAJ,CAAO,CAAP,EAAUS,KAAV,CAAgBJ,GAAhB,EAAqBiG,OAArB,EAAX;AACA,MAAIoB,KAAK,GAAGrB,IAAI,CAACzC,MAAL,EAAZ;AAEA,MAAI+D,CAAC,GAAG,IAAI3H,EAAJ,CAAO,CAAP,EAAUS,KAAV,CAAgBJ,GAAhB,EAAqBuD,MAArB,GAA8BgE,OAA9B,GAAwCP,MAAxC,CAA+ChB,IAA/C,CAAR;AAEA,MAAIwB,EAAE,GAAGH,KAAK,CAACI,MAAN,CAAaH,CAAb,EAAgBnB,OAAhB,EAAT;AACA,MAAIuB,EAAE,GAAGL,KAAK,CAACM,MAAN,CAAaL,CAAb,EAAgBnB,OAAhB,EAAT;AACA,SAAO,CAAEqB,EAAF,EAAME,EAAN,CAAP;AACD,CAbD;;AAeA5B,UAAU,CAACzG,SAAX,CAAqB+H,aAArB,GAAqC,SAASA,aAAT,CAAuBT,MAAvB,EAA+B;AACpE;AACE,MAAIiB,QAAQ,GAAG,KAAKrH,CAAL,CAAOsH,KAAP,CAAatK,IAAI,CAACuK,KAAL,CAAW,KAAKvH,CAAL,CAAO9C,SAAP,KAAqB,CAAhC,CAAb,CAAf,CAFkE,CAIpE;AACA;;AACE,MAAIsK,CAAC,GAAGpB,MAAR;AACA,MAAIqB,CAAC,GAAG,KAAKzH,CAAL,CAAO1C,KAAP,EAAR;AACA,MAAIoK,EAAE,GAAG,IAAItI,EAAJ,CAAO,CAAP,CAAT;AACA,MAAIuI,EAAE,GAAG,IAAIvI,EAAJ,CAAO,CAAP,CAAT;AACA,MAAIwI,EAAE,GAAG,IAAIxI,EAAJ,CAAO,CAAP,CAAT;AACA,MAAIyI,EAAE,GAAG,IAAIzI,EAAJ,CAAO,CAAP,CAAT,CAXkE,CAapE;;AACE,MAAI0I,EAAJ;AACA,MAAIC,EAAJ,CAfkE,CAgBpE;;AACE,MAAIC,EAAJ;AACA,MAAIC,EAAJ,CAlBkE,CAmBpE;;AACE,MAAIC,EAAJ;AACA,MAAIC,EAAJ;AAEA,MAAIC,KAAJ;AACA,MAAI1M,CAAC,GAAG,CAAR;AACA,MAAIT,CAAJ;AACA,MAAI6I,CAAJ;;AACA,SAAO0D,CAAC,CAACpJ,IAAF,CAAO,CAAP,MAAc,CAArB,EAAwB;AACtB,QAAIiK,CAAC,GAAGZ,CAAC,CAAC/G,GAAF,CAAM8G,CAAN,CAAR;AACAvM,KAAC,GAAGwM,CAAC,CAAC3B,GAAF,CAAMuC,CAAC,CAAC7B,GAAF,CAAMgB,CAAN,CAAN,CAAJ;AACA1D,KAAC,GAAG8D,EAAE,CAAC9B,GAAH,CAAOuC,CAAC,CAAC7B,GAAF,CAAMkB,EAAN,CAAP,CAAJ;AACA,QAAI7E,CAAC,GAAGgF,EAAE,CAAC/B,GAAH,CAAOuC,CAAC,CAAC7B,GAAF,CAAMmB,EAAN,CAAP,CAAR;;AAEA,QAAI,CAACK,EAAD,IAAO/M,CAAC,CAAC6H,GAAF,CAAMuE,QAAN,IAAkB,CAA7B,EAAgC;AAC9BS,QAAE,GAAGM,KAAK,CAACvG,GAAN,EAAL;AACAkG,QAAE,GAAGL,EAAL;AACAM,QAAE,GAAG/M,CAAC,CAAC4G,GAAF,EAAL;AACAoG,QAAE,GAAGnE,CAAL;AACD,KALD,MAKO,IAAIkE,EAAE,IAAI,EAAEtM,CAAF,KAAQ,CAAlB,EAAqB;AAC1B;AACD;;AACD0M,SAAK,GAAGnN,CAAR;AAEAwM,KAAC,GAAGD,CAAJ;AACAA,KAAC,GAAGvM,CAAJ;AACA2M,MAAE,GAAGF,EAAL;AACAA,MAAE,GAAG5D,CAAL;AACA+D,MAAE,GAAGF,EAAL;AACAA,MAAE,GAAG9E,CAAL;AACD;;AACDqF,IAAE,GAAGjN,CAAC,CAAC4G,GAAF,EAAL;AACAsG,IAAE,GAAGrE,CAAL;AAEA,MAAIwE,IAAI,GAAGN,EAAE,CAACO,GAAH,GAASzG,GAAT,CAAamG,EAAE,CAACM,GAAH,EAAb,CAAX;AACA,MAAIC,IAAI,GAAGN,EAAE,CAACK,GAAH,GAASzG,GAAT,CAAaqG,EAAE,CAACI,GAAH,EAAb,CAAX;;AACA,MAAIC,IAAI,CAAC1F,GAAL,CAASwF,IAAT,KAAkB,CAAtB,EAAyB;AACvBJ,MAAE,GAAGJ,EAAL;AACAK,MAAE,GAAGJ,EAAL;AACD,GA1DiE,CA4DpE;;;AACE,MAAIC,EAAE,CAACS,QAAP,EAAiB;AACfT,MAAE,GAAGA,EAAE,CAACnG,GAAH,EAAL;AACAoG,MAAE,GAAGA,EAAE,CAACpG,GAAH,EAAL;AACD;;AACD,MAAIqG,EAAE,CAACO,QAAP,EAAiB;AACfP,MAAE,GAAGA,EAAE,CAACrG,GAAH,EAAL;AACAsG,MAAE,GAAGA,EAAE,CAACtG,GAAH,EAAL;AACD;;AAED,SAAO,CACL;AAAEL,KAAC,EAAEwG,EAAL;AAAStG,KAAC,EAAEuG;AAAZ,GADK,EAEL;AAAEzG,KAAC,EAAE0G,EAAL;AAASxG,KAAC,EAAEyG;AAAZ,GAFK,CAAP;AAID,CA1ED;;AA4EA5C,UAAU,CAACzG,SAAX,CAAqB4J,UAArB,GAAkC,SAASA,UAAT,CAAoBrL,CAApB,EAAuB;AACvD,MAAIqJ,KAAK,GAAG,KAAKX,IAAL,CAAUW,KAAtB;AACA,MAAIiC,EAAE,GAAGjC,KAAK,CAAC,CAAD,CAAd;AACA,MAAIkC,EAAE,GAAGlC,KAAK,CAAC,CAAD,CAAd;AAEA,MAAImC,EAAE,GAAGD,EAAE,CAAClH,CAAH,CAAK8E,GAAL,CAASnJ,CAAT,EAAYyL,QAAZ,CAAqB,KAAK9I,CAA1B,CAAT;AACA,MAAI+I,EAAE,GAAGJ,EAAE,CAACjH,CAAH,CAAKG,GAAL,GAAW2E,GAAX,CAAenJ,CAAf,EAAkByL,QAAlB,CAA2B,KAAK9I,CAAhC,CAAT;AAEA,MAAIgJ,EAAE,GAAGH,EAAE,CAACrC,GAAH,CAAOmC,EAAE,CAACnH,CAAV,CAAT;AACA,MAAIyH,EAAE,GAAGF,EAAE,CAACvC,GAAH,CAAOoC,EAAE,CAACpH,CAAV,CAAT;AACA,MAAI0H,EAAE,GAAGL,EAAE,CAACrC,GAAH,CAAOmC,EAAE,CAACjH,CAAV,CAAT;AACA,MAAIyH,EAAE,GAAGJ,EAAE,CAACvC,GAAH,CAAOoC,EAAE,CAAClH,CAAV,CAAT,CAXuD,CAazD;;AACE,MAAI5D,EAAE,GAAGT,CAAC,CAACyI,GAAF,CAAMkD,EAAN,EAAUlD,GAAV,CAAcmD,EAAd,CAAT;AACA,MAAIlL,EAAE,GAAGmL,EAAE,CAACpH,GAAH,CAAOqH,EAAP,EAAWtH,GAAX,EAAT;AACA,SAAO;AAAE/D,MAAE,EAAEA,EAAN;AAAUC,MAAE,EAAEA;AAAd,GAAP;AACD,CAjBD;;AAmBAwH,UAAU,CAACzG,SAAX,CAAqB4E,UAArB,GAAkC,SAASA,UAAT,CAAoBI,CAApB,EAAuBsF,GAAvB,EAA4B;AAC5DtF,GAAC,GAAG,IAAI1E,EAAJ,CAAO0E,CAAP,EAAU,EAAV,CAAJ;AACA,MAAI,CAACA,CAAC,CAACrE,GAAP,EACEqE,CAAC,GAAGA,CAAC,CAACjE,KAAF,CAAQ,KAAKJ,GAAb,CAAJ;AAEF,MAAIoI,EAAE,GAAG/D,CAAC,CAACuF,MAAF,GAAW5C,MAAX,CAAkB3C,CAAlB,EAAqBwF,OAArB,CAA6BxF,CAAC,CAAC2C,MAAF,CAAS,KAAKjF,CAAd,CAA7B,EAA+C8H,OAA/C,CAAuD,KAAK5H,CAA5D,CAAT;AACA,MAAImB,CAAC,GAAGgF,EAAE,CAACb,OAAH,EAAR;AACA,MAAInE,CAAC,CAACwG,MAAF,GAAWjC,MAAX,CAAkBS,EAAlB,EAAsB/E,GAAtB,CAA0B,KAAKlD,IAA/B,MAAyC,CAA7C,EACE,MAAM,IAAI/E,KAAJ,CAAU,eAAV,CAAN,CAR0D,CAU9D;AACA;;AACE,MAAI6C,KAAK,GAAGmF,CAAC,CAAC+C,OAAF,GAAYlI,KAAZ,EAAZ;AACA,MAAI0L,GAAG,IAAI,CAAC1L,KAAR,IAAiB,CAAC0L,GAAD,IAAQ1L,KAA7B,EACEmF,CAAC,GAAGA,CAAC,CAACG,MAAF,EAAJ;AAEF,SAAO,KAAKnC,KAAL,CAAWiD,CAAX,EAAcjB,CAAd,CAAP;AACD,CAjBD;;AAmBA0C,UAAU,CAACzG,SAAX,CAAqBgC,QAArB,GAAgC,SAASA,QAAT,CAAkBD,KAAlB,EAAyB;AACvD,MAAIA,KAAK,CAAC0I,GAAV,EACE,OAAO,IAAP;AAEF,MAAIzF,CAAC,GAAGjD,KAAK,CAACiD,CAAd;AACA,MAAIjB,CAAC,GAAGhC,KAAK,CAACgC,CAAd;AAEA,MAAI2G,EAAE,GAAG,KAAKhI,CAAL,CAAOiF,MAAP,CAAc3C,CAAd,CAAT;AACA,MAAI2F,GAAG,GAAG3F,CAAC,CAACuF,MAAF,GAAW5C,MAAX,CAAkB3C,CAAlB,EAAqBwF,OAArB,CAA6BE,EAA7B,EAAiCF,OAAjC,CAAyC,KAAK5H,CAA9C,CAAV;AACA,SAAOmB,CAAC,CAACwG,MAAF,GAAWK,OAAX,CAAmBD,GAAnB,EAAwBrL,IAAxB,CAA6B,CAA7B,MAAoC,CAA3C;AACD,CAVD;;AAYAmH,UAAU,CAACzG,SAAX,CAAqB6K,eAArB,GACI,SAASA,eAAT,CAAyB/H,MAAzB,EAAiCY,MAAjC,EAAyCE,cAAzC,EAAyD;AACvD,MAAIkH,OAAO,GAAG,KAAK3D,WAAnB;AACA,MAAI4D,OAAO,GAAG,KAAK3D,WAAnB;;AACA,OAAK,IAAIxK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkG,MAAM,CAACjG,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,QAAIoO,KAAK,GAAG,KAAKpB,UAAL,CAAgBlG,MAAM,CAAC9G,CAAD,CAAtB,CAAZ;;AACA,QAAI8D,CAAC,GAAGoC,MAAM,CAAClG,CAAD,CAAd;;AACA,QAAI2I,IAAI,GAAG7E,CAAC,CAAC8E,QAAF,EAAX;;AAEA,QAAIwF,KAAK,CAAChM,EAAN,CAAS2K,QAAb,EAAuB;AACrBqB,WAAK,CAAChM,EAAN,CAASiM,IAAT;AACAvK,OAAC,GAAGA,CAAC,CAACqC,GAAF,CAAM,IAAN,CAAJ;AACD;;AACD,QAAIiI,KAAK,CAAC/L,EAAN,CAAS0K,QAAb,EAAuB;AACrBqB,WAAK,CAAC/L,EAAN,CAASgM,IAAT;AACA1F,UAAI,GAAGA,IAAI,CAACxC,GAAL,CAAS,IAAT,CAAP;AACD;;AAED+H,WAAO,CAAClO,CAAC,GAAG,CAAL,CAAP,GAAiB8D,CAAjB;AACAoK,WAAO,CAAClO,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAP,GAAqB2I,IAArB;AACAwF,WAAO,CAACnO,CAAC,GAAG,CAAL,CAAP,GAAiBoO,KAAK,CAAChM,EAAvB;AACA+L,WAAO,CAACnO,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAP,GAAqBoO,KAAK,CAAC/L,EAA3B;AACD;;AACD,MAAItC,GAAG,GAAG,KAAK6G,WAAL,CAAiB,CAAjB,EAAoBsH,OAApB,EAA6BC,OAA7B,EAAsCnO,CAAC,GAAG,CAA1C,EAA6CgH,cAA7C,CAAV,CAtBuD,CAwB7D;;;AACM,OAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5F,CAAC,GAAG,CAAxB,EAA2B4F,CAAC,EAA5B,EAAgC;AAC9BsI,WAAO,CAACtI,CAAD,CAAP,GAAa,IAAb;AACAuI,WAAO,CAACvI,CAAD,CAAP,GAAa,IAAb;AACD;;AACD,SAAO7F,GAAP;AACD,CA/BL;;AAiCA,SAASuO,KAAT,CAAe1G,KAAf,EAAsBQ,CAAtB,EAAyBjB,CAAzB,EAA4BoH,KAA5B,EAAmC;AACjCzE,MAAI,CAACnC,SAALmC,CAAexG,IAAfwG,CAAoB,IAApBA,EAA0BlC,KAA1BkC,EAAiC,QAAjCA;;AACA,MAAI1B,CAAC,KAAK,IAAN,IAAcjB,CAAC,KAAK,IAAxB,EAA8B;AAC5B,SAAKiB,CAAL,GAAS,IAAT;AACA,SAAKjB,CAAL,GAAS,IAAT;AACA,SAAK0G,GAAL,GAAW,IAAX;AACD,GAJD,MAIO;AACL,SAAKzF,CAAL,GAAS,IAAI1E,EAAJ,CAAO0E,CAAP,EAAU,EAAV,CAAT;AACA,SAAKjB,CAAL,GAAS,IAAIzD,EAAJ,CAAOyD,CAAP,EAAU,EAAV,CAAT,CAFK,CAGT;;AACI,QAAIoH,KAAJ,EAAW;AACT,WAAKnG,CAAL,CAAOoG,QAAP,CAAgB,KAAK5G,KAAL,CAAW7D,GAA3B;AACA,WAAKoD,CAAL,CAAOqH,QAAP,CAAgB,KAAK5G,KAAL,CAAW7D,GAA3B;AACD;;AACD,QAAI,CAAC,KAAKqE,CAAL,CAAOrE,GAAZ,EACE,KAAKqE,CAAL,GAAS,KAAKA,CAAL,CAAOjE,KAAP,CAAa,KAAKyD,KAAL,CAAW7D,GAAxB,CAAT;AACF,QAAI,CAAC,KAAKoD,CAAL,CAAOpD,GAAZ,EACE,KAAKoD,CAAL,GAAS,KAAKA,CAAL,CAAOhD,KAAP,CAAa,KAAKyD,KAAL,CAAW7D,GAAxB,CAAT;AACF,SAAK8J,GAAL,GAAW,KAAX;AACD;AACF;;AACD1E,gBAAQ,CAACmF,KAAD,EAAQxE,IAAI,CAACnC,SAAb,CAARwB;;AAEAU,UAAU,CAACzG,SAAX,CAAqB+B,KAArB,GAA6B,SAASA,KAAT,CAAeiD,CAAf,EAAkBjB,CAAlB,EAAqBoH,KAArB,EAA4B;AACvD,SAAO,IAAID,KAAJ,CAAU,IAAV,EAAgBlG,CAAhB,EAAmBjB,CAAnB,EAAsBoH,KAAtB,CAAP;AACD,CAFD;;AAIA1E,UAAU,CAACzG,SAAX,CAAqBoB,aAArB,GAAqC,SAASA,aAAT,CAAuBxB,GAAvB,EAA4Be,GAA5B,EAAiC;AACpE,SAAOuK,KAAK,CAACG,QAAN,CAAe,IAAf,EAAqBzL,GAArB,EAA0Be,GAA1B,CAAP;AACD,CAFD;;AAIAuK,KAAK,CAAClL,SAAN,CAAgBwF,QAAhB,GAA2B,SAASA,QAAT,GAAoB;AAC7C,MAAI,CAAC,KAAKhB,KAAL,CAAWyC,IAAhB,EACE;AAEF,MAAIqE,GAAG,GAAG,KAAKpJ,WAAf;AACA,MAAIoJ,GAAG,IAAIA,GAAG,CAAC/F,IAAf,EACE,OAAO+F,GAAG,CAAC/F,IAAX;AAEF,MAAIA,IAAI,GAAG,KAAKf,KAAL,CAAWzC,KAAX,CAAiB,KAAKiD,CAAL,CAAO2C,MAAP,CAAc,KAAKnD,KAAL,CAAWyC,IAAX,CAAgB1B,IAA9B,CAAjB,EAAsD,KAAKxB,CAA3D,CAAX;;AACA,MAAIuH,GAAJ,EAAS;AACP,QAAI9G,KAAK,GAAG,KAAKA,KAAjB;;AACA,QAAI+G,OAAO,GAAG,UAAS7K,CAAT,EAAY;AACxB,aAAO8D,KAAK,CAACzC,KAAN,CAAYrB,CAAC,CAACsE,CAAF,CAAI2C,MAAJ,CAAWnD,KAAK,CAACyC,IAAN,CAAW1B,IAAtB,CAAZ,EAAyC7E,CAAC,CAACqD,CAA3C,CAAP;AACD,KAFD;;AAGAuH,OAAG,CAAC/F,IAAJ,GAAWA,IAAX;AACAA,QAAI,CAACrD,WAAL,GAAmB;AACjBqD,UAAI,EAAE,IADW;AAEjBtH,SAAG,EAAEqN,GAAG,CAACrN,GAAJ,IAAW;AACdoF,WAAG,EAAEiI,GAAG,CAACrN,GAAJ,CAAQoF,GADC;AAEdP,cAAM,EAAEwI,GAAG,CAACrN,GAAJ,CAAQ6E,MAAR,CAAe+E,GAAf,CAAmB0D,OAAnB;AAFM,OAFC;AAMjBpJ,aAAO,EAAEmJ,GAAG,CAACnJ,OAAJ,IAAe;AACtBG,YAAI,EAAEgJ,GAAG,CAACnJ,OAAJ,CAAYG,IADI;AAEtBQ,cAAM,EAAEwI,GAAG,CAACnJ,OAAJ,CAAYW,MAAZ,CAAmB+E,GAAnB,CAAuB0D,OAAvB;AAFc;AANP,KAAnB;AAWD;;AACD,SAAOhG,IAAP;AACD,CA5BD;;AA8BA2F,KAAK,CAAClL,SAAN,CAAgBwL,MAAhB,GAAyB,SAASA,MAAT,GAAkB;AACzC,MAAI,CAAC,KAAKtJ,WAAV,EACE,OAAO,CAAE,KAAK8C,CAAP,EAAU,KAAKjB,CAAf,CAAP;AAEF,SAAO,CAAE,KAAKiB,CAAP,EAAU,KAAKjB,CAAf,EAAkB,KAAK7B,WAAL,IAAoB;AAC3CC,WAAO,EAAE,KAAKD,WAAL,CAAiBC,OAAjB,IAA4B;AACnCG,UAAI,EAAE,KAAKJ,WAAL,CAAiBC,OAAjB,CAAyBG,IADI;AAEnCQ,YAAM,EAAE,KAAKZ,WAAL,CAAiBC,OAAjB,CAAyBW,MAAzB,CAAgCpG,KAAhC,CAAsC,CAAtC;AAF2B,KADM;AAK3CuB,OAAG,EAAE,KAAKiE,WAAL,CAAiBjE,GAAjB,IAAwB;AAC3BoF,SAAG,EAAE,KAAKnB,WAAL,CAAiBjE,GAAjB,CAAqBoF,GADC;AAE3BP,YAAM,EAAE,KAAKZ,WAAL,CAAiBjE,GAAjB,CAAqB6E,MAArB,CAA4BpG,KAA5B,CAAkC,CAAlC;AAFmB;AALc,GAAtC,CAAP;AAUD,CAdD;;AAgBAwO,KAAK,CAACG,QAAN,GAAiB,SAASA,QAAT,CAAkB7G,KAAlB,EAAyB5E,GAAzB,EAA8Be,GAA9B,EAAmC;AAClD,MAAI,OAAOf,GAAP,KAAe,QAAnB,EACEA,GAAG,GAAG6L,IAAI,CAACC,KAAL,CAAW9L,GAAX,CAAN;AACF,MAAIjD,GAAG,GAAG6H,KAAK,CAACzC,KAAN,CAAYnC,GAAG,CAAC,CAAD,CAAf,EAAoBA,GAAG,CAAC,CAAD,CAAvB,EAA4Be,GAA5B,CAAV;AACA,MAAI,CAACf,GAAG,CAAC,CAAD,CAAR,EACE,OAAOjD,GAAP;;AAEF,WAASgP,SAAT,CAAmB/L,GAAnB,EAAwB;AACtB,WAAO4E,KAAK,CAACzC,KAAN,CAAYnC,GAAG,CAAC,CAAD,CAAf,EAAoBA,GAAG,CAAC,CAAD,CAAvB,EAA4Be,GAA5B,CAAP;AACD;;AAED,MAAI2K,GAAG,GAAG1L,GAAG,CAAC,CAAD,CAAb;AACAjD,KAAG,CAACuF,WAAJ,GAAkB;AAChBqD,QAAI,EAAE,IADU;AAEhBpD,WAAO,EAAEmJ,GAAG,CAACnJ,OAAJ,IAAe;AACtBG,UAAI,EAAEgJ,GAAG,CAACnJ,OAAJ,CAAYG,IADI;AAEtBQ,YAAM,EAAE,CAAEnG,GAAF,EAAQyI,MAAR,CAAekG,GAAG,CAACnJ,OAAJ,CAAYW,MAAZ,CAAmB+E,GAAnB,CAAuB8D,SAAvB,CAAf;AAFc,KAFR;AAMhB1N,OAAG,EAAEqN,GAAG,CAACrN,GAAJ,IAAW;AACdoF,SAAG,EAAEiI,GAAG,CAACrN,GAAJ,CAAQoF,GADC;AAEdP,YAAM,EAAE,CAAEnG,GAAF,EAAQyI,MAAR,CAAekG,GAAG,CAACrN,GAAJ,CAAQ6E,MAAR,CAAe+E,GAAf,CAAmB8D,SAAnB,CAAf;AAFM;AANA,GAAlB;AAWA,SAAOhP,GAAP;AACD,CAxBD;;AA0BAuO,KAAK,CAAClL,SAAN,CAAgB4L,OAAhB,GAA0B,SAASA,OAAT,GAAmB;AAC3C,MAAI,KAAKC,UAAL,EAAJ,EACE,OAAO,qBAAP;AACF,SAAO,kBAAkB,KAAK7G,CAAL,CAAO8B,OAAP,GAAiBtJ,QAAjB,CAA0B,EAA1B,EAA8B,CAA9B,CAAlB,GACH,MADG,GACM,KAAKuG,CAAL,CAAO+C,OAAP,GAAiBtJ,QAAjB,CAA0B,EAA1B,EAA8B,CAA9B,CADN,GACyC,GADhD;AAED,CALD;;AAOA0N,KAAK,CAAClL,SAAN,CAAgB6L,UAAhB,GAA6B,SAASA,UAAT,GAAsB;AACjD,SAAO,KAAKpB,GAAZ;AACD,CAFD;;AAIAS,KAAK,CAAClL,SAAN,CAAgBgD,GAAhB,GAAsB,SAASA,GAAT,CAAatC,CAAb,EAAgB;AACtC;AACE,MAAI,KAAK+J,GAAT,EACE,OAAO/J,CAAP,CAHkC,CAKtC;;AACE,MAAIA,CAAC,CAAC+J,GAAN,EACE,OAAO,IAAP,CAPkC,CAStC;;AACE,MAAI,KAAKhG,EAAL,CAAQ/D,CAAR,CAAJ,EACE,OAAO,KAAKiF,GAAL,EAAP,CAXkC,CAatC;;AACE,MAAI,KAAK5C,GAAL,GAAW0B,EAAX,CAAc/D,CAAd,CAAJ,EACE,OAAO,KAAK8D,KAAL,CAAWzC,KAAX,CAAiB,IAAjB,EAAuB,IAAvB,CAAP,CAfkC,CAiBtC;;AACE,MAAI,KAAKiD,CAAL,CAAOhB,GAAP,CAAWtD,CAAC,CAACsE,CAAb,MAAoB,CAAxB,EACE,OAAO,KAAKR,KAAL,CAAWzC,KAAX,CAAiB,IAAjB,EAAuB,IAAvB,CAAP;AAEF,MAAI9E,CAAC,GAAG,KAAK8G,CAAL,CAAOuE,MAAP,CAAc5H,CAAC,CAACqD,CAAhB,CAAR;AACA,MAAI9G,CAAC,CAACqC,IAAF,CAAO,CAAP,MAAc,CAAlB,EACErC,CAAC,GAAGA,CAAC,CAAC0K,MAAF,CAAS,KAAK3C,CAAL,CAAOsD,MAAP,CAAc5H,CAAC,CAACsE,CAAhB,EAAmB4B,OAAnB,EAAT,CAAJ;AACF,MAAIkF,EAAE,GAAG7O,CAAC,CAACsN,MAAF,GAAWK,OAAX,CAAmB,KAAK5F,CAAxB,EAA2B4F,OAA3B,CAAmClK,CAAC,CAACsE,CAArC,CAAT;AACA,MAAI+G,EAAE,GAAG9O,CAAC,CAAC0K,MAAF,CAAS,KAAK3C,CAAL,CAAOsD,MAAP,CAAcwD,EAAd,CAAT,EAA4BlB,OAA5B,CAAoC,KAAK7G,CAAzC,CAAT;AACA,SAAO,KAAKS,KAAL,CAAWzC,KAAX,CAAiB+J,EAAjB,EAAqBC,EAArB,CAAP;AACD,CA3BD;;AA6BAb,KAAK,CAAClL,SAAN,CAAgB2F,GAAhB,GAAsB,SAASA,GAAT,GAAe;AACnC,MAAI,KAAK8E,GAAT,EACE,OAAO,IAAP,CAFiC,CAIrC;;AACE,MAAIuB,GAAG,GAAG,KAAKjI,CAAL,CAAOqE,MAAP,CAAc,KAAKrE,CAAnB,CAAV;AACA,MAAIiI,GAAG,CAAC1M,IAAJ,CAAS,CAAT,MAAgB,CAApB,EACE,OAAO,KAAKkF,KAAL,CAAWzC,KAAX,CAAiB,IAAjB,EAAuB,IAAvB,CAAP;AAEF,MAAIW,CAAC,GAAG,KAAK8B,KAAL,CAAW9B,CAAnB;AAEA,MAAIoG,EAAE,GAAG,KAAK9D,CAAL,CAAOuF,MAAP,EAAT;AACA,MAAI0B,KAAK,GAAGD,GAAG,CAACpF,OAAJ,EAAZ;AACA,MAAI3J,CAAC,GAAG6L,EAAE,CAACV,MAAH,CAAUU,EAAV,EAAc0B,OAAd,CAAsB1B,EAAtB,EAA0B0B,OAA1B,CAAkC9H,CAAlC,EAAqCiF,MAArC,CAA4CsE,KAA5C,CAAR;AAEA,MAAIH,EAAE,GAAG7O,CAAC,CAACsN,MAAF,GAAWK,OAAX,CAAmB,KAAK5F,CAAL,CAAOoD,MAAP,CAAc,KAAKpD,CAAnB,CAAnB,CAAT;AACA,MAAI+G,EAAE,GAAG9O,CAAC,CAAC0K,MAAF,CAAS,KAAK3C,CAAL,CAAOsD,MAAP,CAAcwD,EAAd,CAAT,EAA4BlB,OAA5B,CAAoC,KAAK7G,CAAzC,CAAT;AACA,SAAO,KAAKS,KAAL,CAAWzC,KAAX,CAAiB+J,EAAjB,EAAqBC,EAArB,CAAP;AACD,CAlBD;;AAoBAb,KAAK,CAAClL,SAAN,CAAgBiF,IAAhB,GAAuB,SAASA,IAAT,GAAgB;AACrC,SAAO,KAAKD,CAAL,CAAO8B,OAAP,EAAP;AACD,CAFD;;AAIAoE,KAAK,CAAClL,SAAN,CAAgBkF,IAAhB,GAAuB,SAASA,IAAT,GAAgB;AACrC,SAAO,KAAKnB,CAAL,CAAO+C,OAAP,EAAP;AACD,CAFD;;AAIAoE,KAAK,CAAClL,SAAN,CAAgB0H,GAAhB,GAAsB,SAASA,GAAT,CAAanJ,CAAb,EAAgB;AACpCA,GAAC,GAAG,IAAI+B,EAAJ,CAAO/B,CAAP,EAAU,EAAV,CAAJ;AACA,MAAI,KAAKsN,UAAL,EAAJ,EACE,OAAO,IAAP,CADF,KAEK,IAAI,KAAKpG,WAAL,CAAiBlH,CAAjB,CAAJ,EACH,OAAO,KAAKiG,KAAL,CAAWvC,YAAX,CAAwB,IAAxB,EAA8B1D,CAA9B,CAAP,CADG,KAEA,IAAI,KAAKiG,KAAL,CAAWyC,IAAf,EACH,OAAO,KAAKzC,KAAL,CAAWqG,eAAX,CAA2B,CAAE,IAAF,CAA3B,EAAqC,CAAEtM,CAAF,CAArC,CAAP,CADG,KAGH,OAAO,KAAKiG,KAAL,CAAWtB,QAAX,CAAoB,IAApB,EAA0B3E,CAA1B,CAAP;AACH,CAVD;;AAYA2M,KAAK,CAAClL,SAAN,CAAgBkM,MAAhB,GAAyB,SAASA,MAAT,CAAgBlN,EAAhB,EAAoBmL,EAApB,EAAwBlL,EAAxB,EAA4B;AACnD,MAAI6D,MAAM,GAAG,CAAE,IAAF,EAAQqH,EAAR,CAAb;AACA,MAAIzG,MAAM,GAAG,CAAE1E,EAAF,EAAMC,EAAN,CAAb;AACA,MAAI,KAAKuF,KAAL,CAAWyC,IAAf,EACE,OAAO,KAAKzC,KAAL,CAAWqG,eAAX,CAA2B/H,MAA3B,EAAmCY,MAAnC,CAAP,CADF,KAGE,OAAO,KAAKc,KAAL,CAAWhB,WAAX,CAAuB,CAAvB,EAA0BV,MAA1B,EAAkCY,MAAlC,EAA0C,CAA1C,CAAP;AACH,CAPD;;AASAwH,KAAK,CAAClL,SAAN,CAAgBmM,OAAhB,GAA0B,SAASA,OAAT,CAAiBnN,EAAjB,EAAqBmL,EAArB,EAAyBlL,EAAzB,EAA6B;AACrD,MAAI6D,MAAM,GAAG,CAAE,IAAF,EAAQqH,EAAR,CAAb;AACA,MAAIzG,MAAM,GAAG,CAAE1E,EAAF,EAAMC,EAAN,CAAb;AACA,MAAI,KAAKuF,KAAL,CAAWyC,IAAf,EACE,OAAO,KAAKzC,KAAL,CAAWqG,eAAX,CAA2B/H,MAA3B,EAAmCY,MAAnC,EAA2C,IAA3C,CAAP,CADF,KAGE,OAAO,KAAKc,KAAL,CAAWhB,WAAX,CAAuB,CAAvB,EAA0BV,MAA1B,EAAkCY,MAAlC,EAA0C,CAA1C,EAA6C,IAA7C,CAAP;AACH,CAPD;;AASAwH,KAAK,CAAClL,SAAN,CAAgByE,EAAhB,GAAqB,SAASA,EAAT,CAAY/D,CAAZ,EAAe;AAClC,SAAO,SAASA,CAAT,IACA,KAAK+J,GAAL,KAAa/J,CAAC,CAAC+J,GAAf,KACK,KAAKA,GAAL,IAAY,KAAKzF,CAAL,CAAOhB,GAAP,CAAWtD,CAAC,CAACsE,CAAb,MAAoB,CAApB,IAAyB,KAAKjB,CAAL,CAAOC,GAAP,CAAWtD,CAAC,CAACqD,CAAb,MAAoB,CAD9D,CADP;AAGD,CAJD;;AAMAmH,KAAK,CAAClL,SAAN,CAAgB+C,GAAhB,GAAsB,SAASA,GAAT,CAAaqJ,WAAb,EAA0B;AAC9C,MAAI,KAAK3B,GAAT,EACE,OAAO,IAAP;AAEF,MAAI9N,GAAG,GAAG,KAAK6H,KAAL,CAAWzC,KAAX,CAAiB,KAAKiD,CAAtB,EAAyB,KAAKjB,CAAL,CAAOG,MAAP,EAAzB,CAAV;;AACA,MAAIkI,WAAW,IAAI,KAAKlK,WAAxB,EAAqC;AACnC,QAAIoJ,GAAG,GAAG,KAAKpJ,WAAf;;AACA,QAAImK,MAAM,GAAG,UAAS3L,CAAT,EAAY;AACvB,aAAOA,CAAC,CAACqC,GAAF,EAAP;AACD,KAFD;;AAGApG,OAAG,CAACuF,WAAJ,GAAkB;AAChBjE,SAAG,EAAEqN,GAAG,CAACrN,GAAJ,IAAW;AACdoF,WAAG,EAAEiI,GAAG,CAACrN,GAAJ,CAAQoF,GADC;AAEdP,cAAM,EAAEwI,GAAG,CAACrN,GAAJ,CAAQ6E,MAAR,CAAe+E,GAAf,CAAmBwE,MAAnB;AAFM,OADA;AAKhBlK,aAAO,EAAEmJ,GAAG,CAACnJ,OAAJ,IAAe;AACtBG,YAAI,EAAEgJ,GAAG,CAACnJ,OAAJ,CAAYG,IADI;AAEtBQ,cAAM,EAAEwI,GAAG,CAACnJ,OAAJ,CAAYW,MAAZ,CAAmB+E,GAAnB,CAAuBwE,MAAvB;AAFc;AALR,KAAlB;AAUD;;AACD,SAAO1P,GAAP;AACD,CAtBD;;AAwBAuO,KAAK,CAAClL,SAAN,CAAgBiE,GAAhB,GAAsB,SAASA,GAAT,GAAe;AACnC,MAAI,KAAKwG,GAAT,EACE,OAAO,KAAKjG,KAAL,CAAW7B,MAAX,CAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,CAAP;AAEF,MAAIhG,GAAG,GAAG,KAAK6H,KAAL,CAAW7B,MAAX,CAAkB,KAAKqC,CAAvB,EAA0B,KAAKjB,CAA/B,EAAkC,KAAKS,KAAL,CAAWxD,GAA7C,CAAV;AACA,SAAOrE,GAAP;AACD,CAND;;AAQA,SAAS2P,MAAT,CAAgB9H,KAAhB,EAAuBQ,CAAvB,EAA0BjB,CAA1B,EAA6BtF,CAA7B,EAAgC;AAC9BiI,MAAI,CAACnC,SAALmC,CAAexG,IAAfwG,CAAoB,IAApBA,EAA0BlC,KAA1BkC,EAAiC,UAAjCA;;AACA,MAAI1B,CAAC,KAAK,IAAN,IAAcjB,CAAC,KAAK,IAApB,IAA4BtF,CAAC,KAAK,IAAtC,EAA4C;AAC1C,SAAKuG,CAAL,GAAS,KAAKR,KAAL,CAAWxD,GAApB;AACA,SAAK+C,CAAL,GAAS,KAAKS,KAAL,CAAWxD,GAApB;AACA,SAAKvC,CAAL,GAAS,IAAI6B,EAAJ,CAAO,CAAP,CAAT;AACD,GAJD,MAIO;AACL,SAAK0E,CAAL,GAAS,IAAI1E,EAAJ,CAAO0E,CAAP,EAAU,EAAV,CAAT;AACA,SAAKjB,CAAL,GAAS,IAAIzD,EAAJ,CAAOyD,CAAP,EAAU,EAAV,CAAT;AACA,SAAKtF,CAAL,GAAS,IAAI6B,EAAJ,CAAO7B,CAAP,EAAU,EAAV,CAAT;AACD;;AACD,MAAI,CAAC,KAAKuG,CAAL,CAAOrE,GAAZ,EACE,KAAKqE,CAAL,GAAS,KAAKA,CAAL,CAAOjE,KAAP,CAAa,KAAKyD,KAAL,CAAW7D,GAAxB,CAAT;AACF,MAAI,CAAC,KAAKoD,CAAL,CAAOpD,GAAZ,EACE,KAAKoD,CAAL,GAAS,KAAKA,CAAL,CAAOhD,KAAP,CAAa,KAAKyD,KAAL,CAAW7D,GAAxB,CAAT;AACF,MAAI,CAAC,KAAKlC,CAAL,CAAOkC,GAAZ,EACE,KAAKlC,CAAL,GAAS,KAAKA,CAAL,CAAOsC,KAAP,CAAa,KAAKyD,KAAL,CAAW7D,GAAxB,CAAT;AAEF,OAAK4L,IAAL,GAAY,KAAK9N,CAAL,KAAW,KAAK+F,KAAL,CAAWxD,GAAlC;AACD;;AACD+E,gBAAQ,CAACuG,MAAD,EAAS5F,IAAI,CAACnC,SAAd,CAARwB;;AAEAU,UAAU,CAACzG,SAAX,CAAqB2C,MAArB,GAA8B,SAASA,MAAT,CAAgBqC,CAAhB,EAAmBjB,CAAnB,EAAsBtF,CAAtB,EAAyB;AACrD,SAAO,IAAI6N,MAAJ,CAAW,IAAX,EAAiBtH,CAAjB,EAAoBjB,CAApB,EAAuBtF,CAAvB,CAAP;AACD,CAFD;;AAIA6N,MAAM,CAACtM,SAAP,CAAiBiD,GAAjB,GAAuB,SAASA,GAAT,GAAe;AACpC,MAAI,KAAK4I,UAAL,EAAJ,EACE,OAAO,KAAKrH,KAAL,CAAWzC,KAAX,CAAiB,IAAjB,EAAuB,IAAvB,CAAP;AAEF,MAAIyK,IAAI,GAAG,KAAK/N,CAAL,CAAOmI,OAAP,EAAX;AACA,MAAI6F,KAAK,GAAGD,IAAI,CAACjC,MAAL,EAAZ;AACA,MAAIG,EAAE,GAAG,KAAK1F,CAAL,CAAO2C,MAAP,CAAc8E,KAAd,CAAT;AACA,MAAIC,EAAE,GAAG,KAAK3I,CAAL,CAAO4D,MAAP,CAAc8E,KAAd,EAAqB9E,MAArB,CAA4B6E,IAA5B,CAAT;AAEA,SAAO,KAAKhI,KAAL,CAAWzC,KAAX,CAAiB2I,EAAjB,EAAqBgC,EAArB,CAAP;AACD,CAVD;;AAYAJ,MAAM,CAACtM,SAAP,CAAiB+C,GAAjB,GAAuB,SAASA,GAAT,GAAe;AACpC,SAAO,KAAKyB,KAAL,CAAW7B,MAAX,CAAkB,KAAKqC,CAAvB,EAA0B,KAAKjB,CAAL,CAAOG,MAAP,EAA1B,EAA2C,KAAKzF,CAAhD,CAAP;AACD,CAFD;;AAIA6N,MAAM,CAACtM,SAAP,CAAiBgD,GAAjB,GAAuB,SAASA,GAAT,CAAatC,CAAb,EAAgB;AACvC;AACE,MAAI,KAAKmL,UAAL,EAAJ,EACE,OAAOnL,CAAP,CAHmC,CAKvC;;AACE,MAAIA,CAAC,CAACmL,UAAF,EAAJ,EACE,OAAO,IAAP,CAPmC,CASvC;;AACE,MAAIc,GAAG,GAAGjM,CAAC,CAACjC,CAAF,CAAI8L,MAAJ,EAAV;AACA,MAAIqC,EAAE,GAAG,KAAKnO,CAAL,CAAO8L,MAAP,EAAT;AACA,MAAI9K,EAAE,GAAG,KAAKuF,CAAL,CAAO2C,MAAP,CAAcgF,GAAd,CAAT;AACA,MAAIjN,EAAE,GAAGgB,CAAC,CAACsE,CAAF,CAAI2C,MAAJ,CAAWiF,EAAX,CAAT;AACA,MAAIC,EAAE,GAAG,KAAK9I,CAAL,CAAO4D,MAAP,CAAcgF,GAAG,CAAChF,MAAJ,CAAWjH,CAAC,CAACjC,CAAb,CAAd,CAAT;AACA,MAAIqO,EAAE,GAAGpM,CAAC,CAACqD,CAAF,CAAI4D,MAAJ,CAAWiF,EAAE,CAACjF,MAAH,CAAU,KAAKlJ,CAAf,CAAX,CAAT;AAEA,MAAIsO,CAAC,GAAGtN,EAAE,CAAC6I,MAAH,CAAU5I,EAAV,CAAR;AACA,MAAIvD,CAAC,GAAG0Q,EAAE,CAACvE,MAAH,CAAUwE,EAAV,CAAR;;AACA,MAAIC,CAAC,CAACzN,IAAF,CAAO,CAAP,MAAc,CAAlB,EAAqB;AACnB,QAAInD,CAAC,CAACmD,IAAF,CAAO,CAAP,MAAc,CAAlB,EACE,OAAO,KAAKkF,KAAL,CAAW7B,MAAX,CAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,CAAP,CADF,KAGE,OAAO,KAAKgD,GAAL,EAAP;AACH;;AAED,MAAIqH,EAAE,GAAGD,CAAC,CAACxC,MAAF,EAAT;AACA,MAAI0C,EAAE,GAAGD,EAAE,CAACrF,MAAH,CAAUoF,CAAV,CAAT;AACA,MAAIpE,CAAC,GAAGlJ,EAAE,CAACkI,MAAH,CAAUqF,EAAV,CAAR;AAEA,MAAIlB,EAAE,GAAG3P,CAAC,CAACoO,MAAF,GAAWC,OAAX,CAAmByC,EAAnB,EAAuBrC,OAAvB,CAA+BjC,CAA/B,EAAkCiC,OAAlC,CAA0CjC,CAA1C,CAAT;AACA,MAAIoD,EAAE,GAAG5P,CAAC,CAACwL,MAAF,CAASgB,CAAC,CAACiC,OAAF,CAAUkB,EAAV,CAAT,EAAwBlB,OAAxB,CAAgCiC,EAAE,CAAClF,MAAH,CAAUsF,EAAV,CAAhC,CAAT;AACA,MAAIC,EAAE,GAAG,KAAKzO,CAAL,CAAOkJ,MAAP,CAAcjH,CAAC,CAACjC,CAAhB,EAAmBkJ,MAAnB,CAA0BoF,CAA1B,CAAT;AAEA,SAAO,KAAKvI,KAAL,CAAW7B,MAAX,CAAkBmJ,EAAlB,EAAsBC,EAAtB,EAA0BmB,EAA1B,CAAP;AACD,CAnCD;;AAqCAZ,MAAM,CAACtM,SAAP,CAAiB6C,QAAjB,GAA4B,SAASA,QAAT,CAAkBnC,CAAlB,EAAqB;AACjD;AACE,MAAI,KAAKmL,UAAL,EAAJ,EACE,OAAOnL,CAAC,CAACuD,GAAF,EAAP,CAH6C,CAKjD;;AACE,MAAIvD,CAAC,CAACmL,UAAF,EAAJ,EACE,OAAO,IAAP,CAP6C,CASjD;;AACE,MAAIe,EAAE,GAAG,KAAKnO,CAAL,CAAO8L,MAAP,EAAT;AACA,MAAI9K,EAAE,GAAG,KAAKuF,CAAd;AACA,MAAItF,EAAE,GAAGgB,CAAC,CAACsE,CAAF,CAAI2C,MAAJ,CAAWiF,EAAX,CAAT;AACA,MAAIC,EAAE,GAAG,KAAK9I,CAAd;AACA,MAAI+I,EAAE,GAAGpM,CAAC,CAACqD,CAAF,CAAI4D,MAAJ,CAAWiF,EAAX,EAAejF,MAAf,CAAsB,KAAKlJ,CAA3B,CAAT;AAEA,MAAIsO,CAAC,GAAGtN,EAAE,CAAC6I,MAAH,CAAU5I,EAAV,CAAR;AACA,MAAIvD,CAAC,GAAG0Q,EAAE,CAACvE,MAAH,CAAUwE,EAAV,CAAR;;AACA,MAAIC,CAAC,CAACzN,IAAF,CAAO,CAAP,MAAc,CAAlB,EAAqB;AACnB,QAAInD,CAAC,CAACmD,IAAF,CAAO,CAAP,MAAc,CAAlB,EACE,OAAO,KAAKkF,KAAL,CAAW7B,MAAX,CAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,CAAP,CADF,KAGE,OAAO,KAAKgD,GAAL,EAAP;AACH;;AAED,MAAIqH,EAAE,GAAGD,CAAC,CAACxC,MAAF,EAAT;AACA,MAAI0C,EAAE,GAAGD,EAAE,CAACrF,MAAH,CAAUoF,CAAV,CAAT;AACA,MAAIpE,CAAC,GAAGlJ,EAAE,CAACkI,MAAH,CAAUqF,EAAV,CAAR;AAEA,MAAIlB,EAAE,GAAG3P,CAAC,CAACoO,MAAF,GAAWC,OAAX,CAAmByC,EAAnB,EAAuBrC,OAAvB,CAA+BjC,CAA/B,EAAkCiC,OAAlC,CAA0CjC,CAA1C,CAAT;AACA,MAAIoD,EAAE,GAAG5P,CAAC,CAACwL,MAAF,CAASgB,CAAC,CAACiC,OAAF,CAAUkB,EAAV,CAAT,EAAwBlB,OAAxB,CAAgCiC,EAAE,CAAClF,MAAH,CAAUsF,EAAV,CAAhC,CAAT;AACA,MAAIC,EAAE,GAAG,KAAKzO,CAAL,CAAOkJ,MAAP,CAAcoF,CAAd,CAAT;AAEA,SAAO,KAAKvI,KAAL,CAAW7B,MAAX,CAAkBmJ,EAAlB,EAAsBC,EAAtB,EAA0BmB,EAA1B,CAAP;AACD,CAlCD;;AAoCAZ,MAAM,CAACtM,SAAP,CAAiBuD,IAAjB,GAAwB,SAASA,IAAT,CAAc4J,GAAd,EAAmB;AACzC,MAAIA,GAAG,KAAK,CAAZ,EACE,OAAO,IAAP;AACF,MAAI,KAAKtB,UAAL,EAAJ,EACE,OAAO,IAAP;AACF,MAAI,CAACsB,GAAL,EACE,OAAO,KAAKxH,GAAL,EAAP;AAEF,MAAI/I,CAAJ;;AACA,MAAI,KAAK4H,KAAL,CAAWqC,KAAX,IAAoB,KAAKrC,KAAL,CAAWuC,MAAnC,EAA2C;AACzC,QAAI5K,CAAC,GAAG,IAAR;;AACA,SAAKS,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGuQ,GAAhB,EAAqBvQ,CAAC,EAAtB,EACET,CAAC,GAAGA,CAAC,CAACwJ,GAAF,EAAJ;;AACF,WAAOxJ,CAAP;AACD,GAdwC,CAgB3C;AACA;;;AACE,MAAIuG,CAAC,GAAG,KAAK8B,KAAL,CAAW9B,CAAnB;AACA,MAAIiE,IAAI,GAAG,KAAKnC,KAAL,CAAWmC,IAAtB;AAEA,MAAIyG,EAAE,GAAG,KAAKpI,CAAd;AACA,MAAIqI,EAAE,GAAG,KAAKtJ,CAAd;AACA,MAAIuJ,EAAE,GAAG,KAAK7O,CAAd;AACA,MAAI8O,GAAG,GAAGD,EAAE,CAAC/C,MAAH,GAAYA,MAAZ,EAAV,CAxByC,CA0B3C;;AACE,MAAIiD,GAAG,GAAGH,EAAE,CAACjF,MAAH,CAAUiF,EAAV,CAAV;;AACA,OAAKzQ,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGuQ,GAAhB,EAAqBvQ,CAAC,EAAtB,EAA0B;AACxB,QAAI6Q,GAAG,GAAGL,EAAE,CAAC7C,MAAH,EAAV;AACA,QAAImD,IAAI,GAAGF,GAAG,CAACjD,MAAJ,EAAX;AACA,QAAIoD,IAAI,GAAGD,IAAI,CAACnD,MAAL,EAAX;AACA,QAAItN,CAAC,GAAGwQ,GAAG,CAACrF,MAAJ,CAAWqF,GAAX,EAAgBjD,OAAhB,CAAwBiD,GAAxB,EAA6BjD,OAA7B,CAAqC9H,CAAC,CAACiF,MAAF,CAAS4F,GAAT,CAArC,CAAR;AAEA,QAAIK,EAAE,GAAGR,EAAE,CAACzF,MAAH,CAAU+F,IAAV,CAAT;AACA,QAAI5B,EAAE,GAAG7O,CAAC,CAACsN,MAAF,GAAWK,OAAX,CAAmBgD,EAAE,CAACxF,MAAH,CAAUwF,EAAV,CAAnB,CAAT;AACA,QAAIC,EAAE,GAAGD,EAAE,CAAChD,OAAH,CAAWkB,EAAX,CAAT;AACA,QAAIgC,GAAG,GAAG7Q,CAAC,CAAC0K,MAAF,CAASkG,EAAT,CAAV;AACAC,OAAG,GAAGA,GAAG,CAACtD,OAAJ,CAAYsD,GAAZ,EAAiBlD,OAAjB,CAAyB+C,IAAzB,CAAN;AACA,QAAIT,EAAE,GAAGM,GAAG,CAAC7F,MAAJ,CAAW2F,EAAX,CAAT;AACA,QAAI1Q,CAAC,GAAG,CAAJ,GAAQuQ,GAAZ,EACEI,GAAG,GAAGA,GAAG,CAAC5F,MAAJ,CAAWgG,IAAX,CAAN;AAEFP,MAAE,GAAGtB,EAAL;AACAwB,MAAE,GAAGJ,EAAL;AACAM,OAAG,GAAGM,GAAN;AACD;;AAED,SAAO,KAAKtJ,KAAL,CAAW7B,MAAX,CAAkByK,EAAlB,EAAsBI,GAAG,CAAC7F,MAAJ,CAAWhB,IAAX,CAAtB,EAAwC2G,EAAxC,CAAP;AACD,CAjDD;;AAmDAhB,MAAM,CAACtM,SAAP,CAAiB2F,GAAjB,GAAuB,SAASA,GAAT,GAAe;AACpC,MAAI,KAAKkG,UAAL,EAAJ,EACE,OAAO,IAAP;AAEF,MAAI,KAAKrH,KAAL,CAAWqC,KAAf,EACE,OAAO,KAAKkH,QAAL,EAAP,CADF,KAEK,IAAI,KAAKvJ,KAAL,CAAWuC,MAAf,EACH,OAAO,KAAKiH,SAAL,EAAP,CADG,KAGH,OAAO,KAAKC,IAAL,EAAP;AACH,CAVD;;AAYA3B,MAAM,CAACtM,SAAP,CAAiB+N,QAAjB,GAA4B,SAASA,QAAT,GAAoB;AAC9C,MAAIjC,EAAJ;AACA,MAAIC,EAAJ;AACA,MAAImB,EAAJ,CAH8C,CAIhD;;AACE,MAAI,KAAKX,IAAT,EAAe;AACjB;AACA;AACA;AAEA;AACI,QAAI2B,EAAE,GAAG,KAAKlJ,CAAL,CAAOuF,MAAP,EAAT,CANa,CAOjB;;AACI,QAAI4D,EAAE,GAAG,KAAKpK,CAAL,CAAOwG,MAAP,EAAT,CARa,CASjB;;AACI,QAAI6D,IAAI,GAAGD,EAAE,CAAC5D,MAAH,EAAX,CAVa,CAWjB;;AACI,QAAItC,CAAC,GAAG,KAAKjD,CAAL,CAAOoD,MAAP,CAAc+F,EAAd,EAAkB5D,MAAlB,GAA2BK,OAA3B,CAAmCsD,EAAnC,EAAuCtD,OAAvC,CAA+CwD,IAA/C,CAAR;AACAnG,KAAC,GAAGA,CAAC,CAACuC,OAAF,CAAUvC,CAAV,CAAJ,CAba,CAcjB;;AACI,QAAIoG,CAAC,GAAGH,EAAE,CAAC9F,MAAH,CAAU8F,EAAV,EAAc1D,OAAd,CAAsB0D,EAAtB,CAAR,CAfa,CAgBjB;;AACI,QAAII,CAAC,GAAGD,CAAC,CAAC9D,MAAF,GAAWK,OAAX,CAAmB3C,CAAnB,EAAsB2C,OAAtB,CAA8B3C,CAA9B,CAAR,CAjBa,CAmBjB;;AACI,QAAIsG,KAAK,GAAGH,IAAI,CAAC5D,OAAL,CAAa4D,IAAb,CAAZ;AACAG,SAAK,GAAGA,KAAK,CAAC/D,OAAN,CAAc+D,KAAd,CAAR;AACAA,SAAK,GAAGA,KAAK,CAAC/D,OAAN,CAAc+D,KAAd,CAAR,CAtBa,CAwBjB;;AACIzC,MAAE,GAAGwC,CAAL,CAzBa,CA0BjB;;AACIvC,MAAE,GAAGsC,CAAC,CAAC1G,MAAF,CAASM,CAAC,CAAC2C,OAAF,CAAU0D,CAAV,CAAT,EAAuB1D,OAAvB,CAA+B2D,KAA/B,CAAL,CA3Ba,CA4BjB;;AACIrB,MAAE,GAAG,KAAKnJ,CAAL,CAAOqE,MAAP,CAAc,KAAKrE,CAAnB,CAAL;AACD,GA9BD,MA8BO;AACT;AACA;AACA;AAEA;AACI,QAAIrB,CAAC,GAAG,KAAKsC,CAAL,CAAOuF,MAAP,EAAR,CANK,CAOT;;AACI,QAAI3H,CAAC,GAAG,KAAKmB,CAAL,CAAOwG,MAAP,EAAR,CARK,CAST;;AACI,QAAItN,CAAC,GAAG2F,CAAC,CAAC2H,MAAF,EAAR,CAVK,CAWT;;AACI,QAAIiE,CAAC,GAAG,KAAKxJ,CAAL,CAAOoD,MAAP,CAAcxF,CAAd,EAAiB2H,MAAjB,GAA0BK,OAA1B,CAAkClI,CAAlC,EAAqCkI,OAArC,CAA6C3N,CAA7C,CAAR;AACAuR,KAAC,GAAGA,CAAC,CAAChE,OAAF,CAAUgE,CAAV,CAAJ,CAbK,CAcT;;AACI,QAAIC,CAAC,GAAG/L,CAAC,CAAC0F,MAAF,CAAS1F,CAAT,EAAY8H,OAAZ,CAAoB9H,CAApB,CAAR,CAfK,CAgBT;;AACI,QAAIgM,CAAC,GAAGD,CAAC,CAAClE,MAAF,EAAR,CAjBK,CAmBT;;AACI,QAAIoE,EAAE,GAAG1R,CAAC,CAACuN,OAAF,CAAUvN,CAAV,CAAT;AACA0R,MAAE,GAAGA,EAAE,CAACnE,OAAH,CAAWmE,EAAX,CAAL;AACAA,MAAE,GAAGA,EAAE,CAACnE,OAAH,CAAWmE,EAAX,CAAL,CAtBK,CAwBT;;AACI7C,MAAE,GAAG4C,CAAC,CAAC9D,OAAF,CAAU4D,CAAV,EAAa5D,OAAb,CAAqB4D,CAArB,CAAL,CAzBK,CA0BT;;AACIzC,MAAE,GAAG0C,CAAC,CAAC9G,MAAF,CAAS6G,CAAC,CAAC5D,OAAF,CAAUkB,EAAV,CAAT,EAAwBlB,OAAxB,CAAgC+D,EAAhC,CAAL,CA3BK,CA4BT;;AACIzB,MAAE,GAAG,KAAKnJ,CAAL,CAAO4D,MAAP,CAAc,KAAKlJ,CAAnB,CAAL;AACAyO,MAAE,GAAGA,EAAE,CAAC1C,OAAH,CAAW0C,EAAX,CAAL;AACD;;AAED,SAAO,KAAK1I,KAAL,CAAW7B,MAAX,CAAkBmJ,EAAlB,EAAsBC,EAAtB,EAA0BmB,EAA1B,CAAP;AACD,CArED;;AAuEAZ,MAAM,CAACtM,SAAP,CAAiBgO,SAAjB,GAA6B,SAASA,SAAT,GAAqB;AAChD,MAAIlC,EAAJ;AACA,MAAIC,EAAJ;AACA,MAAImB,EAAJ,CAHgD,CAIlD;;AACE,MAAI,KAAKX,IAAT,EAAe;AACjB;AACA;AACA;AAEA;AACI,QAAI2B,EAAE,GAAG,KAAKlJ,CAAL,CAAOuF,MAAP,EAAT,CANa,CAOjB;;AACI,QAAI4D,EAAE,GAAG,KAAKpK,CAAL,CAAOwG,MAAP,EAAT,CARa,CASjB;;AACI,QAAI6D,IAAI,GAAGD,EAAE,CAAC5D,MAAH,EAAX,CAVa,CAWjB;;AACI,QAAItC,CAAC,GAAG,KAAKjD,CAAL,CAAOoD,MAAP,CAAc+F,EAAd,EAAkB5D,MAAlB,GAA2BK,OAA3B,CAAmCsD,EAAnC,EAAuCtD,OAAvC,CAA+CwD,IAA/C,CAAR;AACAnG,KAAC,GAAGA,CAAC,CAACuC,OAAF,CAAUvC,CAAV,CAAJ,CAba,CAcjB;;AACI,QAAIoG,CAAC,GAAGH,EAAE,CAAC9F,MAAH,CAAU8F,EAAV,EAAc1D,OAAd,CAAsB0D,EAAtB,EAA0B1D,OAA1B,CAAkC,KAAKhG,KAAL,CAAW9B,CAA7C,CAAR,CAfa,CAgBjB;;AACI,QAAI4L,CAAC,GAAGD,CAAC,CAAC9D,MAAF,GAAWK,OAAX,CAAmB3C,CAAnB,EAAsB2C,OAAtB,CAA8B3C,CAA9B,CAAR,CAjBa,CAkBjB;;AACI6D,MAAE,GAAGwC,CAAL,CAnBa,CAoBjB;;AACI,QAAIC,KAAK,GAAGH,IAAI,CAAC5D,OAAL,CAAa4D,IAAb,CAAZ;AACAG,SAAK,GAAGA,KAAK,CAAC/D,OAAN,CAAc+D,KAAd,CAAR;AACAA,SAAK,GAAGA,KAAK,CAAC/D,OAAN,CAAc+D,KAAd,CAAR;AACAxC,MAAE,GAAGsC,CAAC,CAAC1G,MAAF,CAASM,CAAC,CAAC2C,OAAF,CAAU0D,CAAV,CAAT,EAAuB1D,OAAvB,CAA+B2D,KAA/B,CAAL,CAxBa,CAyBjB;;AACIrB,MAAE,GAAG,KAAKnJ,CAAL,CAAOqE,MAAP,CAAc,KAAKrE,CAAnB,CAAL;AACD,GA3BD,MA2BO;AACT;AACA;AAEA;AACI,QAAI6K,KAAK,GAAG,KAAKnQ,CAAL,CAAO8L,MAAP,EAAZ,CALK,CAMT;;AACI,QAAIsE,KAAK,GAAG,KAAK9K,CAAL,CAAOwG,MAAP,EAAZ,CAPK,CAQT;;AACI,QAAIhF,IAAI,GAAG,KAAKP,CAAL,CAAO2C,MAAP,CAAckH,KAAd,CAAX,CATK,CAUT;;AACI,QAAIC,KAAK,GAAG,KAAK9J,CAAL,CAAOsD,MAAP,CAAcsG,KAAd,EAAqBjH,MAArB,CAA4B,KAAK3C,CAAL,CAAOoD,MAAP,CAAcwG,KAAd,CAA5B,CAAZ;AACAE,SAAK,GAAGA,KAAK,CAAC1G,MAAN,CAAa0G,KAAb,EAAoBtE,OAApB,CAA4BsE,KAA5B,CAAR,CAZK,CAaT;;AACI,QAAIC,KAAK,GAAGxJ,IAAI,CAACiF,OAAL,CAAajF,IAAb,CAAZ;AACAwJ,SAAK,GAAGA,KAAK,CAACvE,OAAN,CAAcuE,KAAd,CAAR;AACA,QAAIC,KAAK,GAAGD,KAAK,CAAC3G,MAAN,CAAa2G,KAAb,CAAZ;AACAjD,MAAE,GAAGgD,KAAK,CAACvE,MAAN,GAAeK,OAAf,CAAuBoE,KAAvB,CAAL,CAjBK,CAkBT;;AACI9B,MAAE,GAAG,KAAKnJ,CAAL,CAAOqE,MAAP,CAAc,KAAK3J,CAAnB,EAAsB8L,MAAtB,GAA+BK,OAA/B,CAAuCiE,KAAvC,EAA8CjE,OAA9C,CAAsDgE,KAAtD,CAAL,CAnBK,CAoBT;;AACI,QAAIK,OAAO,GAAGJ,KAAK,CAACtE,MAAN,EAAd;AACA0E,WAAO,GAAGA,OAAO,CAACzE,OAAR,CAAgByE,OAAhB,CAAV;AACAA,WAAO,GAAGA,OAAO,CAACzE,OAAR,CAAgByE,OAAhB,CAAV;AACAA,WAAO,GAAGA,OAAO,CAACzE,OAAR,CAAgByE,OAAhB,CAAV;AACAlD,MAAE,GAAG+C,KAAK,CAACnH,MAAN,CAAaoH,KAAK,CAACnE,OAAN,CAAckB,EAAd,CAAb,EAAgClB,OAAhC,CAAwCqE,OAAxC,CAAL;AACD;;AAED,SAAO,KAAKzK,KAAL,CAAW7B,MAAX,CAAkBmJ,EAAlB,EAAsBC,EAAtB,EAA0BmB,EAA1B,CAAP;AACD,CA7DD;;AA+DAZ,MAAM,CAACtM,SAAP,CAAiBiO,IAAjB,GAAwB,SAASA,IAAT,GAAgB;AACtC,MAAIvL,CAAC,GAAG,KAAK8B,KAAL,CAAW9B,CAAnB,CADsC,CAGxC;;AACE,MAAI0K,EAAE,GAAG,KAAKpI,CAAd;AACA,MAAIqI,EAAE,GAAG,KAAKtJ,CAAd;AACA,MAAIuJ,EAAE,GAAG,KAAK7O,CAAd;AACA,MAAI8O,GAAG,GAAGD,EAAE,CAAC/C,MAAH,GAAYA,MAAZ,EAAV;AAEA,MAAIkD,GAAG,GAAGL,EAAE,CAAC7C,MAAH,EAAV;AACA,MAAI2E,GAAG,GAAG7B,EAAE,CAAC9C,MAAH,EAAV;AAEA,MAAItN,CAAC,GAAGwQ,GAAG,CAACrF,MAAJ,CAAWqF,GAAX,EAAgBjD,OAAhB,CAAwBiD,GAAxB,EAA6BjD,OAA7B,CAAqC9H,CAAC,CAACiF,MAAF,CAAS4F,GAAT,CAArC,CAAR;AAEA,MAAI4B,IAAI,GAAG/B,EAAE,CAAChF,MAAH,CAAUgF,EAAV,CAAX;AACA+B,MAAI,GAAGA,IAAI,CAAC3E,OAAL,CAAa2E,IAAb,CAAP;AACA,MAAIvB,EAAE,GAAGuB,IAAI,CAACxH,MAAL,CAAYuH,GAAZ,CAAT;AACA,MAAIpD,EAAE,GAAG7O,CAAC,CAACsN,MAAF,GAAWK,OAAX,CAAmBgD,EAAE,CAACxF,MAAH,CAAUwF,EAAV,CAAnB,CAAT;AACA,MAAIC,EAAE,GAAGD,EAAE,CAAChD,OAAH,CAAWkB,EAAX,CAAT;AAEA,MAAIsD,IAAI,GAAGF,GAAG,CAAC3E,MAAJ,EAAX;AACA6E,MAAI,GAAGA,IAAI,CAAC5E,OAAL,CAAa4E,IAAb,CAAP;AACAA,MAAI,GAAGA,IAAI,CAAC5E,OAAL,CAAa4E,IAAb,CAAP;AACAA,MAAI,GAAGA,IAAI,CAAC5E,OAAL,CAAa4E,IAAb,CAAP;AACA,MAAIrD,EAAE,GAAG9O,CAAC,CAAC0K,MAAF,CAASkG,EAAT,EAAajD,OAAb,CAAqBwE,IAArB,CAAT;AACA,MAAIlC,EAAE,GAAGG,EAAE,CAACjF,MAAH,CAAUiF,EAAV,EAAc1F,MAAd,CAAqB2F,EAArB,CAAT;AAEA,SAAO,KAAK9I,KAAL,CAAW7B,MAAX,CAAkBmJ,EAAlB,EAAsBC,EAAtB,EAA0BmB,EAA1B,CAAP;AACD,CA5BD;;AA8BAZ,MAAM,CAACtM,SAAP,CAAiBqP,IAAjB,GAAwB,SAASA,IAAT,GAAgB;AACtC,MAAI,CAAC,KAAK7K,KAAL,CAAWqC,KAAhB,EACE,OAAO,KAAKlB,GAAL,GAAW3C,GAAX,CAAe,IAAf,CAAP,CAFoC,CAIxC;AACA;AAEA;;AACE,MAAIkL,EAAE,GAAG,KAAKlJ,CAAL,CAAOuF,MAAP,EAAT,CARsC,CASxC;;AACE,MAAI4D,EAAE,GAAG,KAAKpK,CAAL,CAAOwG,MAAP,EAAT,CAVsC,CAWxC;;AACE,MAAI+E,EAAE,GAAG,KAAK7Q,CAAL,CAAO8L,MAAP,EAAT,CAZsC,CAaxC;;AACE,MAAI6D,IAAI,GAAGD,EAAE,CAAC5D,MAAH,EAAX,CAdsC,CAexC;;AACE,MAAI8D,CAAC,GAAGH,EAAE,CAAC9F,MAAH,CAAU8F,EAAV,EAAc1D,OAAd,CAAsB0D,EAAtB,CAAR,CAhBsC,CAiBxC;;AACE,MAAIqB,EAAE,GAAGlB,CAAC,CAAC9D,MAAF,EAAT,CAlBsC,CAmBxC;;AACE,MAAIkE,CAAC,GAAG,KAAKzJ,CAAL,CAAOoD,MAAP,CAAc+F,EAAd,EAAkB5D,MAAlB,GAA2BK,OAA3B,CAAmCsD,EAAnC,EAAuCtD,OAAvC,CAA+CwD,IAA/C,CAAR;AACAK,GAAC,GAAGA,CAAC,CAACjE,OAAF,CAAUiE,CAAV,CAAJ;AACAA,GAAC,GAAGA,CAAC,CAACrG,MAAF,CAASqG,CAAT,EAAYjE,OAAZ,CAAoBiE,CAApB,CAAJ;AACAA,GAAC,GAAGA,CAAC,CAAC7D,OAAF,CAAU2E,EAAV,CAAJ,CAvBsC,CAwBxC;;AACE,MAAIC,EAAE,GAAGf,CAAC,CAAClE,MAAF,EAAT,CAzBsC,CA0BxC;;AACE,MAAI+D,CAAC,GAAGF,IAAI,CAAC5D,OAAL,CAAa4D,IAAb,CAAR;AACAE,GAAC,GAAGA,CAAC,CAAC9D,OAAF,CAAU8D,CAAV,CAAJ;AACAA,GAAC,GAAGA,CAAC,CAAC9D,OAAF,CAAU8D,CAAV,CAAJ;AACAA,GAAC,GAAGA,CAAC,CAAC9D,OAAF,CAAU8D,CAAV,CAAJ,CA9BsC,CA+BxC;;AACE,MAAI5F,CAAC,GAAG2F,CAAC,CAAC7D,OAAF,CAAUiE,CAAV,EAAalE,MAAb,GAAsBK,OAAtB,CAA8B2E,EAA9B,EAAkC3E,OAAlC,CAA0C4E,EAA1C,EAA8C5E,OAA9C,CAAsD0D,CAAtD,CAAR,CAhCsC,CAiCxC;;AACE,MAAImB,IAAI,GAAGtB,EAAE,CAACxG,MAAH,CAAUe,CAAV,CAAX;AACA+G,MAAI,GAAGA,IAAI,CAACjF,OAAL,CAAaiF,IAAb,CAAP;AACAA,MAAI,GAAGA,IAAI,CAACjF,OAAL,CAAaiF,IAAb,CAAP;AACA,MAAI3D,EAAE,GAAG,KAAK9G,CAAL,CAAO2C,MAAP,CAAc6H,EAAd,EAAkB5E,OAAlB,CAA0B6E,IAA1B,CAAT;AACA3D,IAAE,GAAGA,EAAE,CAACtB,OAAH,CAAWsB,EAAX,CAAL;AACAA,IAAE,GAAGA,EAAE,CAACtB,OAAH,CAAWsB,EAAX,CAAL,CAvCsC,CAwCxC;;AACE,MAAIC,EAAE,GAAG,KAAKhI,CAAL,CAAO4D,MAAP,CAAce,CAAC,CAACf,MAAF,CAAS2G,CAAC,CAAC1D,OAAF,CAAUlC,CAAV,CAAT,EAAuBkC,OAAvB,CAA+B6D,CAAC,CAAC9G,MAAF,CAAS6H,EAAT,CAA/B,CAAd,CAAT;AACAzD,IAAE,GAAGA,EAAE,CAACvB,OAAH,CAAWuB,EAAX,CAAL;AACAA,IAAE,GAAGA,EAAE,CAACvB,OAAH,CAAWuB,EAAX,CAAL;AACAA,IAAE,GAAGA,EAAE,CAACvB,OAAH,CAAWuB,EAAX,CAAL,CA5CsC,CA6CxC;;AACE,MAAImB,EAAE,GAAG,KAAKzO,CAAL,CAAO2J,MAAP,CAAcqG,CAAd,EAAiBlE,MAAjB,GAA0BK,OAA1B,CAAkC0E,EAAlC,EAAsC1E,OAAtC,CAA8C4E,EAA9C,CAAT;AAEA,SAAO,KAAKhL,KAAL,CAAW7B,MAAX,CAAkBmJ,EAAlB,EAAsBC,EAAtB,EAA0BmB,EAA1B,CAAP;AACD,CAjDD;;AAmDAZ,MAAM,CAACtM,SAAP,CAAiB0H,GAAjB,GAAuB,SAASA,GAAT,CAAanJ,CAAb,EAAgBmR,KAAhB,EAAuB;AAC5CnR,GAAC,GAAG,IAAI+B,EAAJ,CAAO/B,CAAP,EAAUmR,KAAV,CAAJ;AAEA,SAAO,KAAKlL,KAAL,CAAWtB,QAAX,CAAoB,IAApB,EAA0B3E,CAA1B,CAAP;AACD,CAJD;;AAMA+N,MAAM,CAACtM,SAAP,CAAiByE,EAAjB,GAAsB,SAASA,EAAT,CAAY/D,CAAZ,EAAe;AACnC,MAAIA,CAAC,CAACF,IAAF,KAAW,QAAf,EACE,OAAO,KAAKiE,EAAL,CAAQ/D,CAAC,CAACuD,GAAF,EAAR,CAAP;AAEF,MAAI,SAASvD,CAAb,EACE,OAAO,IAAP,CALiC,CAOrC;;AACE,MAAIkM,EAAE,GAAG,KAAKnO,CAAL,CAAO8L,MAAP,EAAT;AACA,MAAIoC,GAAG,GAAGjM,CAAC,CAACjC,CAAF,CAAI8L,MAAJ,EAAV;AACA,MAAI,KAAKvF,CAAL,CAAO2C,MAAP,CAAcgF,GAAd,EAAmB/B,OAAnB,CAA2BlK,CAAC,CAACsE,CAAF,CAAI2C,MAAJ,CAAWiF,EAAX,CAA3B,EAA2CtN,IAA3C,CAAgD,CAAhD,MAAuD,CAA3D,EACE,OAAO,KAAP,CAXiC,CAarC;;AACE,MAAIqQ,EAAE,GAAG/C,EAAE,CAACjF,MAAH,CAAU,KAAKlJ,CAAf,CAAT;AACA,MAAImR,GAAG,GAAGjD,GAAG,CAAChF,MAAJ,CAAWjH,CAAC,CAACjC,CAAb,CAAV;AACA,SAAO,KAAKsF,CAAL,CAAO4D,MAAP,CAAciI,GAAd,EAAmBhF,OAAnB,CAA2BlK,CAAC,CAACqD,CAAF,CAAI4D,MAAJ,CAAWgI,EAAX,CAA3B,EAA2CrQ,IAA3C,CAAgD,CAAhD,MAAuD,CAA9D;AACD,CAjBD;;AAmBAgN,MAAM,CAACtM,SAAP,CAAiB6P,MAAjB,GAA0B,SAASA,MAAT,CAAgB7K,CAAhB,EAAmB;AAC3C,MAAI8K,EAAE,GAAG,KAAKrR,CAAL,CAAO8L,MAAP,EAAT;AACA,MAAIwF,EAAE,GAAG/K,CAAC,CAACjE,KAAF,CAAQ,KAAKyD,KAAL,CAAW7D,GAAnB,EAAwBgH,MAAxB,CAA+BmI,EAA/B,CAAT;AACA,MAAI,KAAK9K,CAAL,CAAOhB,GAAP,CAAW+L,EAAX,MAAmB,CAAvB,EACE,OAAO,IAAP;AAEF,MAAIC,EAAE,GAAGhL,CAAC,CAACxG,KAAF,EAAT;AACA,MAAI8P,CAAC,GAAG,KAAK9J,KAAL,CAAW3C,IAAX,CAAgB8F,MAAhB,CAAuBmI,EAAvB,CAAR;;AACA,WAAS;AACPE,MAAE,CAACC,IAAH,CAAQ,KAAKzL,KAAL,CAAWtD,CAAnB;AACA,QAAI8O,EAAE,CAAChM,GAAH,CAAO,KAAKQ,KAAL,CAAW9D,CAAlB,KAAwB,CAA5B,EACE,OAAO,KAAP;AAEFqP,MAAE,CAACvF,OAAH,CAAW8D,CAAX;AACA,QAAI,KAAKtJ,CAAL,CAAOhB,GAAP,CAAW+L,EAAX,MAAmB,CAAvB,EACE,OAAO,IAAP;AACH;AACF,CAjBD;;AAmBAzD,MAAM,CAACtM,SAAP,CAAiB4L,OAAjB,GAA2B,SAASA,OAAT,GAAmB;AAC5C,MAAI,KAAKC,UAAL,EAAJ,EACE,OAAO,sBAAP;AACF,SAAO,mBAAmB,KAAK7G,CAAL,CAAOxH,QAAP,CAAgB,EAAhB,EAAoB,CAApB,CAAnB,GACH,MADG,GACM,KAAKuG,CAAL,CAAOvG,QAAP,CAAgB,EAAhB,EAAoB,CAApB,CADN,GAEH,MAFG,GAEM,KAAKiB,CAAL,CAAOjB,QAAP,CAAgB,EAAhB,EAAoB,CAApB,CAFN,GAE+B,GAFtC;AAGD,CAND;;AAQA8O,MAAM,CAACtM,SAAP,CAAiB6L,UAAjB,GAA8B,SAASA,UAAT,GAAsB;AACpD;AACE,SAAO,KAAKpN,CAAL,CAAOa,IAAP,CAAY,CAAZ,MAAmB,CAA1B;AACD,CAHD;;;ACt6BA;;AAEA,MAAIkF,KAAK,GAAGnI,OAAZ;AAEAmI,OAAK,CAAC0L,IAAN,GAAaC,IAAb;AACA3L,OAAK,CAAC4L,KAAN,GAAcC,OAAd;AACA7L,OAAK,CAAC3D,IAAN;AAAU;AAAA,MAAV;AACA2D,OAAK,CAAC8L,OAAN;AAAa;AAAA,MAAb;;;ACPA;;AAEA,MAAIC,MAAM,GAAGlU,OAAb;AAMA,MAAIT,MAAM,GAAGQ,SAAK,CAACR,MAAnB;;AAEA,WAAS4U,WAAT,CAAqBC,OAArB,EAA8B;AAC5B,QAAIA,OAAO,CAACjQ,IAAR,KAAiB,OAArB,EACE,KAAKgE,KAAL,GAAa,IAAIA,OAAK,CAAC4L,KAAV,CAAgBK,OAAhB,CAAb,CADF,KAEK,IAAIA,OAAO,CAACjQ,IAAR,KAAiB,SAArB,EACH,KAAKgE,KAAL,GAAa,IAAIA,OAAK,CAAC8L,OAAV,CAAkBG,OAAlB,CAAb,CADG,KAGH,KAAKjM,KAAL,GAAa,IAAIA,OAAK,CAAC3D,IAAV,CAAe4P,OAAf,CAAb;AACF,SAAKtP,CAAL,GAAS,KAAKqD,KAAL,CAAWrD,CAApB;AACA,SAAKD,CAAL,GAAS,KAAKsD,KAAL,CAAWtD,CAApB;AACA,SAAKwP,IAAL,GAAYD,OAAO,CAACC,IAApB;AAEA9U,UAAM,CAAC,KAAKuF,CAAL,CAAOa,QAAP,EAAD,EAAoB,eAApB,CAAN;AACApG,UAAM,CAAC,KAAKuF,CAAL,CAAOuG,GAAP,CAAW,KAAKxG,CAAhB,EAAmB2K,UAAnB,EAAD,EAAkC,yBAAlC,CAAN;AACD;;AACD0E,QAAM,CAACC,WAAP,GAAqBA,WAArB;;AAEA,WAASG,WAAT,CAAqB9Q,IAArB,EAA2B4Q,OAA3B,EAAoC;AAClC7K,UAAM,CAACgL,cAAP,CAAsBL,MAAtB,EAA8B1Q,IAA9B,EAAoC;AAClC0G,kBAAY,EAAE,IADoB;AAElCF,gBAAU,EAAE,IAFsB;AAGlCwK,SAAG,EAAE,YAAW;AACd,YAAIrM,KAAK,GAAG,IAAIgM,WAAJ,CAAgBC,OAAhB,CAAZ;AACA7K,cAAM,CAACgL,cAAP,CAAsBL,MAAtB,EAA8B1Q,IAA9B,EAAoC;AAClC0G,sBAAY,EAAE,IADoB;AAElCF,oBAAU,EAAE,IAFsB;AAGlCD,eAAK,EAAE5B;AAH2B,SAApC;AAKA,eAAOA,KAAP;AACD;AAXiC,KAApC;AAaD;;AAEDmM,aAAW,CAAC,MAAD,EAAS;AAClBnQ,QAAI,EAAE,OADY;AAElBI,SAAK,EAAE,MAFW;AAGlBF,KAAC,EAAE,uDAHe;AAIlBgC,KAAC,EAAE,uDAJe;AAKlBE,KAAC,EAAE,uDALe;AAMlB1B,KAAC,EAAE,uDANe;AAOlBwP,QAAI,EAAEA,IAAI,CAACI,MAPO;AAQlBzP,QAAI,EAAE,KARY;AASlBF,KAAC,EAAE,CACD,uDADC,EAED,uDAFC;AATe,GAAT,CAAX;AAeAwP,aAAW,CAAC,MAAD,EAAS;AAClBnQ,QAAI,EAAE,OADY;AAElBI,SAAK,EAAE,MAFW;AAGlBF,KAAC,EAAE,gEAHe;AAIlBgC,KAAC,EAAE,gEAJe;AAKlBE,KAAC,EAAE,gEALe;AAMlB1B,KAAC,EAAE,gEANe;AAOlBwP,QAAI,EAAEA,IAAI,CAACI,MAPO;AAQlBzP,QAAI,EAAE,KARY;AASlBF,KAAC,EAAE,CACD,gEADC,EAED,gEAFC;AATe,GAAT,CAAX;AAeAwP,aAAW,CAAC,MAAD,EAAS;AAClBnQ,QAAI,EAAE,OADY;AAElBI,SAAK,EAAE,IAFW;AAGlBF,KAAC,EAAE,yEAHe;AAIlBgC,KAAC,EAAE,yEAJe;AAKlBE,KAAC,EAAE,yEALe;AAMlB1B,KAAC,EAAE,yEANe;AAOlBwP,QAAI,EAAEA,IAAI,CAACI,MAPO;AAQlBzP,QAAI,EAAE,KARY;AASlBF,KAAC,EAAE,CACD,yEADC,EAED,yEAFC;AATe,GAAT,CAAX;AAeAwP,aAAW,CAAC,MAAD,EAAS;AAClBnQ,QAAI,EAAE,OADY;AAElBI,SAAK,EAAE,IAFW;AAGlBF,KAAC,EAAE,oEACA,8CAJe;AAKlBgC,KAAC,EAAE,oEACA,8CANe;AAOlBE,KAAC,EAAE,oEACA,8CARe;AASlB1B,KAAC,EAAE,oEACA,8CAVe;AAWlBwP,QAAI,EAAEA,IAAI,CAACK,MAXO;AAYlB1P,QAAI,EAAE,KAZY;AAalBF,KAAC,EAAE,CACD,6EACA,qCAFC,EAGD,6EACA,qCAJC;AAbe,GAAT,CAAX;AAqBAwP,aAAW,CAAC,MAAD,EAAS;AAClBnQ,QAAI,EAAE,OADY;AAElBI,SAAK,EAAE,IAFW;AAGlBF,KAAC,EAAE,2DACA,wDADA,GAEA,8CALe;AAMlBgC,KAAC,EAAE,2DACA,wDADA,GAEA,8CARe;AASlBE,KAAC,EAAE,2DACA,wDADA,GAEA,8CAXe;AAYlB1B,KAAC,EAAE,2DACA,wDADA,GAEA,8CAde;AAelBwP,QAAI,EAAEA,IAAI,CAACM,MAfO;AAgBlB3P,QAAI,EAAE,KAhBY;AAiBlBF,KAAC,EAAE,CACD,2DACA,wDADA,GAEA,8CAHC,EAID,2DACA,wDADA,GAEA,8CANC;AAjBe,GAAT,CAAX;AA2BAwP,aAAW,CAAC,YAAD,EAAe;AACxBnQ,QAAI,EAAE,MADkB;AAExBI,SAAK,EAAE,QAFiB;AAGxBF,KAAC,EAAE,qEAHqB;AAIxBgC,KAAC,EAAE,OAJqB;AAKxBE,KAAC,EAAE,GALqB;AAMxB1B,KAAC,EAAE,qEANqB;AAOxBwP,QAAI,EAAEA,IAAI,CAACI,MAPa;AAQxBzP,QAAI,EAAE,KARkB;AASxBF,KAAC,EAAE,CACD,GADC;AATqB,GAAf,CAAX;AAcAwP,aAAW,CAAC,SAAD,EAAY;AACrBnQ,QAAI,EAAE,SADe;AAErBI,SAAK,EAAE,QAFc;AAGrBF,KAAC,EAAE,qEAHkB;AAIrBgC,KAAC,EAAE,IAJkB;AAKrBzF,KAAC,EAAE,GALkB;AAMvB;AACEuR,KAAC,EAAE,qEAPkB;AAQrBtN,KAAC,EAAE,qEARkB;AASrBwP,QAAI,EAAEA,IAAI,CAACI,MATU;AAUrBzP,QAAI,EAAE,KAVe;AAWrBF,KAAC,EAAE,CACD,kEADC,EAGL;AACI,sEAJC;AAXkB,GAAZ,CAAX;AAmBA,MAAImK,GAAJ;;AACA,MAAI;AACFA,OAAG;AAAA;AAAA,gBAAH;AACD,GAFD,CAEE,OAAOmD,CAAP,EAAU;AACVnD,OAAG,GAAGrL,SAAN;AACD;;AAED0Q,aAAW,CAAC,WAAD,EAAc;AACvBnQ,QAAI,EAAE,OADiB;AAEvBI,SAAK,EAAE,MAFgB;AAGvBF,KAAC,EAAE,yEAHoB;AAIvBgC,KAAC,EAAE,GAJoB;AAKvBE,KAAC,EAAE,GALoB;AAMvB1B,KAAC,EAAE,yEANoB;AAOvB6L,KAAC,EAAE,GAPoB;AAQvB2D,QAAI,EAAEA,IAAI,CAACI,MARY;AAUzB;AACEvL,QAAI,EAAE,kEAXiB;AAYvB+B,UAAM,EAAE,kEAZe;AAavBM,SAAK,EAAE,CACL;AACElF,OAAC,EAAE,kCADL;AAEEE,OAAC,EAAE;AAFL,KADK,EAKL;AACEF,OAAC,EAAE,mCADL;AAEEE,OAAC,EAAE;AAFL,KALK,CAbgB;AAwBvBvB,QAAI,EAAE,KAxBiB;AAyBvBF,KAAC,EAAE,CACD,kEADC,EAED,kEAFC,EAGDmK,GAHC;AAzBoB,GAAd,CAAX;;AC/KA;;AAMA,SAAS2F,QAAT,CAAkBR,OAAlB,EAA2B;AACzB,MAAI,EAAE,gBAAgBQ,QAAlB,CAAJ,EACE,OAAO,IAAIA,QAAJ,CAAaR,OAAb,CAAP;AACF,OAAKC,IAAL,GAAYD,OAAO,CAACC,IAApB;AACA,OAAKQ,UAAL,GAAkB,CAAC,CAACT,OAAO,CAACS,UAA5B;AAEA,OAAKC,MAAL,GAAc,KAAKT,IAAL,CAAUU,OAAxB;AACA,OAAKC,UAAL,GAAkBZ,OAAO,CAACY,UAAR,IAAsB,KAAKX,IAAL,CAAUY,YAAlD;AAEA,OAAKC,OAAL,GAAe,IAAf;AACA,OAAKC,cAAL,GAAsB,IAAtB;AACA,OAAKC,CAAL,GAAS,IAAT;AACA,OAAKC,CAAL,GAAS,IAAT;AAEA,MAAIC,OAAO,GAAGvV,OAAK,CAACE,OAANF,CAAcqU,OAAO,CAACkB,OAAtBvV,EAA+BqU,OAAO,CAACmB,UAAR,IAAsB,KAArDxV,CAAd;AACA,MAAIyV,KAAK,GAAGzV,OAAK,CAACE,OAANF,CAAcqU,OAAO,CAACoB,KAAtBzV,EAA6BqU,OAAO,CAACqB,QAAR,IAAoB,KAAjD1V,CAAZ;AACA,MAAI2V,IAAI,GAAG3V,OAAK,CAACE,OAANF,CAAcqU,OAAO,CAACsB,IAAtB3V,EAA4BqU,OAAO,CAACuB,OAAR,IAAmB,KAA/C5V,CAAX;AACAR,oBAAM,CAAC+V,OAAO,CAAC9U,MAAR,IAAmB,KAAKwU,UAAL,GAAkB,CAAtC,EACC,qCAAqC,KAAKA,UAA1C,GAAuD,OADxD,CAANzV;;AAEA,OAAKqW,KAAL,CAAWN,OAAX,EAAoBE,KAApB,EAA2BE,IAA3B;AACD;;AACD,YAAc,GAAGd,QAAjB;;AAEAA,QAAQ,CAACjR,SAAT,CAAmBiS,KAAnB,GAA2B,SAASC,IAAT,CAAcP,OAAd,EAAuBE,KAAvB,EAA8BE,IAA9B,EAAoC;AAC7D,MAAII,IAAI,GAAGR,OAAO,CAACvM,MAAR,CAAeyM,KAAf,EAAsBzM,MAAtB,CAA6B2M,IAA7B,CAAX;AAEA,OAAKN,CAAL,GAAS,IAAIjV,KAAJ,CAAU,KAAK2U,MAAL,GAAc,CAAxB,CAAT;AACA,OAAKO,CAAL,GAAS,IAAIlV,KAAJ,CAAU,KAAK2U,MAAL,GAAc,CAAxB,CAAT;;AACA,OAAK,IAAIvU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK8U,CAAL,CAAO7U,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,SAAK6U,CAAL,CAAO7U,CAAP,IAAY,IAAZ;AACA,SAAK8U,CAAL,CAAO9U,CAAP,IAAY,IAAZ;AACD;;AAED,OAAKwV,OAAL,CAAaD,IAAb;;AACA,OAAKZ,OAAL,GAAe,CAAf;AACA,OAAKC,cAAL,GAAsB,eAAtB,CAZ6D,CAYvB;AACvC,CAbD;;AAeAP,QAAQ,CAACjR,SAAT,CAAmBqS,KAAnB,GAA2B,SAASC,IAAT,GAAgB;AACzC,SAAO,IAAI5B,IAAI,CAAC4B,IAAT,CAAc,KAAK5B,IAAnB,EAAyB,KAAKe,CAA9B,CAAP;AACD,CAFD;;AAIAR,QAAQ,CAACjR,SAAT,CAAmBoS,OAAnB,GAA6B,SAASG,MAAT,CAAgBJ,IAAhB,EAAsB;AACjD,MAAIK,IAAI,GAAG,KAAKH,KAAL,GACKE,MADL,CACY,KAAKb,CADjB,EAEKa,MAFL,CAEY,CAAE,IAAF,CAFZ,CAAX;;AAGA,MAAIJ,IAAJ,EACEK,IAAI,GAAGA,IAAI,CAACD,MAAL,CAAYJ,IAAZ,CAAP;AACF,OAAKV,CAAL,GAASe,IAAI,CAACC,MAAL,EAAT;AACA,OAAKf,CAAL,GAAS,KAAKW,KAAL,GAAaE,MAAb,CAAoB,KAAKb,CAAzB,EAA4Be,MAA5B,EAAT;AACA,MAAI,CAACN,IAAL,EACE;AAEF,OAAKV,CAAL,GAAS,KAAKY,KAAL,GACKE,MADL,CACY,KAAKb,CADjB,EAEKa,MAFL,CAEY,CAAE,IAAF,CAFZ,EAGKA,MAHL,CAGYJ,IAHZ,EAIKM,MAJL,EAAT;AAKA,OAAKf,CAAL,GAAS,KAAKW,KAAL,GAAaE,MAAb,CAAoB,KAAKb,CAAzB,EAA4Be,MAA5B,EAAT;AACD,CAjBD;;AAmBAxB,QAAQ,CAACjR,SAAT,CAAmB0S,MAAnB,GAA4B,SAASA,MAAT,CAAgBf,OAAhB,EAAyBC,UAAzB,EAAqC5O,GAArC,EAA0C2P,MAA1C,EAAkD;AAC9E;AACE,MAAI,OAAOf,UAAP,KAAsB,QAA1B,EAAoC;AAClCe,UAAM,GAAG3P,GAAT;AACAA,OAAG,GAAG4O,UAAN;AACAA,cAAU,GAAG,IAAb;AACD;;AAEDD,SAAO,GAAGvV,OAAK,CAACE,OAANF,CAAcuV,OAAdvV,EAAuBwV,UAAvBxV,CAAV;AACA4G,KAAG,GAAG5G,OAAK,CAACE,OAANF,CAAc4G,GAAd5G,EAAmBuW,MAAnBvW,CAAN;AAEAR,oBAAM,CAAC+V,OAAO,CAAC9U,MAAR,IAAmB,KAAKwU,UAAL,GAAkB,CAAtC,EACC,qCAAqC,KAAKA,UAA1C,GAAuD,OADxD,CAANzV;;AAGA,OAAKwW,OAAL,CAAaT,OAAO,CAACvM,MAAR,CAAepC,GAAG,IAAI,EAAtB,CAAb;;AACA,OAAKuO,OAAL,GAAe,CAAf;AACD,CAhBD;;AAkBAN,QAAQ,CAACjR,SAAT,CAAmB4S,QAAnB,GAA8B,SAASA,QAAT,CAAkBjP,GAAlB,EAAuBpH,GAAvB,EAA4ByG,GAA5B,EAAiC2P,MAAjC,EAAyC;AACrE,MAAI,KAAKpB,OAAL,GAAe,KAAKC,cAAxB,EACE,MAAM,IAAIzV,KAAJ,CAAU,oBAAV,CAAN,CAFmE,CAIvE;;AACE,MAAI,OAAOQ,GAAP,KAAe,QAAnB,EAA6B;AAC3BoW,UAAM,GAAG3P,GAAT;AACAA,OAAG,GAAGzG,GAAN;AACAA,OAAG,GAAG,IAAN;AACD,GAToE,CAWvE;;;AACE,MAAIyG,GAAJ,EAAS;AACPA,OAAG,GAAG5G,OAAK,CAACE,OAANF,CAAc4G,GAAd5G,EAAmBuW,MAAM,IAAI,KAA7BvW,CAAN;;AACA,SAAKgW,OAAL,CAAapP,GAAb;AACD;;AAED,MAAI6P,IAAI,GAAG,EAAX;;AACA,SAAOA,IAAI,CAAChW,MAAL,GAAc8G,GAArB,EAA0B;AACxB,SAAK+N,CAAL,GAAS,KAAKW,KAAL,GAAaE,MAAb,CAAoB,KAAKb,CAAzB,EAA4Be,MAA5B,EAAT;AACAI,QAAI,GAAGA,IAAI,CAACzN,MAAL,CAAY,KAAKsM,CAAjB,CAAP;AACD;;AAED,MAAI/U,GAAG,GAAGkW,IAAI,CAACnW,KAAL,CAAW,CAAX,EAAciH,GAAd,CAAV;;AACA,OAAKyO,OAAL,CAAapP,GAAb;;AACA,OAAKuO,OAAL;AACA,SAAOnV,OAAK,CAACqB,MAANrB,CAAaO,GAAbP,EAAkBG,GAAlBH,CAAP;AACD,CA3BD;;ACrFA;;AAIA,IAAIR,QAAM,GAAGQ,SAAK,CAACR,MAAnB;;AAEA,SAASkX,OAAT,CAAiBC,EAAjB,EAAqBtC,OAArB,EAA8B;AAC5B,OAAKsC,EAAL,GAAUA,EAAV;AACA,OAAKC,IAAL,GAAY,IAAZ;AACA,OAAKC,GAAL,GAAW,IAAX,CAH4B,CAK9B;;AACE,MAAIxC,OAAO,CAACuC,IAAZ,EACE,KAAKE,cAAL,CAAoBzC,OAAO,CAACuC,IAA5B,EAAkCvC,OAAO,CAAC0C,OAA1C;AACF,MAAI1C,OAAO,CAACwC,GAAZ,EACE,KAAKG,aAAL,CAAmB3C,OAAO,CAACwC,GAA3B,EAAgCxC,OAAO,CAAC4C,MAAxC;AACH;;AACD,OAAc,GAAGP,OAAjB;;AAEAA,OAAO,CAACQ,UAAR,GAAqB,SAASA,UAAT,CAAoBP,EAApB,EAAwBE,GAAxB,EAA6B1W,GAA7B,EAAkC;AACrD,MAAI0W,GAAG,YAAYH,OAAnB,EACE,OAAOG,GAAP;AAEF,SAAO,IAAIH,OAAJ,CAAYC,EAAZ,EAAgB;AACrBE,OAAG,EAAEA,GADgB;AAErBI,UAAM,EAAE9W;AAFa,GAAhB,CAAP;AAID,CARD;;AAUAuW,OAAO,CAACS,WAAR,GAAsB,SAASA,WAAT,CAAqBR,EAArB,EAAyBC,IAAzB,EAA+BzW,GAA/B,EAAoC;AACxD,MAAIyW,IAAI,YAAYF,OAApB,EACE,OAAOE,IAAP;AAEF,SAAO,IAAIF,OAAJ,CAAYC,EAAZ,EAAgB;AACrBC,QAAI,EAAEA,IADe;AAErBG,WAAO,EAAE5W;AAFY,GAAhB,CAAP;AAID,CARD;;AAUAuW,OAAO,CAAC9S,SAAR,CAAkBgC,QAAlB,GAA6B,SAASA,QAAT,GAAoB;AAC/C,MAAIiR,GAAG,GAAG,KAAKO,SAAL,EAAV;AAEA,MAAIP,GAAG,CAACpH,UAAJ,EAAJ,EACE,OAAO;AAAE4H,UAAM,EAAE,KAAV;AAAiBC,UAAM,EAAE;AAAzB,GAAP;AACF,MAAI,CAACT,GAAG,CAACjR,QAAJ,EAAL,EACE,OAAO;AAAEyR,UAAM,EAAE,KAAV;AAAiBC,UAAM,EAAE;AAAzB,GAAP;AACF,MAAI,CAACT,GAAG,CAACvL,GAAJ,CAAQ,KAAKqL,EAAL,CAAQvO,KAAR,CAActD,CAAtB,EAAyB2K,UAAzB,EAAL,EACE,OAAO;AAAE4H,UAAM,EAAE,KAAV;AAAiBC,UAAM,EAAE;AAAzB,GAAP;AAEF,SAAO;AAAED,UAAM,EAAE,IAAV;AAAgBC,UAAM,EAAE;AAAxB,GAAP;AACD,CAXD;;AAaAZ,OAAO,CAAC9S,SAAR,CAAkBwT,SAAlB,GAA8B,SAASA,SAAT,CAAmBzO,OAAnB,EAA4BxI,GAA5B,EAAiC;AAC/D;AACE,MAAI,OAAOwI,OAAP,KAAmB,QAAvB,EAAiC;AAC/BxI,OAAG,GAAGwI,OAAN;AACAA,WAAO,GAAG,IAAV;AACD;;AAED,MAAI,CAAC,KAAKkO,GAAV,EACE,KAAKA,GAAL,GAAW,KAAKF,EAAL,CAAQ5R,CAAR,CAAUuG,GAAV,CAAc,KAAKsL,IAAnB,CAAX;AAEF,MAAI,CAACzW,GAAL,EACE,OAAO,KAAK0W,GAAZ;AAEF,SAAO,KAAKA,GAAL,CAASxV,MAAT,CAAgBlB,GAAhB,EAAqBwI,OAArB,CAAP;AACD,CAdD;;AAgBA+N,OAAO,CAAC9S,SAAR,CAAkB2T,UAAlB,GAA+B,SAASA,UAAT,CAAoBpX,GAApB,EAAyB;AACtD,MAAIA,GAAG,KAAK,KAAZ,EACE,OAAO,KAAKyW,IAAL,CAAUxV,QAAV,CAAmB,EAAnB,EAAuB,CAAvB,CAAP,CADF,KAGE,OAAO,KAAKwV,IAAZ;AACH,CALD;;AAOAF,OAAO,CAAC9S,SAAR,CAAkBkT,cAAlB,GAAmC,SAASA,cAAT,CAAwBnT,GAAxB,EAA6BxD,GAA7B,EAAkC;AACnE,OAAKyW,IAAL,GAAY,IAAI1S,EAAJ,CAAOP,GAAP,EAAYxD,GAAG,IAAI,EAAnB,CAAZ,CADmE,CAGrE;AACA;;AACE,OAAKyW,IAAL,GAAY,KAAKA,IAAL,CAAUY,IAAV,CAAe,KAAKb,EAAL,CAAQvO,KAAR,CAActD,CAA7B,CAAZ;AACD,CAND;;AAQA4R,OAAO,CAAC9S,SAAR,CAAkBoT,aAAlB,GAAkC,SAASA,aAAT,CAAuBrT,GAAvB,EAA4BxD,GAA5B,EAAiC;AACjE,MAAIwD,GAAG,CAACiF,CAAJ,IAASjF,GAAG,CAACgE,CAAjB,EAAoB;AACtB;AACA;AACA;AACI,QAAI,KAAKgP,EAAL,CAAQvO,KAAR,CAAchE,IAAd,KAAuB,MAA3B,EAAmC;AACjC5E,cAAM,CAACmE,GAAG,CAACiF,CAAL,EAAQ,mBAAR,CAANpJ;AACD,KAFD,MAEO,IAAI,KAAKmX,EAAL,CAAQvO,KAAR,CAAchE,IAAd,KAAuB,OAAvB,IACA,KAAKuS,EAAL,CAAQvO,KAAR,CAAchE,IAAd,KAAuB,SAD3B,EACsC;AAC3C5E,cAAM,CAACmE,GAAG,CAACiF,CAAJ,IAASjF,GAAG,CAACgE,CAAd,EAAiB,8BAAjB,CAANnI;AACD;;AACD,SAAKqX,GAAL,GAAW,KAAKF,EAAL,CAAQvO,KAAR,CAAczC,KAAd,CAAoBhC,GAAG,CAACiF,CAAxB,EAA2BjF,GAAG,CAACgE,CAA/B,CAAX;AACA;AACD;;AACD,OAAKkP,GAAL,GAAW,KAAKF,EAAL,CAAQvO,KAAR,CAAcE,WAAd,CAA0B3E,GAA1B,EAA+BxD,GAA/B,CAAX;AACD,CAfD,C,CAiBA;;;AACAuW,OAAO,CAAC9S,SAAR,CAAkB6T,MAAlB,GAA2B,SAASA,MAAT,CAAgBZ,GAAhB,EAAqB;AAC9C,MAAG,CAACA,GAAG,CAACjR,QAAJ,EAAJ,EAAoB;AAClBpG,YAAM,CAACqX,GAAG,CAACjR,QAAJ,EAAD,EAAiB,4BAAjB,CAANpG;AACD;;AACD,SAAOqX,GAAG,CAACvL,GAAJ,CAAQ,KAAKsL,IAAb,EAAmB/N,IAAnB,EAAP;AACD,CALD,C,CAOA;;;AACA6N,OAAO,CAAC9S,SAAR,CAAkB8T,IAAlB,GAAyB,SAASA,IAAT,CAAchY,GAAd,EAAmBS,GAAnB,EAAwBkU,OAAxB,EAAiC;AACxD,SAAO,KAAKsC,EAAL,CAAQe,IAAR,CAAahY,GAAb,EAAkB,IAAlB,EAAwBS,GAAxB,EAA6BkU,OAA7B,CAAP;AACD,CAFD;;AAIAqC,OAAO,CAAC9S,SAAR,CAAkB+T,MAAlB,GAA2B,SAASA,MAAT,CAAgBjY,GAAhB,EAAqBkY,SAArB,EAAgC;AACzD,SAAO,KAAKjB,EAAL,CAAQgB,MAAR,CAAejY,GAAf,EAAoBkY,SAApB,EAA+B,IAA/B,CAAP;AACD,CAFD;;AAIAlB,OAAO,CAAC9S,SAAR,CAAkB4L,OAAlB,GAA4B,SAASA,OAAT,GAAmB;AAC7C,SAAO,iBAAiB,KAAKoH,IAAL,IAAa,KAAKA,IAAL,CAAUxV,QAAV,CAAmB,EAAnB,EAAuB,CAAvB,CAA9B,IACA,QADA,IACY,KAAKyV,GAAL,IAAY,KAAKA,GAAL,CAASrH,OAAT,EADxB,IAC8C,IADrD;AAED,CAHD;;ACrHA;;AAKA,IAAIhQ,QAAM,GAAGQ,SAAK,CAACR,MAAnB;;AAEA,SAASqY,SAAT,CAAmBxD,OAAnB,EAA4BlU,GAA5B,EAAiC;AAC/B,MAAIkU,OAAO,YAAYwD,SAAvB,EACE,OAAOxD,OAAP;AAEF,MAAI,KAAKyD,UAAL,CAAgBzD,OAAhB,EAAyBlU,GAAzB,CAAJ,EACE;AAEFX,UAAM,CAAC6U,OAAO,CAACtU,CAAR,IAAasU,OAAO,CAACxI,CAAtB,EAAyB,0BAAzB,CAANrM;AACA,OAAKO,CAAL,GAAS,IAAImE,EAAJ,CAAOmQ,OAAO,CAACtU,CAAf,EAAkB,EAAlB,CAAT;AACA,OAAK8L,CAAL,GAAS,IAAI3H,EAAJ,CAAOmQ,OAAO,CAACxI,CAAf,EAAkB,EAAlB,CAAT;AACA,MAAIwI,OAAO,CAAC0D,aAAR,KAA0BlU,SAA9B,EACE,KAAKkU,aAAL,GAAqB,IAArB,CADF,KAGE,KAAKA,aAAL,GAAqB1D,OAAO,CAAC0D,aAA7B;AACH;;AACD,aAAc,GAAGF,SAAjB;;AAEA,SAASG,QAAT,GAAoB;AAClB,OAAKC,KAAL,GAAa,CAAb;AACD;;AAED,SAASC,SAAT,CAAmBC,GAAnB,EAAwB7T,CAAxB,EAA2B;AACzB,MAAI8T,OAAO,GAAGD,GAAG,CAAC7T,CAAC,CAAC2T,KAAF,EAAD,CAAjB;;AACA,MAAI,EAAEG,OAAO,GAAG,IAAZ,CAAJ,EAAuB;AACrB,WAAOA,OAAP;AACD;;AACD,MAAIC,QAAQ,GAAGD,OAAO,GAAG,GAAzB,CALyB,CAO3B;;AACE,MAAIC,QAAQ,KAAK,CAAb,IAAkBA,QAAQ,GAAG,CAAjC,EAAoC;AAClC,WAAO,KAAP;AACD;;AAED,MAAI5Y,GAAG,GAAG,CAAV;;AACA,OAAK,IAAIe,CAAC,GAAG,CAAR,EAAW8X,GAAG,GAAGhU,CAAC,CAAC2T,KAAxB,EAA+BzX,CAAC,GAAG6X,QAAnC,EAA6C7X,CAAC,IAAI8X,GAAG,EAArD,EAAyD;AACvD7Y,OAAG,KAAK,CAAR;AACAA,OAAG,IAAI0Y,GAAG,CAACG,GAAD,CAAV;AACA7Y,OAAG,MAAM,CAAT;AACD,GAjBwB,CAmB3B;;;AACE,MAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,WAAO,KAAP;AACD;;AAED6E,GAAC,CAAC2T,KAAF,GAAUK,GAAV;AACA,SAAO7Y,GAAP;AACD;;AAED,SAAS8Y,SAAT,CAAmBJ,GAAnB,EAAwB;AACtB,MAAI3X,CAAC,GAAG,CAAR;AACA,MAAI+G,GAAG,GAAG4Q,GAAG,CAAC1X,MAAJ,GAAa,CAAvB;;AACA,SAAO,CAAC0X,GAAG,CAAC3X,CAAD,CAAJ,IAAW,EAAE2X,GAAG,CAAC3X,CAAC,GAAG,CAAL,CAAH,GAAa,IAAf,CAAX,IAAmCA,CAAC,GAAG+G,GAA9C,EAAmD;AACjD/G,KAAC;AACF;;AACD,MAAIA,CAAC,KAAK,CAAV,EAAa;AACX,WAAO2X,GAAP;AACD;;AACD,SAAOA,GAAG,CAAC7X,KAAJ,CAAUE,CAAV,CAAP;AACD;;AAEDqX,SAAS,CAACjU,SAAV,CAAoBkU,UAApB,GAAiC,SAASA,UAAT,CAAoBU,IAApB,EAA0BrY,GAA1B,EAA+B;AAC9DqY,MAAI,GAAGxY,SAAK,CAACE,OAANF,CAAcwY,IAAdxY,EAAoBG,GAApBH,CAAP;AACA,MAAIsE,CAAC,GAAG,IAAI0T,QAAJ,EAAR;;AACA,MAAIQ,IAAI,CAAClU,CAAC,CAAC2T,KAAF,EAAD,CAAJ,KAAoB,IAAxB,EAA8B;AAC5B,WAAO,KAAP;AACD;;AACD,MAAI1Q,GAAG,GAAG2Q,SAAS,CAACM,IAAD,EAAOlU,CAAP,CAAnB;;AACA,MAAIiD,GAAG,KAAK,KAAZ,EAAmB;AACjB,WAAO,KAAP;AACD;;AACD,MAAKA,GAAG,GAAGjD,CAAC,CAAC2T,KAAT,KAAoBO,IAAI,CAAC/X,MAA7B,EAAqC;AACnC,WAAO,KAAP;AACD;;AACD,MAAI+X,IAAI,CAAClU,CAAC,CAAC2T,KAAF,EAAD,CAAJ,KAAoB,IAAxB,EAA8B;AAC5B,WAAO,KAAP;AACD;;AACD,MAAIQ,IAAI,GAAGP,SAAS,CAACM,IAAD,EAAOlU,CAAP,CAApB;;AACA,MAAImU,IAAI,KAAK,KAAb,EAAoB;AAClB,WAAO,KAAP;AACD;;AACD,MAAI1Y,CAAC,GAAGyY,IAAI,CAAClY,KAAL,CAAWgE,CAAC,CAAC2T,KAAb,EAAoBQ,IAAI,GAAGnU,CAAC,CAAC2T,KAA7B,CAAR;AACA3T,GAAC,CAAC2T,KAAF,IAAWQ,IAAX;;AACA,MAAID,IAAI,CAAClU,CAAC,CAAC2T,KAAF,EAAD,CAAJ,KAAoB,IAAxB,EAA8B;AAC5B,WAAO,KAAP;AACD;;AACD,MAAIS,IAAI,GAAGR,SAAS,CAACM,IAAD,EAAOlU,CAAP,CAApB;;AACA,MAAIoU,IAAI,KAAK,KAAb,EAAoB;AAClB,WAAO,KAAP;AACD;;AACD,MAAIF,IAAI,CAAC/X,MAAL,KAAgBiY,IAAI,GAAGpU,CAAC,CAAC2T,KAA7B,EAAoC;AAClC,WAAO,KAAP;AACD;;AACD,MAAIpM,CAAC,GAAG2M,IAAI,CAAClY,KAAL,CAAWgE,CAAC,CAAC2T,KAAb,EAAoBS,IAAI,GAAGpU,CAAC,CAAC2T,KAA7B,CAAR;;AACA,MAAIlY,CAAC,CAAC,CAAD,CAAD,KAAS,CAAb,EAAgB;AACd,QAAIA,CAAC,CAAC,CAAD,CAAD,GAAO,IAAX,EAAiB;AACfA,OAAC,GAAGA,CAAC,CAACO,KAAF,CAAQ,CAAR,CAAJ;AACD,KAFD,MAEO;AACX;AACM,aAAO,KAAP;AACD;AACF;;AACD,MAAIuL,CAAC,CAAC,CAAD,CAAD,KAAS,CAAb,EAAgB;AACd,QAAIA,CAAC,CAAC,CAAD,CAAD,GAAO,IAAX,EAAiB;AACfA,OAAC,GAAGA,CAAC,CAACvL,KAAF,CAAQ,CAAR,CAAJ;AACD,KAFD,MAEO;AACX;AACM,aAAO,KAAP;AACD;AACF;;AAED,OAAKP,CAAL,GAAS,IAAImE,EAAJ,CAAOnE,CAAP,CAAT;AACA,OAAK8L,CAAL,GAAS,IAAI3H,EAAJ,CAAO2H,CAAP,CAAT;AACA,OAAKkM,aAAL,GAAqB,IAArB;AAEA,SAAO,IAAP;AACD,CAvDD;;AAyDA,SAASY,eAAT,CAAyBrX,GAAzB,EAA8BiG,GAA9B,EAAmC;AACjC,MAAIA,GAAG,GAAG,IAAV,EAAgB;AACdjG,OAAG,CAACX,IAAJ,CAAS4G,GAAT;AACA;AACD;;AACD,MAAIqR,MAAM,GAAG,KAAK9W,IAAI,CAAC+W,GAAL,CAAStR,GAAT,IAAgBzF,IAAI,CAACgX,GAArB,KAA6B,CAAlC,CAAb;AACAxX,KAAG,CAACX,IAAJ,CAASiY,MAAM,GAAG,IAAlB;;AACA,SAAO,EAAEA,MAAT,EAAiB;AACftX,OAAG,CAACX,IAAJ,CAAU4G,GAAG,MAAMqR,MAAM,IAAI,CAAhB,CAAJ,GAA0B,IAAnC;AACD;;AACDtX,KAAG,CAACX,IAAJ,CAAS4G,GAAT;AACD;;AAEDsQ,SAAS,CAACjU,SAAV,CAAoBmV,KAApB,GAA4B,SAASA,KAAT,CAAe5Y,GAAf,EAAoB;AAC9C,MAAIJ,CAAC,GAAG,KAAKA,CAAL,CAAOG,OAAP,EAAR;AACA,MAAI2L,CAAC,GAAG,KAAKA,CAAL,CAAO3L,OAAP,EAAR,CAF8C,CAIhD;;AACE,MAAIH,CAAC,CAAC,CAAD,CAAD,GAAO,IAAX,EACEA,CAAC,GAAG,CAAE,CAAF,EAAMiJ,MAAN,CAAajJ,CAAb,CAAJ,CAN4C,CAOhD;;AACE,MAAI8L,CAAC,CAAC,CAAD,CAAD,GAAO,IAAX,EACEA,CAAC,GAAG,CAAE,CAAF,EAAM7C,MAAN,CAAa6C,CAAb,CAAJ;AAEF9L,GAAC,GAAGwY,SAAS,CAACxY,CAAD,CAAb;AACA8L,GAAC,GAAG0M,SAAS,CAAC1M,CAAD,CAAb;;AAEA,SAAO,CAACA,CAAC,CAAC,CAAD,CAAF,IAAS,EAAEA,CAAC,CAAC,CAAD,CAAD,GAAO,IAAT,CAAhB,EAAgC;AAC9BA,KAAC,GAAGA,CAAC,CAACvL,KAAF,CAAQ,CAAR,CAAJ;AACD;;AACD,MAAIgB,GAAG,GAAG,CAAE,IAAF,CAAV;AACAqX,iBAAe,CAACrX,GAAD,EAAMvB,CAAC,CAACU,MAAR,CAAf;AACAa,KAAG,GAAGA,GAAG,CAAC0H,MAAJ,CAAWjJ,CAAX,CAAN;AACAuB,KAAG,CAACX,IAAJ,CAAS,IAAT;AACAgY,iBAAe,CAACrX,GAAD,EAAMuK,CAAC,CAACpL,MAAR,CAAf;AACA,MAAIuY,QAAQ,GAAG1X,GAAG,CAAC0H,MAAJ,CAAW6C,CAAX,CAAf;AACA,MAAItL,GAAG,GAAG,CAAE,IAAF,CAAV;AACAoY,iBAAe,CAACpY,GAAD,EAAMyY,QAAQ,CAACvY,MAAf,CAAf;AACAF,KAAG,GAAGA,GAAG,CAACyI,MAAJ,CAAWgQ,QAAX,CAAN;AACA,SAAOhZ,SAAK,CAACqB,MAANrB,CAAaO,GAAbP,EAAkBG,GAAlBH,CAAP;AACD,CA3BD;;AC1IA;;AAMA,IAAIiZ,IAAI;AAAA;AAAA;AAAA;AAAA,CAAR;;AACA,IAAIzZ,QAAM,GAAGQ,SAAK,CAACR,MAAnB;;AAKA,SAAS0Z,EAAT,CAAY7E,OAAZ,EAAqB;AACnB,MAAI,EAAE,gBAAgB6E,EAAlB,CAAJ,EACE,OAAO,IAAIA,EAAJ,CAAO7E,OAAP,CAAP,CAFiB,CAIrB;;AACE,MAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/B7U,YAAM,CAACgK,MAAM,CAAC5F,SAAP,CAAiBuV,cAAjB,CAAgCrV,IAAhC,CAAqCqQ,QAArC,EAA6CE,OAA7C,CAAD,EACJ,mBAAmBA,OADf,CAAN7U;AAGA6U,WAAO,GAAGF,QAAM,CAACE,OAAD,CAAhB;AACD,GAVkB,CAYrB;;;AACE,MAAIA,OAAO,YAAYF,QAAM,CAACC,WAA9B,EACEC,OAAO,GAAG;AAAEjM,SAAK,EAAEiM;AAAT,GAAV;AAEF,OAAKjM,KAAL,GAAaiM,OAAO,CAACjM,KAAR,CAAcA,KAA3B;AACA,OAAKtD,CAAL,GAAS,KAAKsD,KAAL,CAAWtD,CAApB;AACA,OAAKsU,EAAL,GAAU,KAAKtU,CAAL,CAAOsH,KAAP,CAAa,CAAb,CAAV;AACA,OAAKrH,CAAL,GAAS,KAAKqD,KAAL,CAAWrD,CAApB,CAnBmB,CAqBrB;;AACE,OAAKA,CAAL,GAASsP,OAAO,CAACjM,KAAR,CAAcrD,CAAvB;AACA,OAAKA,CAAL,CAAOkE,UAAP,CAAkBoL,OAAO,CAACjM,KAAR,CAActD,CAAd,CAAgB9C,SAAhB,KAA8B,CAAhD,EAvBmB,CAyBrB;;AACE,OAAKsS,IAAL,GAAYD,OAAO,CAACC,IAAR,IAAgBD,OAAO,CAACjM,KAAR,CAAckM,IAA1C;AACD;;AACD,MAAc,GAAG4E,EAAjB;;AAEAA,EAAE,CAACtV,SAAH,CAAayV,OAAb,GAAuB,SAASA,OAAT,CAAiBhF,OAAjB,EAA0B;AAC/C,SAAO,IAAIqC,GAAJ,CAAY,IAAZ,EAAkBrC,OAAlB,CAAP;AACD,CAFD;;AAIA6E,EAAE,CAACtV,SAAH,CAAa0V,cAAb,GAA8B,SAASA,cAAT,CAAwB1C,IAAxB,EAA8BzW,GAA9B,EAAmC;AAC/D,SAAOuW,GAAO,CAACS,WAART,CAAoB,IAApBA,EAA0BE,IAA1BF,EAAgCvW,GAAhCuW,CAAP;AACD,CAFD;;AAIAwC,EAAE,CAACtV,SAAH,CAAa2V,aAAb,GAA6B,SAASA,aAAT,CAAuB1C,GAAvB,EAA4B1W,GAA5B,EAAiC;AAC5D,SAAOuW,GAAO,CAACQ,UAARR,CAAmB,IAAnBA,EAAyBG,GAAzBH,EAA8BvW,GAA9BuW,CAAP;AACD,CAFD;;AAIAwC,EAAE,CAACtV,SAAH,CAAa4V,UAAb,GAA0B,SAASA,UAAT,CAAoBnF,OAApB,EAA6B;AACrD,MAAI,CAACA,OAAL,EACEA,OAAO,GAAG,EAAV,CAFmD,CAIvD;;AACE,MAAIoF,IAAI,GAAG,IAAI5E,QAAJ,CAAa;AACtBP,QAAI,EAAE,KAAKA,IADW;AAEtBqB,QAAI,EAAEtB,OAAO,CAACsB,IAFQ;AAGtBC,WAAO,EAAEvB,OAAO,CAACuB,OAAR,IAAmB,MAHN;AAItBL,WAAO,EAAElB,OAAO,CAACkB,OAAR,IAAmB0D,IAAI,CAAC,KAAK3E,IAAL,CAAUY,YAAX,CAJV;AAKtBM,cAAU,EAAEnB,OAAO,CAACkB,OAAR,IAAmBlB,OAAO,CAACmB,UAA3B,IAAyC,MAL/B;AAMtBC,SAAK,EAAE,KAAK3Q,CAAL,CAAO5E,OAAP;AANe,GAAb,CAAX;AASA,MAAI8D,KAAK,GAAG,KAAKc,CAAL,CAAOyD,UAAP,EAAZ;AACA,MAAImR,GAAG,GAAG,KAAK5U,CAAL,CAAO8F,GAAP,CAAW,IAAI1G,EAAJ,CAAO,CAAP,CAAX,CAAV;;AACA,WAAS;AACP,QAAI0S,IAAI,GAAG,IAAI1S,EAAJ,CAAOuV,IAAI,CAACjD,QAAL,CAAcxS,KAAd,CAAP,CAAX;AACA,QAAI4S,IAAI,CAAChP,GAAL,CAAS8R,GAAT,IAAgB,CAApB,EACE;AAEF9C,QAAI,CAAC+C,KAAL,CAAW,CAAX;AACA,WAAO,KAAKL,cAAL,CAAoB1C,IAApB,CAAP;AACD;AACF,CAxBD;;AA0BAsC,EAAE,CAACtV,SAAH,CAAagW,YAAb,GAA4B,SAASA,YAAT,CAAsBla,GAAtB,EAA2Bma,SAA3B,EAAsC;AAChE,MAAIrH,KAAK,GAAG9S,GAAG,CAAC6I,UAAJ,KAAmB,CAAnB,GAAuB,KAAKzD,CAAL,CAAO9C,SAAP,EAAnC;AACA,MAAIwQ,KAAK,GAAG,CAAZ,EACE9S,GAAG,GAAGA,GAAG,CAAC0M,KAAJ,CAAUoG,KAAV,CAAN;AACF,MAAI,CAACqH,SAAD,IAAcna,GAAG,CAACkI,GAAJ,CAAQ,KAAK9C,CAAb,KAAmB,CAArC,EACE,OAAOpF,GAAG,CAACkL,GAAJ,CAAQ,KAAK9F,CAAb,CAAP,CADF,KAGE,OAAOpF,GAAP;AACH,CARD;;AAUAwZ,EAAE,CAACtV,SAAH,CAAa8T,IAAb,GAAoB,SAASA,IAAT,CAAchY,GAAd,EAAmBiE,GAAnB,EAAwBxD,GAAxB,EAA6BkU,OAA7B,EAAsC;AACxD,MAAI,OAAOlU,GAAP,KAAe,QAAnB,EAA6B;AAC3BkU,WAAO,GAAGlU,GAAV;AACAA,OAAG,GAAG,IAAN;AACD;;AACD,MAAI,CAACkU,OAAL,EACEA,OAAO,GAAG,EAAV;AAEF1Q,KAAG,GAAG,KAAK2V,cAAL,CAAoB3V,GAApB,EAAyBxD,GAAzB,CAAN;AACAT,KAAG,GAAG,KAAKka,YAAL,CAAkB,IAAI1V,EAAJ,CAAOxE,GAAP,EAAY,EAAZ,CAAlB,CAAN,CATwD,CAW1D;;AACE,MAAIsE,KAAK,GAAG,KAAKc,CAAL,CAAOyD,UAAP,EAAZ;AACA,MAAIuR,IAAI,GAAGnW,GAAG,CAAC4T,UAAJ,GAAiBrX,OAAjB,CAAyB,IAAzB,EAA+B8D,KAA/B,CAAX,CAbwD,CAe1D;;AACE,MAAIyR,KAAK,GAAG/V,GAAG,CAACQ,OAAJ,CAAY,IAAZ,EAAkB8D,KAAlB,CAAZ,CAhBwD,CAkB1D;;AACE,MAAIyV,IAAI,GAAG,IAAI5E,QAAJ,CAAa;AACtBP,QAAI,EAAE,KAAKA,IADW;AAEtBiB,WAAO,EAAEuE,IAFa;AAGtBrE,SAAK,EAAEA,KAHe;AAItBE,QAAI,EAAEtB,OAAO,CAACsB,IAJQ;AAKtBC,WAAO,EAAEvB,OAAO,CAACuB,OAAR,IAAmB;AALN,GAAb,CAAX,CAnBwD,CA2B1D;;AACE,MAAImE,GAAG,GAAG,KAAKjV,CAAL,CAAO8F,GAAP,CAAW,IAAI1G,EAAJ,CAAO,CAAP,CAAX,CAAV;;AAEA,OAAK,IAAI8V,IAAI,GAAG,CAAhB,GAAqBA,IAAI,EAAzB,EAA6B;AAC3B,QAAI7X,CAAC,GAAGkS,OAAO,CAAClS,CAAR,GACNkS,OAAO,CAAClS,CAAR,CAAU6X,IAAV,CADM,GAEN,IAAI9V,EAAJ,CAAOuV,IAAI,CAACjD,QAAL,CAAc,KAAK1R,CAAL,CAAOyD,UAAP,EAAd,CAAP,CAFF;AAGApG,KAAC,GAAG,KAAKyX,YAAL,CAAkBzX,CAAlB,EAAqB,IAArB,CAAJ;AACA,QAAIA,CAAC,CAACe,IAAF,CAAO,CAAP,KAAa,CAAb,IAAkBf,CAAC,CAACyF,GAAF,CAAMmS,GAAN,KAAc,CAApC,EACE;AAEF,QAAIE,EAAE,GAAG,KAAKlV,CAAL,CAAOuG,GAAP,CAAWnJ,CAAX,CAAT;AACA,QAAI8X,EAAE,CAACxK,UAAH,EAAJ,EACE;AAEF,QAAIyK,GAAG,GAAGD,EAAE,CAACpR,IAAH,EAAV;AACA,QAAI9I,CAAC,GAAGma,GAAG,CAAC1C,IAAJ,CAAS,KAAK1S,CAAd,CAAR;AACA,QAAI/E,CAAC,CAACmD,IAAF,CAAO,CAAP,MAAc,CAAlB,EACE;AAEF,QAAI2I,CAAC,GAAG1J,CAAC,CAACgY,IAAF,CAAO,KAAKrV,CAAZ,EAAewG,GAAf,CAAmBvL,CAAC,CAACuL,GAAF,CAAM3H,GAAG,CAAC4T,UAAJ,EAAN,EAAwB1D,IAAxB,CAA6BnU,GAA7B,CAAnB,CAAR;AACAmM,KAAC,GAAGA,CAAC,CAAC2L,IAAF,CAAO,KAAK1S,CAAZ,CAAJ;AACA,QAAI+G,CAAC,CAAC3I,IAAF,CAAO,CAAP,MAAc,CAAlB,EACE;AAEF,QAAI6U,aAAa,GAAG,CAACkC,EAAE,CAACnR,IAAH,GAAUtG,KAAV,KAAoB,CAApB,GAAwB,CAAzB,KACC0X,GAAG,CAACtS,GAAJ,CAAQ7H,CAAR,MAAe,CAAf,GAAmB,CAAnB,GAAuB,CADxB,CAApB,CAtB2B,CAyB/B;;AACI,QAAIsU,OAAO,CAAC+F,SAAR,IAAqBvO,CAAC,CAACjE,GAAF,CAAM,KAAKwR,EAAX,IAAiB,CAA1C,EAA6C;AAC3CvN,OAAC,GAAG,KAAK/G,CAAL,CAAO8F,GAAP,CAAWiB,CAAX,CAAJ;AACAkM,mBAAa,IAAI,CAAjB;AACD;;AAED,WAAO,IAAIF,SAAJ,CAAc;AAAE9X,OAAC,EAAEA,CAAL;AAAQ8L,OAAC,EAAEA,CAAX;AAAckM,mBAAa,EAAEA;AAA7B,KAAd,CAAP;AACD;AACF,CA/DD;;AAiEAmB,EAAE,CAACtV,SAAH,CAAa+T,MAAb,GAAsB,SAASA,MAAT,CAAgBjY,GAAhB,EAAqBkY,WAArB,EAAgCjU,GAAhC,EAAqCxD,GAArC,EAA0C;AAC9DT,KAAG,GAAG,KAAKka,YAAL,CAAkB,IAAI1V,EAAJ,CAAOxE,GAAP,EAAY,EAAZ,CAAlB,CAAN;AACAiE,KAAG,GAAG,KAAK4V,aAAL,CAAmB5V,GAAnB,EAAwBxD,GAAxB,CAAN;AACAyX,aAAS,GAAG,IAAIC,SAAJ,CAAcD,WAAd,EAAyB,KAAzB,CAAZA,CAH8D,CAKhE;;AACE,MAAI7X,CAAC,GAAG6X,WAAS,CAAC7X,CAAlB;AACA,MAAI8L,CAAC,GAAG+L,WAAS,CAAC/L,CAAlB;AACA,MAAI9L,CAAC,CAACmD,IAAF,CAAO,CAAP,IAAY,CAAZ,IAAiBnD,CAAC,CAAC6H,GAAF,CAAM,KAAK9C,CAAX,KAAiB,CAAtC,EACE,OAAO,KAAP;AACF,MAAI+G,CAAC,CAAC3I,IAAF,CAAO,CAAP,IAAY,CAAZ,IAAiB2I,CAAC,CAACjE,GAAF,CAAM,KAAK9C,CAAX,KAAiB,CAAtC,EACE,OAAO,KAAP,CAX4D,CAahE;;AACE,MAAIuV,IAAI,GAAGxO,CAAC,CAACsO,IAAF,CAAO,KAAKrV,CAAZ,CAAX;AACA,MAAIzB,EAAE,GAAGgX,IAAI,CAAC/O,GAAL,CAAS5L,GAAT,EAAc8X,IAAd,CAAmB,KAAK1S,CAAxB,CAAT;AACA,MAAIxB,EAAE,GAAG+W,IAAI,CAAC/O,GAAL,CAASvL,CAAT,EAAYyX,IAAZ,CAAiB,KAAK1S,CAAtB,CAAT;AACA,MAAIR,CAAJ;;AAEA,MAAI,CAAC,KAAK8D,KAAL,CAAW1C,aAAhB,EAA+B;AAC7BpB,KAAC,GAAG,KAAKS,CAAL,CAAO+K,MAAP,CAAczM,EAAd,EAAkBM,GAAG,CAACyT,SAAJ,EAAlB,EAAmC9T,EAAnC,CAAJ;AACA,QAAIgB,CAAC,CAACmL,UAAF,EAAJ,EACE,OAAO,KAAP;AAEF,WAAOnL,CAAC,CAACuE,IAAF,GAAS2O,IAAT,CAAc,KAAK1S,CAAnB,EAAsB8C,GAAtB,CAA0B7H,CAA1B,MAAiC,CAAxC;AACD,GAzB6D,CA2BhE;AACA;;;AAEEuE,GAAC,GAAG,KAAKS,CAAL,CAAOgL,OAAP,CAAe1M,EAAf,EAAmBM,GAAG,CAACyT,SAAJ,EAAnB,EAAoC9T,EAApC,CAAJ;AACA,MAAIgB,CAAC,CAACmL,UAAF,EAAJ,EACE,OAAO,KAAP,CAhC4D,CAkChE;AACA;AACA;;AACE,SAAOnL,CAAC,CAACmP,MAAF,CAAS1T,CAAT,CAAP;AACD,CAtCD;;AAwCAmZ,EAAE,CAACtV,SAAH,CAAa0W,aAAb,GAA6B,UAAS5a,GAAT,EAAckY,WAAd,EAAyBxR,CAAzB,EAA4BjG,GAA5B,EAAiC;AAC5DX,UAAM,CAAC,CAAC,IAAI4G,CAAL,MAAYA,CAAb,EAAgB,0CAAhB,CAAN5G;AACAoY,aAAS,GAAG,IAAIC,SAAJ,CAAcD,WAAd,EAAyBzX,GAAzB,CAAZyX;AAEA,MAAI9S,CAAC,GAAG,KAAKA,CAAb;AACA,MAAIuN,CAAC,GAAG,IAAInO,EAAJ,CAAOxE,GAAP,CAAR;AACA,MAAIK,CAAC,GAAG6X,WAAS,CAAC7X,CAAlB;AACA,MAAI8L,CAAC,GAAG+L,WAAS,CAAC/L,CAAlB,CAP4D,CAS9D;;AACE,MAAI0O,MAAM,GAAGnU,CAAC,GAAG,CAAjB;AACA,MAAIoU,WAAW,GAAGpU,CAAC,IAAI,CAAvB;AACA,MAAIrG,CAAC,CAAC6H,GAAF,CAAM,KAAKQ,KAAL,CAAW9D,CAAX,CAAakT,IAAb,CAAkB,KAAKpP,KAAL,CAAWtD,CAA7B,CAAN,KAA0C,CAA1C,IAA+C0V,WAAnD,EACE,MAAM,IAAI7a,KAAJ,CAAU,sCAAV,CAAN,CAb0D,CAe9D;;AACE,MAAI6a,WAAJ,EACEza,CAAC,GAAG,KAAKqI,KAAL,CAAWI,UAAX,CAAsBzI,CAAC,CAAC6G,GAAF,CAAM,KAAKwB,KAAL,CAAWtD,CAAjB,CAAtB,EAA2CyV,MAA3C,CAAJ,CADF,KAGExa,CAAC,GAAG,KAAKqI,KAAL,CAAWI,UAAX,CAAsBzI,CAAtB,EAAyBwa,MAAzB,CAAJ;AAEF,MAAIE,IAAI,GAAG7C,WAAS,CAAC7X,CAAV6X,CAAYuC,IAAZvC,CAAiB9S,CAAjB8S,CAAX;AACA,MAAInH,EAAE,GAAG3L,CAAC,CAAC8F,GAAF,CAAMyH,CAAN,EAAS/G,GAAT,CAAamP,IAAb,EAAmBjD,IAAnB,CAAwB1S,CAAxB,CAAT;AACA,MAAI4L,EAAE,GAAG7E,CAAC,CAACP,GAAF,CAAMmP,IAAN,EAAYjD,IAAZ,CAAiB1S,CAAjB,CAAT,CAvB4D,CAyB9D;AACA;;AACE,SAAO,KAAKC,CAAL,CAAO+K,MAAP,CAAcW,EAAd,EAAkB1Q,CAAlB,EAAqB2Q,EAArB,CAAP;AACD,CA5BD;;AA8BAwI,EAAE,CAACtV,SAAH,CAAa8W,mBAAb,GAAmC,UAASrI,CAAT,EAAYuF,WAAZ,EAAuB+C,CAAvB,EAA0Bxa,GAA1B,EAA+B;AAChEyX,aAAS,GAAG,IAAIC,SAAJ,CAAcD,WAAd,EAAyBzX,GAAzB,CAAZyX;AACA,MAAIA,WAAS,CAACG,aAAVH,KAA4B,IAAhC,EACE,OAAOA,WAAS,CAACG,aAAjB;;AAEF,OAAK,IAAIvX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,QAAIoa,MAAJ;;AACA,QAAI;AACFA,YAAM,GAAG,KAAKN,aAAL,CAAmBjI,CAAnB,EAAsBuF,WAAtB,EAAiCpX,CAAjC,CAAT;AACD,KAFD,CAEE,OAAO6R,CAAP,EAAU;AACV;AACD;;AAED,QAAIuI,MAAM,CAACvS,EAAP,CAAUsS,CAAV,CAAJ,EACE,OAAOna,CAAP;AACH;;AACD,QAAM,IAAIb,KAAJ,CAAU,sCAAV,CAAN;AACD,CAjBD;;;ACjOA;;AAEA,MAAIkb,QAAQ,GAAG5a,OAAf;AAEA4a,UAAQ,CAACC,OAAT;AAAgB;AAAA;AAAAA;AAAA,IAA8BA,OAA9C;AACAD,UAAQ,CAAC7a,KAAT,GAAiB+T,SAAjB;;AACA8G,UAAQ,CAAC5B,IAAT;AAAa;AAAA;AAAA;AAAA,GAAb;;AACA4B,UAAQ,CAACzS,KAAT,GAAiB6L,OAAjB;AACA4G,UAAQ,CAAC1G,MAAT,GAAkB4G,QAAlB,EAEA;;AACAF,UAAQ,CAAClE,EAAT,GAAcqE,EAAd;AACAH,UAAQ,CAACI,KAAT;AAAc;AAAA,MAAd;;ACXG,IAAC/B,IAAE,GAAGgC,UAAG,CAACvE,EAAV","names":["assert","val","msg","Error","equal","assertEqual","l","r","utils","exports","toArray","enc","Array","isArray","slice","res","i","length","replace","push","parseInt","c","charCodeAt","hi","lo","zero2","word","toHex","toString","encode","arr","minAssert","minUtils","getNAF","num","w","bits","naf","Math","max","bitLength","fill","ws","k","clone","z","mod","andln","isOdd","isubn","iushrn","getJSF","k1","k2","jsf","d1","d2","m8","cmpn","m14","m24","u1","u2","cachedProperty","obj","name","computer","key","prototype","undefined","call","parseBytes","bytes","intFromLE","BN","BaseCurve","type","conf","p","red","prime","mont","zero","toRed","one","two","n","g","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","div","redN","_maxwellTrick","point","validate","_fixedNafMul","precomputed","doubles","_getDoubles","I","step","repr","j","nafW","a","jpoint","b","mixedAdd","points","neg","add","toP","_wnafMul","nafPoints","_getNAFPoints","wnd","acc","dblp","_wnafMulAdd","defW","coeffs","len","jacobianResult","wndWidth","comb","y","cmp","toJ","redNeg","index","ja","jb","tmp","BasePoint","curve","eq","decodePoint","byteLength","pointFromX","encodeCompressed","_encode","compact","x","getX","getY","isEven","concat","precompute","power","beta","_getBeta","_hasDoubles","ceil","dbl","Object","create","module","inherits","ctor","superCtor","super_","constructor","value","enumerable","writable","configurable","TempCtor","ShortCurve","Base","tinv","redInvm","zeroA","fromRed","threeA","sub","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","modn","lambda","betas","_getEndoRoots","lambdas","mul","redMul","basis","map","vec","_getEndoBasis","ntinv","s","redSqrt","l1","redAdd","l2","redSub","aprxSqrt","ushrn","floor","u","v","x1","y1","x2","y2","a0","b0","a1","b1","a2","b2","prevR","q","len1","sqr","len2","negative","_endoSplit","v1","v2","c1","divRound","c2","p1","p2","q1","q2","odd","redSqr","redIAdd","inf","ax","rhs","redISub","_endoWnafMulAdd","npoints","ncoeffs","split","ineg","Point","isRed","forceRed","fromJSON","pre","endoMul","toJSON","JSON","parse","obj2point","inspect","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","JPoint","zOne","zinv","zinv2","ay","pz2","z2","s1","s2","h","h2","h3","nz","pow","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","m","t","yyyy8","d","e","f","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","rx","xc","iadd","base","require$$0","short","require$$1","edwards","curves","PresetCurve","options","hash","defineCurve","defineProperty","get","sha256","sha384","sha512","HmacDRBG","predResist","outLen","outSize","minEntropy","hmacStrength","_reseed","reseedInterval","K","V","entropy","entropyEnc","nonce","nonceEnc","pers","persEnc","_init","init","seed","_update","_hmac","hmac","update","kmac","digest","reseed","addEnc","generate","temp","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","result","reason","getPrivate","umod","derive","sign","verify","signature","Signature","_importDER","recoveryParam","Position","place","getLength","buf","initial","octetLen","off","rmPadding","data","rlen","slen","constructLength","octets","log","LN2","toDER","backHalf","rand","EC","hasOwnProperty","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","ns2","iaddn","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","invm","canonical","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","elliptic","version","require$$2","require$$3","eddsa","_ec"],"sources":["/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/node_modules/node_modules/minimalistic-assert/index.js","/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/node_modules/node_modules/minimalistic-crypto-utils/lib/utils.js","/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/node_modules/node_modules/elliptic/lib/elliptic/utils.js","/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/node_modules/node_modules/elliptic/lib/elliptic/curve/base.js","/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/node_modules/node_modules/inherits/inherits_browser.js","/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/node_modules/node_modules/elliptic/lib/elliptic/curve/short.js","/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/node_modules/node_modules/elliptic/lib/elliptic/curve/index.js","/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/node_modules/node_modules/elliptic/lib/elliptic/curves.js","/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/node_modules/node_modules/hmac-drbg/lib/hmac-drbg.js","/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/node_modules/node_modules/elliptic/lib/elliptic/ec/key.js","/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/node_modules/node_modules/elliptic/lib/elliptic/ec/signature.js","/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/node_modules/node_modules/elliptic/lib/elliptic/ec/index.js","/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/node_modules/node_modules/elliptic/lib/elliptic.js","/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/node_modules/@ethersproject/signing-key/lib.esm/elliptic.js"],"sourcesContent":["module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map"]},"metadata":{},"sourceType":"module"}