{"ast":null,"code":"var _jsxFileName = \"/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/src/views/Home/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useNavigate } from 'react-router-dom';\nimport { ActiveGameLocation, JoinGameLocation, NewGameLocation } from 'Locations';\nimport MainLayout from 'layouts/MainLayout';\nimport { useMemo } from 'react';\nimport GameList from './components/GameList'; // import { useGames } from 'hooks/useGames';\n// import { GameStatus } from 'web3/constants';\n\n// import { useWallet } from 'contexts/WalletContext';\n// import { playingGame } from 'web3/battleshipGame';\nimport { getRandomInt } from 'utils';\nimport { testBoardWasm, testShotWasm } from 'zk/wasmTest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  content: {\n    display: 'flex',\n    gap: '200px',\n    marginInline: 'auto',\n    width: 'fit-content'\n  },\n  gameOption: {\n    alignItems: 'center',\n    display: 'flex',\n    gap: '49px',\n    marginInline: 'auto',\n    textAlign: 'left',\n    width: '387px'\n  },\n  gameOptions: {\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: '24px',\n    fontWeight: 400,\n    gap: '36px',\n    letterSpacing: '3.6px',\n    lineHeight: '34.68px',\n    marginTop: '221px'\n  },\n  isInGame: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: '48px',\n    fontWeight: 700,\n    height: '400px',\n    justifyContent: 'center',\n    letterSpacing: '3.6px'\n  },\n  left: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '551px'\n  },\n  rejoin: {\n    background: '#FF0055',\n    borderRadius: '3px',\n    color: '#FFFFFF',\n    cursor: 'pointer',\n    fontSize: '24px',\n    fontWeight: 700,\n    letterSpacing: '3.6px',\n    lineHeight: '34.68px',\n    margin: '48px auto 0 auto',\n    padding: '6px 12px',\n    textAlign: 'center'\n  },\n  right: {\n    width: '523px'\n  },\n  sectionHead: {\n    borderRadius: '3px',\n    color: '#FFFFFF',\n    fontSize: '24px',\n    fontWeight: 700,\n    letterSpacing: '3.6px',\n    lineHeight: '34.68px',\n    paddingBlock: '2px',\n    textAlign: 'center'\n  },\n  select: {\n    alignItems: 'center',\n    border: '4px solid #717C96',\n    borderRadius: '50%',\n    cursor: 'pointer',\n    display: 'flex',\n    height: '28px',\n    justifyContent: 'center',\n    width: '28px'\n  },\n  selected: {\n    background: '#000000',\n    borderRadius: '50%',\n    height: '20px',\n    width: '20px'\n  },\n  startButton: {\n    borderRadius: '3px',\n    color: '#FFFFFF',\n    fontSize: '24px',\n    fontWeight: 700,\n    letterSpacing: '3.6px',\n    lineHeight: '34.68px',\n    margin: '239px auto 0 auto',\n    paddingBlock: '2px',\n    textAlign: 'center',\n    width: '245px'\n  }\n}); // Options for how to proceed with game\n\nconst GAME_OPTIONS = ['HOST GAME', 'JOIN GAME', 'JOIN RANDOM GAME'];\nexport default function Home() {\n  _s();\n\n  // const { address, chainId, provider } = useWallet();\n  const navigate = useNavigate();\n  const styles = useStyles();\n  const [activeGame, setActiveGame] = useState(0); // if user is already in active game or not\n\n  const [gameOption, setGameOption] = useState(0); // host (create) / join / join random\n\n  const [selectedGame, setSelectedGame] = useState(null); // selected game from active list\n\n  const games = [];\n  /**\n   * Determine when to enable button at button for next stage of game process\n   */\n\n  const disabled = useMemo(() => {\n    return gameOption === 1 && !selectedGame || gameOption === 2 && !(games !== null && games !== void 0 && games.length);\n  }, [games, gameOption, selectedGame]);\n  /**\n   * Check whether user is currently in game\n   *\n   * @returns {null} - exit if address, chainId, or eth provider are undefined\n   */\n  // const playing = async () => {\n  //   if (!address || !chainId || !provider) return;\n  //   const playing = Number(await playingGame(chainId, provider, address));\n  //   setActiveGame(playing || -1);\n  // };\n\n  /**\n   * Select option from game menu\n   *\n   * @param {number} option - host (create), join, or join random\n   * @returns {null} - exit if option is already selected and clicked again\n   */\n\n  const handleOptionSelected = option => {\n    if (option === gameOption) return;else {\n      setGameOption(option);\n      setSelectedGame(null);\n    }\n  };\n  /**\n   * Continue to next step of game based on option selected\n   */\n\n\n  const startGame = () => {\n    switch (gameOption) {\n      // if first option is selected then go to new game location\n      case 0:\n        {\n          navigate(NewGameLocation);\n          break;\n        }\n      // if game is selected from list proceed to place ships and join\n\n      case 1:\n        {\n          if (!games || !selectedGame) break;\n          navigate(JoinGameLocation(`${selectedGame.id}`));\n          break;\n        }\n      // choose random game from list\n\n      case 2:\n        {\n          if (!games) break;\n          const randomIndex = getRandomInt(0, games.length - 1);\n          navigate(JoinGameLocation(`${games[randomIndex].id}`));\n          break;\n        }\n    }\n  };\n\n  useEffect(() => {// Check if game is already being played by user\n    // playing();\n    // eslint-disable-next-line\n    //}, [address, provider]);\n  });\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: true ?\n    /*#__PURE__*/\n    // <HomeSkeleton />\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => testBoardWasm(),\n        children: \"Run Board WASM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => testShotWasm(),\n        children: \"Run Shot WASM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : // Render rejoin button is player already in game\n    activeGame > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.isInGame,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"YOU ARE ALREADY IN A GAME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rejoin // Navigate back to active game\n        ,\n        onClick: () => navigate(ActiveGameLocation(`${activeGame}`)),\n        children: \"REJOIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.left,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.sectionHead,\n          style: {\n            background: '#FF0055'\n          },\n          children: \"PLAY GAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.gameOptions,\n          children: GAME_OPTIONS.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.gameOption,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.select,\n              onClick: () => handleOptionSelected(index),\n              children: index === gameOption && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.selected\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this)]\n          }, option, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.startButton,\n          onClick: () => startGame(),\n          style: {\n            background: disabled ? '#C7C7C7' : '#2861E9',\n            cursor: disabled ? 'not-allowed' : 'pointer'\n          },\n          children: \"START GAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.right,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.sectionHead,\n          style: {\n            background: '#717C96'\n          },\n          children: \"OPEN GAMES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GameList, {\n          games: games !== null && games !== void 0 ? games : [],\n          gameOption: gameOption,\n          selectedGame: selectedGame,\n          setSelectedGame: setSelectedGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"vSbS3yNuFu1QD9JDU5jwdPT56Lc=\", false, function () {\n  return [useNavigate, useStyles];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/src/views/Home/index.tsx"],"names":["useEffect","useState","createUseStyles","useNavigate","ActiveGameLocation","JoinGameLocation","NewGameLocation","MainLayout","useMemo","GameList","getRandomInt","testBoardWasm","testShotWasm","useStyles","content","display","gap","marginInline","width","gameOption","alignItems","textAlign","gameOptions","flexDirection","fontSize","fontWeight","letterSpacing","lineHeight","marginTop","isInGame","height","justifyContent","left","rejoin","background","borderRadius","color","cursor","margin","padding","right","sectionHead","paddingBlock","select","border","selected","startButton","GAME_OPTIONS","Home","navigate","styles","activeGame","setActiveGame","setGameOption","selectedGame","setSelectedGame","games","disabled","length","handleOptionSelected","option","startGame","id","randomIndex","map","index"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  ActiveGameLocation,\n  JoinGameLocation,\n  NewGameLocation,\n} from 'Locations';\nimport MainLayout from 'layouts/MainLayout';\nimport { useMemo } from 'react';\nimport { Game } from './types';\nimport GameList from './components/GameList';\n// import { useGames } from 'hooks/useGames';\n// import { GameStatus } from 'web3/constants';\nimport HomeSkeleton from './components/HomeSkeleton';\n// import { useWallet } from 'contexts/WalletContext';\n// import { playingGame } from 'web3/battleshipGame';\nimport { getRandomInt } from 'utils';\nimport { testBoardWasm, testShotWasm } from 'zk/wasmTest';\n\nconst useStyles = createUseStyles({\n  content: {\n    display: 'flex',\n    gap: '200px',\n    marginInline: 'auto',\n    width: 'fit-content',\n  },\n  gameOption: {\n    alignItems: 'center',\n    display: 'flex',\n    gap: '49px',\n    marginInline: 'auto',\n    textAlign: 'left',\n    width: '387px',\n  },\n  gameOptions: {\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: '24px',\n    fontWeight: 400,\n    gap: '36px',\n    letterSpacing: '3.6px',\n    lineHeight: '34.68px',\n    marginTop: '221px',\n  },\n  isInGame: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: '48px',\n    fontWeight: 700,\n    height: '400px',\n    justifyContent: 'center',\n    letterSpacing: '3.6px',\n  },\n  left: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '551px',\n  },\n  rejoin: {\n    background: '#FF0055',\n    borderRadius: '3px',\n    color: '#FFFFFF',\n    cursor: 'pointer',\n    fontSize: '24px',\n    fontWeight: 700,\n    letterSpacing: '3.6px',\n    lineHeight: '34.68px',\n    margin: '48px auto 0 auto',\n    padding: '6px 12px',\n    textAlign: 'center',\n  },\n  right: {\n    width: '523px',\n  },\n  sectionHead: {\n    borderRadius: '3px',\n    color: '#FFFFFF',\n    fontSize: '24px',\n    fontWeight: 700,\n    letterSpacing: '3.6px',\n    lineHeight: '34.68px',\n    paddingBlock: '2px',\n    textAlign: 'center',\n  },\n  select: {\n    alignItems: 'center',\n    border: '4px solid #717C96',\n    borderRadius: '50%',\n    cursor: 'pointer',\n    display: 'flex',\n    height: '28px',\n    justifyContent: 'center',\n    width: '28px',\n  },\n  selected: {\n    background: '#000000',\n    borderRadius: '50%',\n    height: '20px',\n    width: '20px',\n  },\n  startButton: {\n    borderRadius: '3px',\n    color: '#FFFFFF',\n    fontSize: '24px',\n    fontWeight: 700,\n    letterSpacing: '3.6px',\n    lineHeight: '34.68px',\n    margin: '239px auto 0 auto',\n    paddingBlock: '2px',\n    textAlign: 'center',\n    width: '245px',\n  },\n});\n\n// Options for how to proceed with game\nconst GAME_OPTIONS = ['HOST GAME', 'JOIN GAME', 'JOIN RANDOM GAME'];\n\nexport default function Home(): JSX.Element {\n  // const { address, chainId, provider } = useWallet();\n  const navigate = useNavigate();\n  const styles = useStyles();\n  const [activeGame, setActiveGame] = useState(0); // if user is already in active game or not\n  const [gameOption, setGameOption] = useState(0); // host (create) / join / join random\n  const [selectedGame, setSelectedGame] = useState<Game | null>(null); // selected game from active list\n\n  const games: any[] = [];\n\n  /**\n   * Determine when to enable button at button for next stage of game process\n   */\n  const disabled = useMemo(() => {\n    return (\n      (gameOption === 1 && !selectedGame) ||\n      (gameOption === 2 && !games?.length)\n    );\n  }, [games, gameOption, selectedGame]);\n\n  /**\n   * Check whether user is currently in game\n   *\n   * @returns {null} - exit if address, chainId, or eth provider are undefined\n   */\n  // const playing = async () => {\n  //   if (!address || !chainId || !provider) return;\n  //   const playing = Number(await playingGame(chainId, provider, address));\n  //   setActiveGame(playing || -1);\n  // };\n\n  /**\n   * Select option from game menu\n   *\n   * @param {number} option - host (create), join, or join random\n   * @returns {null} - exit if option is already selected and clicked again\n   */\n  const handleOptionSelected = (option: number) => {\n    if (option === gameOption) return;\n    else {\n      setGameOption(option);\n      setSelectedGame(null);\n    }\n  };\n\n  /**\n   * Continue to next step of game based on option selected\n   */\n  const startGame = () => {\n    switch (gameOption) {\n      // if first option is selected then go to new game location\n      case 0: {\n        navigate(NewGameLocation);\n        break;\n      }\n      // if game is selected from list proceed to place ships and join\n      case 1: {\n        if (!games || !selectedGame) break;\n        navigate(JoinGameLocation(`${selectedGame.id}`));\n        break;\n      }\n      // choose random game from list\n      case 2: {\n        if (!games) break;\n        const randomIndex = getRandomInt(0, games.length - 1);\n        navigate(JoinGameLocation(`${games[randomIndex].id}`));\n        break;\n      }\n    }\n  };\n\n  useEffect(() => {\n    // Check if game is already being played by user\n    // playing();\n    // eslint-disable-next-line\n    //}, [address, provider]);\n  });\n\n  return (\n    <MainLayout>\n      {/* {fetching && !refreshCount ? ( */}\n      {true ? (\n        // <HomeSkeleton />\n        <>\n          <button onClick={() => testBoardWasm()}>Run Board WASM</button>\n          <button onClick={() => testShotWasm()}>Run Shot WASM</button>\n        </>\n      ) : // Render rejoin button is player already in game\n      activeGame > 0 ? (\n        <div className={styles.isInGame}>\n          <div>YOU ARE ALREADY IN A GAME</div>\n          <div\n            className={styles.rejoin}\n            // Navigate back to active game\n            onClick={() => navigate(ActiveGameLocation(`${activeGame}`))}\n          >\n            REJOIN\n          </div>\n        </div>\n      ) : (\n        <div className={styles.content}>\n          <div className={styles.left}>\n            <div\n              className={styles.sectionHead}\n              style={{ background: '#FF0055' }}\n            >\n              PLAY GAME\n            </div>\n            <div className={styles.gameOptions}>\n              {GAME_OPTIONS.map((option, index) => (\n                <div className={styles.gameOption} key={option}>\n                  <div\n                    className={styles.select}\n                    onClick={() => handleOptionSelected(index)}\n                  >\n                    {index === gameOption && (\n                      <div className={styles.selected} />\n                    )}\n                  </div>\n                  <div>{option}</div>\n                </div>\n              ))}\n            </div>\n            <div\n              className={styles.startButton}\n              onClick={() => startGame()}\n              style={{\n                background: disabled ? '#C7C7C7' : '#2861E9',\n                cursor: disabled ? 'not-allowed' : 'pointer',\n              }}\n            >\n              START GAME\n            </div>\n          </div>\n          <div className={styles.right}>\n            <div\n              className={styles.sectionHead}\n              style={{ background: '#717C96' }}\n            >\n              OPEN GAMES\n            </div>\n\n            <GameList\n              games={games ?? []}\n              gameOption={gameOption}\n              selectedGame={selectedGame}\n              setSelectedGame={setSelectedGame}\n            />\n          </div>\n        </div>\n      )}\n    </MainLayout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}