{"ast":null,"code":"import $$observable from 'symbol-observable';\nimport { createRule } from 'jss';\n\nvar isObservable = function isObservable(value) {\n  return value && value[$$observable] && value === value[$$observable]();\n};\n\nvar observablePlugin = function observablePlugin(updateOptions) {\n  return {\n    onCreateRule: function onCreateRule(name, decl, options) {\n      if (!isObservable(decl)) return null;\n      var style$ = decl;\n      var rule = createRule(name, {}, options); // TODO\n      // Call `stream.subscribe()` returns a subscription, which should be explicitly\n      // unsubscribed from when we know this sheet is no longer needed.\n\n      style$.subscribe(function (style) {\n        for (var prop in style) {\n          rule.prop(prop, style[prop], updateOptions);\n        }\n      });\n      return rule;\n    },\n    onProcessRule: function onProcessRule(rule) {\n      if (rule && rule.type !== 'style') return;\n      var styleRule = rule;\n      var style = styleRule.style;\n\n      var _loop = function _loop(prop) {\n        var value = style[prop];\n        if (!isObservable(value)) return \"continue\";\n        delete style[prop];\n        value.subscribe({\n          next: function next(nextValue) {\n            styleRule.prop(prop, nextValue, updateOptions);\n          }\n        });\n      };\n\n      for (var prop in style) {\n        var _ret = _loop(prop);\n\n        if (_ret === \"continue\") continue;\n      }\n    }\n  };\n};\n\nexport default observablePlugin;","map":{"version":3,"sources":["/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/node_modules/jss-plugin-rule-value-observable/dist/jss-plugin-rule-value-observable.esm.js"],"names":["$$observable","createRule","isObservable","value","observablePlugin","updateOptions","onCreateRule","name","decl","options","style$","rule","subscribe","style","prop","onProcessRule","type","styleRule","_loop","next","nextValue","_ret"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,mBAAzB;AACA,SAASC,UAAT,QAA2B,KAA3B;;AAEA,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC9C,SAAOA,KAAK,IAAIA,KAAK,CAACH,YAAD,CAAd,IAAgCG,KAAK,KAAKA,KAAK,CAACH,YAAD,CAAL,EAAjD;AACD,CAFD;;AAIA,IAAII,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,aAA1B,EAAyC;AAC9D,SAAO;AACLC,IAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,OAAlC,EAA2C;AACvD,UAAI,CAACP,YAAY,CAACM,IAAD,CAAjB,EAAyB,OAAO,IAAP;AACzB,UAAIE,MAAM,GAAGF,IAAb;AACA,UAAIG,IAAI,GAAGV,UAAU,CAACM,IAAD,EAAO,EAAP,EAAWE,OAAX,CAArB,CAHuD,CAGb;AAC1C;AACA;;AAEAC,MAAAA,MAAM,CAACE,SAAP,CAAiB,UAAUC,KAAV,EAAiB;AAChC,aAAK,IAAIC,IAAT,IAAiBD,KAAjB,EAAwB;AACtBF,UAAAA,IAAI,CAACG,IAAL,CAAUA,IAAV,EAAgBD,KAAK,CAACC,IAAD,CAArB,EAA6BT,aAA7B;AACD;AACF,OAJD;AAKA,aAAOM,IAAP;AACD,KAdI;AAeLI,IAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBJ,IAAvB,EAA6B;AAC1C,UAAIA,IAAI,IAAIA,IAAI,CAACK,IAAL,KAAc,OAA1B,EAAmC;AACnC,UAAIC,SAAS,GAAGN,IAAhB;AACA,UAAIE,KAAK,GAAGI,SAAS,CAACJ,KAAtB;;AAEA,UAAIK,KAAK,GAAG,SAASA,KAAT,CAAeJ,IAAf,EAAqB;AAC/B,YAAIX,KAAK,GAAGU,KAAK,CAACC,IAAD,CAAjB;AACA,YAAI,CAACZ,YAAY,CAACC,KAAD,CAAjB,EAA0B,OAAO,UAAP;AAC1B,eAAOU,KAAK,CAACC,IAAD,CAAZ;AACAX,QAAAA,KAAK,CAACS,SAAN,CAAgB;AACdO,UAAAA,IAAI,EAAE,SAASA,IAAT,CAAcC,SAAd,EAAyB;AAC7BH,YAAAA,SAAS,CAACH,IAAV,CAAeA,IAAf,EAAqBM,SAArB,EAAgCf,aAAhC;AACD;AAHa,SAAhB;AAKD,OATD;;AAWA,WAAK,IAAIS,IAAT,IAAiBD,KAAjB,EAAwB;AACtB,YAAIQ,IAAI,GAAGH,KAAK,CAACJ,IAAD,CAAhB;;AAEA,YAAIO,IAAI,KAAK,UAAb,EAAyB;AAC1B;AACF;AApCI,GAAP;AAsCD,CAvCD;;AAyCA,eAAejB,gBAAf","sourcesContent":["import $$observable from 'symbol-observable';\nimport { createRule } from 'jss';\n\nvar isObservable = function isObservable(value) {\n  return value && value[$$observable] && value === value[$$observable]();\n};\n\nvar observablePlugin = function observablePlugin(updateOptions) {\n  return {\n    onCreateRule: function onCreateRule(name, decl, options) {\n      if (!isObservable(decl)) return null;\n      var style$ = decl;\n      var rule = createRule(name, {}, options); // TODO\n      // Call `stream.subscribe()` returns a subscription, which should be explicitly\n      // unsubscribed from when we know this sheet is no longer needed.\n\n      style$.subscribe(function (style) {\n        for (var prop in style) {\n          rule.prop(prop, style[prop], updateOptions);\n        }\n      });\n      return rule;\n    },\n    onProcessRule: function onProcessRule(rule) {\n      if (rule && rule.type !== 'style') return;\n      var styleRule = rule;\n      var style = styleRule.style;\n\n      var _loop = function _loop(prop) {\n        var value = style[prop];\n        if (!isObservable(value)) return \"continue\";\n        delete style[prop];\n        value.subscribe({\n          next: function next(nextValue) {\n            styleRule.prop(prop, nextValue, updateOptions);\n          }\n        });\n      };\n\n      for (var prop in style) {\n        var _ret = _loop(prop);\n\n        if (_ret === \"continue\") continue;\n      }\n    }\n  };\n};\n\nexport default observablePlugin;\n"]},"metadata":{},"sourceType":"module"}