{"ast":null,"code":"export const testBoardWasm = async () => {\n  const wasmPackage = await import('battlezipsv2-wasm');\n  await wasmPackage.default();\n  const res = wasmPackage.prove_board([[3, 3, true], [5, 4, false], [0, 1, false], [0, 5, true], [6, 1, false]]);\n  console.log('Res: ', res);\n  const verified = wasmPackage.verify_board(res.commitment, res.proof);\n  console.log('Verified: ', verified);\n};\nexport const testShotWasm = async () => {\n  const wasmPackage = await import('battlezipsv2-wasm');\n  await wasmPackage.default();\n  const res = wasmPackage.prove_shot(1, [[3, 3, true], [5, 4, false], [0, 1, false], [0, 5, true], [6, 1, false]], [3, 5]);\n  console.log('Res: ', res);\n  const verified = wasmPackage.verify_shot(res.commitment, res.proof);\n  console.log('Verified: ', verified);\n};","map":{"version":3,"sources":["/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/src/zk/wasmTest.ts"],"names":["testBoardWasm","wasmPackage","default","res","prove_board","console","log","verified","verify_board","commitment","proof","testShotWasm","prove_shot","verify_shot"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,YAAY;AACrC,QAAMC,WAAW,GAAG,MAAM,OAAO,mBAAP,CAA1B;AACA,QAAMA,WAAW,CAACC,OAAZ,EAAN;AACA,QAAMC,GAAG,GAAGF,WAAW,CAACG,WAAZ,CAAwB,CAChC,CAAC,CAAD,EAAI,CAAJ,EAAO,IAAP,CADgC,EAEhC,CAAC,CAAD,EAAI,CAAJ,EAAO,KAAP,CAFgC,EAGhC,CAAC,CAAD,EAAI,CAAJ,EAAO,KAAP,CAHgC,EAIhC,CAAC,CAAD,EAAI,CAAJ,EAAO,IAAP,CAJgC,EAKhC,CAAC,CAAD,EAAI,CAAJ,EAAO,KAAP,CALgC,CAAxB,CAAZ;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,GAArB;AACA,QAAMI,QAAQ,GAAGN,WAAW,CAACO,YAAZ,CAAyBL,GAAG,CAACM,UAA7B,EAAyCN,GAAG,CAACO,KAA7C,CAAjB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,QAA1B;AACH,CAbM;AAeP,OAAO,MAAMI,YAAY,GAAG,YAAY;AACpC,QAAMV,WAAW,GAAG,MAAM,OAAO,mBAAP,CAA1B;AACA,QAAMA,WAAW,CAACC,OAAZ,EAAN;AACA,QAAMC,GAAG,GAAGF,WAAW,CAACW,UAAZ,CAAuB,CAAvB,EAA0B,CAClC,CAAC,CAAD,EAAI,CAAJ,EAAO,IAAP,CADkC,EAElC,CAAC,CAAD,EAAI,CAAJ,EAAO,KAAP,CAFkC,EAGlC,CAAC,CAAD,EAAI,CAAJ,EAAO,KAAP,CAHkC,EAIlC,CAAC,CAAD,EAAI,CAAJ,EAAO,IAAP,CAJkC,EAKlC,CAAC,CAAD,EAAI,CAAJ,EAAO,KAAP,CALkC,CAA1B,EAMT,CAAC,CAAD,EAAI,CAAJ,CANS,CAAZ;AAOAP,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,GAArB;AACA,QAAMI,QAAQ,GAAGN,WAAW,CAACY,WAAZ,CAAwBV,GAAG,CAACM,UAA5B,EAAwCN,GAAG,CAACO,KAA5C,CAAjB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,QAA1B;AACH,CAbM","sourcesContent":["export const testBoardWasm = async () => {\n    const wasmPackage = await import('battlezipsv2-wasm');\n    await wasmPackage.default();\n    const res = wasmPackage.prove_board([\n        [3, 3, true],\n        [5, 4, false],\n        [0, 1, false],\n        [0, 5, true],\n        [6, 1, false]\n    ]);\n    console.log('Res: ', res);\n    const verified = wasmPackage.verify_board(res.commitment, res.proof);\n    console.log('Verified: ', verified);\n}\n\nexport const testShotWasm = async () => {\n    const wasmPackage = await import('battlezipsv2-wasm');\n    await wasmPackage.default();\n    const res = wasmPackage.prove_shot(1, [\n        [3, 3, true],\n        [5, 4, false],\n        [0, 1, false],\n        [0, 5, true],\n        [6, 1, false]\n    ], [3, 5]);\n    console.log('Res: ', res);\n    const verified = wasmPackage.verify_shot(res.commitment, res.proof);\n    console.log('Verified: ', verified);\n}"]},"metadata":{},"sourceType":"module"}