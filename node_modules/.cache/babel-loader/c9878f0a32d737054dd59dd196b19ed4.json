{"ast":null,"code":"function shouldThrowError(_useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params);\n  }\n\n  return !!_useErrorBoundary;\n}\n\nexport { shouldThrowError };","map":{"version":3,"mappings":"AAAO,SAASA,gBAAT,CACLC,iBADK,EAELC,MAFK,EAGI;AACT;AACA,MAAI,OAAOD,iBAAP,KAA6B,UAAjC,EAA6C;AAC3C,WAAOA,iBAAiB,CAAC,GAAGC,MAAJ,CAAxB;AACD;;AAED,SAAO,CAAC,CAACD,iBAAT;AACD","names":["shouldThrowError","_useErrorBoundary","params"],"sources":["/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/node_modules/@tanstack/react-query/src/utils.ts"],"sourcesContent":["export function shouldThrowError<T extends (...args: any[]) => boolean>(\n  _useErrorBoundary: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params)\n  }\n\n  return !!_useErrorBoundary\n}\n"]},"metadata":{},"sourceType":"module"}