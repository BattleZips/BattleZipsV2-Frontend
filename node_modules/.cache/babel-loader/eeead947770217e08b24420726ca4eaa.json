{"ast":null,"code":"\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n  let data = null;\n\n  try {\n    data = JSON.parse(json);\n  } catch (error) {\n    return false;\n  }\n\n  return data.encseed && data.ethaddr;\n}\nexport function isKeystoreWallet(json) {\n  let data = null;\n\n  try {\n    data = JSON.parse(json);\n  } catch (error) {\n    return false;\n  }\n\n  if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n    return false;\n  } // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n\n\n  return true;\n} //export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\n\nexport function getJsonWalletAddress(json) {\n  if (isCrowdsaleWallet(json)) {\n    try {\n      return getAddress(JSON.parse(json).ethaddr);\n    } catch (error) {\n      return null;\n    }\n  }\n\n  if (isKeystoreWallet(json)) {\n    try {\n      return getAddress(JSON.parse(json).address);\n    } catch (error) {\n      return null;\n    }\n  }\n\n  return null;\n}","map":{"version":3,"mappings":"AAAA;;AAEA,SAASA,UAAT,QAA2B,wBAA3B;AAGA,OAAM,SAAUC,iBAAV,CAA4BC,IAA5B,EAAwC;AAC1C,MAAIC,IAAI,GAAQ,IAAhB;;AACA,MAAI;AACAA,QAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAP;AACH,GAFD,CAEE,OAAOI,KAAP,EAAc;AAAE,WAAO,KAAP;AAAe;;AAEjC,SAAQH,IAAI,CAACI,OAAL,IAAgBJ,IAAI,CAACK,OAA7B;AACH;AAED,OAAM,SAAUC,gBAAV,CAA2BP,IAA3B,EAAuC;AACzC,MAAIC,IAAI,GAAQ,IAAhB;;AACA,MAAI;AACAA,QAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAP;AACH,GAFD,CAEE,OAAOI,KAAP,EAAc;AAAE,WAAO,KAAP;AAAe;;AAEjC,MAAI,CAACH,IAAI,CAACO,OAAN,IAAiBC,QAAQ,CAACR,IAAI,CAACO,OAAN,CAAR,KAA2BP,IAAI,CAACO,OAAjD,IAA4DC,QAAQ,CAACR,IAAI,CAACO,OAAN,CAAR,KAA2B,CAA3F,EAA8F;AAC1F,WAAO,KAAP;AACH,GARwC,CAUzC;;;AACA,SAAO,IAAP;AACH,C,CAED;AACA;AACA;;AAEA,OAAM,SAAUE,oBAAV,CAA+BV,IAA/B,EAA2C;AAC7C,MAAID,iBAAiB,CAACC,IAAD,CAArB,EAA6B;AACzB,QAAI;AACA,aAAOF,UAAU,CAACI,IAAI,CAACC,KAAL,CAAWH,IAAX,EAAiBM,OAAlB,CAAjB;AACH,KAFD,CAEE,OAAOF,KAAP,EAAc;AAAE,aAAO,IAAP;AAAc;AACnC;;AAED,MAAIG,gBAAgB,CAACP,IAAD,CAApB,EAA4B;AACxB,QAAI;AACA,aAAOF,UAAU,CAACI,IAAI,CAACC,KAAL,CAAWH,IAAX,EAAiBW,OAAlB,CAAjB;AACH,KAFD,CAEE,OAAOP,KAAP,EAAc;AAAE,aAAO,IAAP;AAAc;AACnC;;AAED,SAAO,IAAP;AACH","names":["getAddress","isCrowdsaleWallet","json","data","JSON","parse","error","encseed","ethaddr","isKeystoreWallet","version","parseInt","getJsonWalletAddress","address"],"sources":["/Users/ianbrighton/Documents/Mach 34/BattleZipsV2/BattleZipsV2-Frontend/node_modules/@ethersproject/json-wallets/src.ts/inspect.ts"],"sourcesContent":["\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\n\n\nexport function isCrowdsaleWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    return (data.encseed && data.ethaddr);\n}\n\nexport function isKeystoreWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\n\nexport function getJsonWalletAddress(json: string): string {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        } catch (error) { return null; }\n    }\n\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        } catch (error) { return null; }\n    }\n\n    return null;\n}\n\n"]},"metadata":{},"sourceType":"module"}